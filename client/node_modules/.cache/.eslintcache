<<<<<<< HEAD
[{"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\index.js":"1","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\App.js":"2","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Store.js":"3","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Router\\DirectionURL.js":"4","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\DistrictReducer.js":"5","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\LoginStatusReducer.js":"6","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ProvinceReducer.js":"7","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\TypeStatusReducer.js":"8","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\TypeProductValueReducer.js":"9","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ListShiftReducer.js":"10","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\RoleReducer.js":"11","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ConfirmModalReducer.js":"12","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\InfoUserReducer.js":"13","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ObjectEditShiftReducer.js":"14","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\chooseTypeProduct.js":"15","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\typeProductReducer.js":"16","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ListProductReducer.js":"17","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusEditShiftReducer.js":"18","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusConfirmReducer.js":"19","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusModalConfirmPassword.js":"20","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddShiftReducer.js":"21","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusDarkModeReducer.js":"22","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusIsAddTypeReducer.js":"23","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddTypeReducer.js":"24","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusYesConfirmReducer.js":"25","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusDeleteConfirmReducer.js":"26","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusPayMoneyStatus.js":"27","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddEmployeeReducer.js":"28","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusUpdateGoodReducer.js":"29","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusUpdateEmployeeReducer.js":"30","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusEditTypeReducer.js":"31","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Body.js":"32","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\Login.js":"33","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\LoginWithEmployee.js":"34","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\Register.js":"35","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\ForgotPassword.js":"36","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Router\\DashboardURL.js":"37","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\ModalConfirmPassword.js":"38","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Partials\\SideNavBar.js":"39","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodManager.js":"40","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\ReiceiptManager.js":"41","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeeManager.js":"42","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\DashBoard.js":"43","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\GoodImport.js":"44","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\Profile.js":"45","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\SellProduct.js":"46","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\EditTypeModal.js":"47","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\UpdateGoodModal.js":"48","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\PayMoneyModal.js":"49","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\Tabs.js":"50","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\Regulation.js":"51","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ModalAdd.js":"52","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\ComponentToPrint.js":"53","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ListShift.js":"54","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileSetting.js":"55","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileDetail.js":"56","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ChangePassword.js":"57","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileHeader.js":"58","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\ConfirmModal.js":"59","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\AddTypeModal.js":"60","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\DarkMode.js":"61","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\GroupButton.js":"62","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\Statistic.js":"63","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\Calendar.js":"64","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\fakeData.js":"65","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\UpdateEmployeeModal.js":"66","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\AddEmployeeModal.js":"67","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\EmployeeTableHeader.js":"68","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\EmployeeMoreMenu.js":"69","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\EmployeeToolbar.js":"70","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\Scrollbar.js":"71","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\Label.js":"72","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\SearchNotFound.js":"73","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\Page.js":"74","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\SearchBar.js":"75","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\GoodTable.js":"76","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\BaseOptionChart.js":"77"},{"size":309,"mtime":1634653035214,"results":"78","hashOfConfig":"79"},{"size":2107,"mtime":1635259547299,"results":"80","hashOfConfig":"79"},{"size":3031,"mtime":1635260224145,"results":"81","hashOfConfig":"79"},{"size":2219,"mtime":1634653035202,"results":"82","hashOfConfig":"79"},{"size":376,"mtime":1634661219450,"results":"83","hashOfConfig":"79"},{"size":295,"mtime":1634653035195,"results":"84","hashOfConfig":"79"},{"size":384,"mtime":1634653035196,"results":"85","hashOfConfig":"79"},{"size":343,"mtime":1634653035200,"results":"86","hashOfConfig":"79"},{"size":668,"mtime":1635260224145,"results":"87","hashOfConfig":"79"},{"size":1665,"mtime":1635263716280,"results":"88","hashOfConfig":"79"},{"size":316,"mtime":1634653035196,"results":"89","hashOfConfig":"79"},{"size":482,"mtime":1634653035193,"results":"90","hashOfConfig":"79"},{"size":2090,"mtime":1635268077432,"results":"91","hashOfConfig":"79"},{"size":340,"mtime":1634653035196,"results":"92","hashOfConfig":"79"},{"size":358,"mtime":1634653035201,"results":"93","hashOfConfig":"79"},{"size":383,"mtime":1634653127803,"results":"94","hashOfConfig":"79"},{"size":1562,"mtime":1634653035195,"results":"95","hashOfConfig":"79"},{"size":312,"mtime":1634653035198,"results":"96","hashOfConfig":"79"},{"size":303,"mtime":1634653035197,"results":"97","hashOfConfig":"79"},{"size":370,"mtime":1634653035199,"results":"98","hashOfConfig":"79"},{"size":303,"mtime":1634653035196,"results":"99","hashOfConfig":"79"},{"size":302,"mtime":1634653035197,"results":"100","hashOfConfig":"79"},{"size":372,"mtime":1634653035198,"results":"101","hashOfConfig":"79"},{"size":304,"mtime":1634653035197,"results":"102","hashOfConfig":"79"},{"size":350,"mtime":1634653035200,"results":"103","hashOfConfig":"79"},{"size":390,"mtime":1634653035198,"results":"104","hashOfConfig":"79"},{"size":324,"mtime":1634653035199,"results":"105","hashOfConfig":"79"},{"size":324,"mtime":1634653035196,"results":"106","hashOfConfig":"79"},{"size":319,"mtime":1634653035200,"results":"107","hashOfConfig":"79"},{"size":339,"mtime":1634653035199,"results":"108","hashOfConfig":"79"},{"size":309,"mtime":1634653035198,"results":"109","hashOfConfig":"79"},{"size":1680,"mtime":1634653035155,"results":"110","hashOfConfig":"79"},{"size":15046,"mtime":1635263586276,"results":"111","hashOfConfig":"79"},{"size":8716,"mtime":1635076012732,"results":"112","hashOfConfig":"79"},{"size":16761,"mtime":1635075988082,"results":"113","hashOfConfig":"79"},{"size":13358,"mtime":1635075970132,"results":"114","hashOfConfig":"79"},{"size":1354,"mtime":1634653035202,"results":"115","hashOfConfig":"79"},{"size":1956,"mtime":1634653035172,"results":"116","hashOfConfig":"79"},{"size":7008,"mtime":1635248982234,"results":"117","hashOfConfig":"79"},{"size":7264,"mtime":1634653035162,"results":"118","hashOfConfig":"79"},{"size":246,"mtime":1634653035177,"results":"119","hashOfConfig":"79"},{"size":15121,"mtime":1634653035157,"results":"120","hashOfConfig":"79"},{"size":5516,"mtime":1634653035156,"results":"121","hashOfConfig":"79"},{"size":25801,"mtime":1635260224142,"results":"122","hashOfConfig":"79"},{"size":2766,"mtime":1635257584029,"results":"123","hashOfConfig":"79"},{"size":6762,"mtime":1635061130258,"results":"124","hashOfConfig":"79"},{"size":6357,"mtime":1635260224141,"results":"125","hashOfConfig":"79"},{"size":25067,"mtime":1634653035166,"results":"126","hashOfConfig":"79"},{"size":13994,"mtime":1634693084642,"results":"127","hashOfConfig":"79"},{"size":1269,"mtime":1634694513283,"results":"128","hashOfConfig":"79"},{"size":7029,"mtime":1635248571075,"results":"129","hashOfConfig":"79"},{"size":12299,"mtime":1635257013275,"results":"130","hashOfConfig":"79"},{"size":714,"mtime":1634653035178,"results":"131","hashOfConfig":"79"},{"size":6699,"mtime":1635255796966,"results":"132","hashOfConfig":"79"},{"size":892,"mtime":1634661943839,"results":"133","hashOfConfig":"79"},{"size":15193,"mtime":1635268069114,"results":"134","hashOfConfig":"79"},{"size":6766,"mtime":1634661971885,"results":"135","hashOfConfig":"79"},{"size":3776,"mtime":1634801637867,"results":"136","hashOfConfig":"79"},{"size":3507,"mtime":1634653035163,"results":"137","hashOfConfig":"79"},{"size":8331,"mtime":1635260224139,"results":"138","hashOfConfig":"79"},{"size":3134,"mtime":1634653035174,"results":"139","hashOfConfig":"79"},{"size":2783,"mtime":1634653035157,"results":"140","hashOfConfig":"79"},{"size":1849,"mtime":1634653035157,"results":"141","hashOfConfig":"79"},{"size":1607,"mtime":1634653035155,"results":"142","hashOfConfig":"79"},{"size":953,"mtime":1634653035162,"results":"143","hashOfConfig":"79"},{"size":14258,"mtime":1634693020329,"results":"144","hashOfConfig":"79"},{"size":14072,"mtime":1634693071555,"results":"145","hashOfConfig":"79"},{"size":2024,"mtime":1634653035159,"results":"146","hashOfConfig":"79"},{"size":3377,"mtime":1634653035159,"results":"147","hashOfConfig":"79"},{"size":2489,"mtime":1634653035159,"results":"148","hashOfConfig":"79"},{"size":1541,"mtime":1634653035161,"results":"149","hashOfConfig":"79"},{"size":2458,"mtime":1634653035160,"results":"150","hashOfConfig":"79"},{"size":0,"mtime":1634653035161,"results":"151","hashOfConfig":"79"},{"size":482,"mtime":1634653035160,"results":"152","hashOfConfig":"79"},{"size":5541,"mtime":1634653035165,"results":"153","hashOfConfig":"79"},{"size":14815,"mtime":1635260224143,"results":"154","hashOfConfig":"79"},{"size":5649,"mtime":1634653035155,"results":"155","hashOfConfig":"79"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ieljoc",{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\index.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\App.js",["310"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Store.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Router\\DirectionURL.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\DistrictReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\LoginStatusReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ProvinceReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\TypeStatusReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\TypeProductValueReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ListShiftReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\RoleReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ConfirmModalReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\InfoUserReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ObjectEditShiftReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\chooseTypeProduct.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\typeProductReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ListProductReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusEditShiftReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusConfirmReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusModalConfirmPassword.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddShiftReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusDarkModeReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusIsAddTypeReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddTypeReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusYesConfirmReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusDeleteConfirmReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusPayMoneyStatus.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddEmployeeReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusUpdateGoodReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusUpdateEmployeeReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusEditTypeReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Body.js",["311"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\Login.js",["312","313","314","315"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\LoginWithEmployee.js",["316"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\Register.js",["317","318","319"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\ForgotPassword.js",["320","321","322"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Router\\DashboardURL.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\ModalConfirmPassword.js",["323"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Partials\\SideNavBar.js",["324","325","326","327"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodManager.js",["328","329","330"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\ReiceiptManager.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeeManager.js",["331","332","333","334","335","336","337","338","339","340"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\DashBoard.js",["341"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\GoodImport.js",["342","343","344","345","346","347","348","349"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\Profile.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\SellProduct.js",["350","351","352","353"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\EditTypeModal.js",["354","355","356","357"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\UpdateGoodModal.js",["358","359","360","361","362","363","364","365","366","367","368","369"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\PayMoneyModal.js",["370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\Tabs.js",["391"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\Regulation.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ModalAdd.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\ComponentToPrint.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ListShift.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileSetting.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileDetail.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ChangePassword.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileHeader.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\ConfirmModal.js",["392","393","394","395","396","397"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\AddTypeModal.js",["398","399","400","401","402","403","404","405"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\DarkMode.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\GroupButton.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\Statistic.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\Calendar.js",["406","407","408"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\fakeData.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\UpdateEmployeeModal.js",["409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\AddEmployeeModal.js",["430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\EmployeeTableHeader.js",["451","452"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\EmployeeMoreMenu.js",["453","454","455"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\EmployeeToolbar.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\Scrollbar.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\Label.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\SearchNotFound.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\Page.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\SearchBar.js",["456","457","458","459"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\GoodTable.js",["460","461","462","463","464","465","466"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\BaseOptionChart.js",[],{"ruleId":"467","severity":1,"message":"468","line":12,"column":3,"nodeType":"469","messageId":"470","endLine":15,"endColumn":4},{"ruleId":"471","severity":1,"message":"472","line":3,"column":5,"nodeType":"473","messageId":"474","endLine":3,"endColumn":12},{"ruleId":"471","severity":1,"message":"475","line":42,"column":31,"nodeType":"473","messageId":"474","endLine":42,"endColumn":35},{"ruleId":"471","severity":1,"message":"475","line":108,"column":35,"nodeType":"473","messageId":"474","endLine":108,"endColumn":39},{"ruleId":"476","severity":1,"message":"477","line":148,"column":28,"nodeType":"478","messageId":"479","endLine":148,"endColumn":29,"suggestions":"480"},{"ruleId":"476","severity":1,"message":"477","line":148,"column":44,"nodeType":"478","messageId":"479","endLine":148,"endColumn":45,"suggestions":"481"},{"ruleId":"471","severity":1,"message":"482","line":13,"column":8,"nodeType":"473","messageId":"474","endLine":13,"endColumn":13},{"ruleId":"471","severity":1,"message":"483","line":14,"column":8,"nodeType":"473","messageId":"474","endLine":14,"endColumn":15},{"ruleId":"476","severity":1,"message":"477","line":134,"column":30,"nodeType":"478","messageId":"479","endLine":134,"endColumn":31,"suggestions":"484"},{"ruleId":"476","severity":1,"message":"477","line":134,"column":46,"nodeType":"478","messageId":"479","endLine":134,"endColumn":47,"suggestions":"485"},{"ruleId":"471","severity":1,"message":"483","line":6,"column":8,"nodeType":"473","messageId":"474","endLine":6,"endColumn":15},{"ruleId":"476","severity":1,"message":"477","line":116,"column":28,"nodeType":"478","messageId":"479","endLine":116,"endColumn":29,"suggestions":"486"},{"ruleId":"476","severity":1,"message":"477","line":116,"column":44,"nodeType":"478","messageId":"479","endLine":116,"endColumn":45,"suggestions":"487"},{"ruleId":"471","severity":1,"message":"488","line":9,"column":11,"nodeType":"473","messageId":"474","endLine":9,"endColumn":32},{"ruleId":"489","severity":1,"message":"490","line":48,"column":29,"nodeType":"491","endLine":48,"endColumn":159},{"ruleId":"492","severity":1,"message":"493","line":55,"column":57,"nodeType":"494","messageId":"495","endLine":55,"endColumn":59},{"ruleId":"492","severity":1,"message":"493","line":71,"column":57,"nodeType":"494","messageId":"495","endLine":71,"endColumn":59},{"ruleId":"496","severity":1,"message":"497","line":124,"column":25,"nodeType":"491","endLine":124,"endColumn":131},{"ruleId":"471","severity":1,"message":"498","line":2,"column":10,"nodeType":"473","messageId":"474","endLine":2,"endColumn":18},{"ruleId":"471","severity":1,"message":"499","line":14,"column":7,"nodeType":"473","messageId":"474","endLine":14,"endColumn":14},{"ruleId":"471","severity":1,"message":"500","line":37,"column":9,"nodeType":"473","messageId":"474","endLine":37,"endColumn":13},{"ruleId":"471","severity":1,"message":"501","line":2,"column":8,"nodeType":"473","messageId":"474","endLine":2,"endColumn":12},{"ruleId":"471","severity":1,"message":"502","line":3,"column":8,"nodeType":"473","messageId":"474","endLine":3,"endColumn":13},{"ruleId":"471","severity":1,"message":"503","line":4,"column":8,"nodeType":"473","messageId":"474","endLine":4,"endColumn":17},{"ruleId":"471","severity":1,"message":"504","line":5,"column":8,"nodeType":"473","messageId":"474","endLine":5,"endColumn":22},{"ruleId":"471","severity":1,"message":"505","line":7,"column":10,"nodeType":"473","messageId":"474","endLine":7,"endColumn":22},{"ruleId":"471","severity":1,"message":"506","line":25,"column":8,"nodeType":"473","messageId":"474","endLine":25,"endColumn":23},{"ruleId":"471","severity":1,"message":"507","line":48,"column":5,"nodeType":"473","messageId":"474","endLine":48,"endColumn":15},{"ruleId":"471","severity":1,"message":"508","line":109,"column":121,"nodeType":"473","messageId":"474","endLine":109,"endColumn":131},{"ruleId":"509","severity":1,"message":"510","line":166,"column":21,"nodeType":"511","messageId":"512","endLine":169,"endColumn":23},{"ruleId":"471","severity":1,"message":"508","line":207,"column":121,"nodeType":"473","messageId":"474","endLine":207,"endColumn":131},{"ruleId":"471","severity":1,"message":"513","line":8,"column":8,"nodeType":"473","messageId":"474","endLine":8,"endColumn":19},{"ruleId":"471","severity":1,"message":"514","line":6,"column":10,"nodeType":"473","messageId":"474","endLine":6,"endColumn":20},{"ruleId":"471","severity":1,"message":"515","line":6,"column":30,"nodeType":"473","messageId":"474","endLine":6,"endColumn":35},{"ruleId":"471","severity":1,"message":"516","line":11,"column":8,"nodeType":"473","messageId":"474","endLine":11,"endColumn":17},{"ruleId":"517","severity":1,"message":"518","line":182,"column":17,"nodeType":"473","messageId":"519","endLine":182,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":227,"column":44,"nodeType":"494","messageId":"495","endLine":227,"endColumn":46},{"ruleId":"492","severity":1,"message":"493","line":256,"column":140,"nodeType":"494","messageId":"495","endLine":256,"endColumn":142},{"ruleId":"492","severity":1,"message":"493","line":451,"column":69,"nodeType":"494","messageId":"495","endLine":451,"endColumn":71},{"ruleId":"492","severity":1,"message":"520","line":480,"column":81,"nodeType":"494","messageId":"495","endLine":480,"endColumn":83},{"ruleId":"521","severity":1,"message":"522","line":50,"column":159,"nodeType":"523","messageId":"495","endLine":50,"endColumn":167},{"ruleId":"524","severity":1,"message":"525","line":56,"column":78,"nodeType":"526","messageId":"527","endLine":56,"endColumn":80},{"ruleId":"492","severity":1,"message":"493","line":60,"column":60,"nodeType":"494","messageId":"495","endLine":60,"endColumn":62},{"ruleId":"496","severity":1,"message":"497","line":105,"column":48,"nodeType":"491","endLine":105,"endColumn":60},{"ruleId":"471","severity":1,"message":"528","line":2,"column":43,"nodeType":"473","messageId":"474","endLine":2,"endColumn":52},{"ruleId":"471","severity":1,"message":"529","line":4,"column":10,"nodeType":"473","messageId":"474","endLine":4,"endColumn":23},{"ruleId":"471","severity":1,"message":"530","line":9,"column":8,"nodeType":"473","messageId":"474","endLine":9,"endColumn":20},{"ruleId":"517","severity":1,"message":"518","line":91,"column":17,"nodeType":"473","messageId":"519","endLine":91,"endColumn":18},{"ruleId":"471","severity":1,"message":"531","line":2,"column":28,"nodeType":"473","messageId":"474","endLine":2,"endColumn":35},{"ruleId":"471","severity":1,"message":"532","line":2,"column":54,"nodeType":"473","messageId":"474","endLine":2,"endColumn":57},{"ruleId":"471","severity":1,"message":"533","line":2,"column":59,"nodeType":"473","messageId":"474","endLine":2,"endColumn":70},{"ruleId":"471","severity":1,"message":"514","line":2,"column":80,"nodeType":"473","messageId":"474","endLine":2,"endColumn":90},{"ruleId":"471","severity":1,"message":"529","line":4,"column":10,"nodeType":"473","messageId":"474","endLine":4,"endColumn":23},{"ruleId":"471","severity":1,"message":"534","line":4,"column":25,"nodeType":"473","messageId":"474","endLine":4,"endColumn":31},{"ruleId":"471","severity":1,"message":"535","line":5,"column":8,"nodeType":"473","messageId":"474","endLine":5,"endColumn":13},{"ruleId":"471","severity":1,"message":"536","line":6,"column":10,"nodeType":"473","messageId":"474","endLine":6,"endColumn":18},{"ruleId":"471","severity":1,"message":"516","line":13,"column":8,"nodeType":"473","messageId":"474","endLine":13,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":182,"column":127,"nodeType":"494","messageId":"495","endLine":182,"endColumn":129},{"ruleId":"492","severity":1,"message":"493","line":385,"column":72,"nodeType":"494","messageId":"495","endLine":385,"endColumn":74},{"ruleId":"492","severity":1,"message":"520","line":414,"column":85,"nodeType":"494","messageId":"495","endLine":414,"endColumn":87},{"ruleId":"471","severity":1,"message":"531","line":2,"column":28,"nodeType":"473","messageId":"474","endLine":2,"endColumn":35},{"ruleId":"471","severity":1,"message":"532","line":2,"column":54,"nodeType":"473","messageId":"474","endLine":2,"endColumn":57},{"ruleId":"471","severity":1,"message":"533","line":2,"column":59,"nodeType":"473","messageId":"474","endLine":2,"endColumn":70},{"ruleId":"471","severity":1,"message":"514","line":2,"column":80,"nodeType":"473","messageId":"474","endLine":2,"endColumn":90},{"ruleId":"471","severity":1,"message":"529","line":4,"column":10,"nodeType":"473","messageId":"474","endLine":4,"endColumn":23},{"ruleId":"471","severity":1,"message":"534","line":4,"column":25,"nodeType":"473","messageId":"474","endLine":4,"endColumn":31},{"ruleId":"471","severity":1,"message":"535","line":5,"column":8,"nodeType":"473","messageId":"474","endLine":5,"endColumn":13},{"ruleId":"471","severity":1,"message":"536","line":6,"column":10,"nodeType":"473","messageId":"474","endLine":6,"endColumn":18},{"ruleId":"471","severity":1,"message":"537","line":7,"column":8,"nodeType":"473","messageId":"474","endLine":7,"endColumn":14},{"ruleId":"471","severity":1,"message":"538","line":8,"column":8,"nodeType":"473","messageId":"474","endLine":8,"endColumn":16},{"ruleId":"471","severity":1,"message":"539","line":9,"column":8,"nodeType":"473","messageId":"474","endLine":9,"endColumn":19},{"ruleId":"471","severity":1,"message":"482","line":11,"column":8,"nodeType":"473","messageId":"474","endLine":11,"endColumn":13},{"ruleId":"471","severity":1,"message":"540","line":14,"column":8,"nodeType":"473","messageId":"474","endLine":14,"endColumn":28},{"ruleId":"471","severity":1,"message":"541","line":15,"column":8,"nodeType":"473","messageId":"474","endLine":15,"endColumn":22},{"ruleId":"471","severity":1,"message":"542","line":16,"column":8,"nodeType":"473","messageId":"474","endLine":16,"endColumn":18},{"ruleId":"471","severity":1,"message":"543","line":17,"column":8,"nodeType":"473","messageId":"474","endLine":17,"endColumn":22},{"ruleId":"471","severity":1,"message":"544","line":18,"column":10,"nodeType":"473","messageId":"474","endLine":18,"endColumn":26},{"ruleId":"471","severity":1,"message":"545","line":19,"column":8,"nodeType":"473","messageId":"474","endLine":19,"endColumn":18},{"ruleId":"471","severity":1,"message":"546","line":21,"column":5,"nodeType":"473","messageId":"474","endLine":21,"endColumn":17},{"ruleId":"471","severity":1,"message":"547","line":25,"column":5,"nodeType":"473","messageId":"474","endLine":25,"endColumn":12},{"ruleId":"492","severity":1,"message":"493","line":81,"column":127,"nodeType":"494","messageId":"495","endLine":81,"endColumn":129},{"ruleId":"524","severity":1,"message":"548","line":18,"column":42,"nodeType":"526","messageId":"549","endLine":18,"endColumn":44},{"ruleId":"471","severity":1,"message":"528","line":2,"column":43,"nodeType":"473","messageId":"474","endLine":2,"endColumn":52},{"ruleId":"471","severity":1,"message":"534","line":4,"column":25,"nodeType":"473","messageId":"474","endLine":4,"endColumn":31},{"ruleId":"471","severity":1,"message":"482","line":7,"column":8,"nodeType":"473","messageId":"474","endLine":7,"endColumn":13},{"ruleId":"467","severity":1,"message":"468","line":10,"column":5,"nodeType":"469","messageId":"470","endLine":12,"endColumn":6},{"ruleId":"550","severity":1,"message":"551","line":26,"column":9,"nodeType":"552","messageId":"553","endLine":32,"endColumn":10},{"ruleId":"554","severity":1,"message":"555","line":30,"column":13,"nodeType":"556","messageId":"557","endLine":31,"endColumn":67},{"ruleId":"471","severity":1,"message":"558","line":2,"column":80,"nodeType":"473","messageId":"474","endLine":2,"endColumn":85},{"ruleId":"471","severity":1,"message":"534","line":4,"column":25,"nodeType":"473","messageId":"474","endLine":4,"endColumn":31},{"ruleId":"471","severity":1,"message":"559","line":6,"column":20,"nodeType":"473","messageId":"474","endLine":6,"endColumn":33},{"ruleId":"492","severity":1,"message":"493","line":54,"column":45,"nodeType":"494","messageId":"495","endLine":54,"endColumn":47},{"ruleId":"492","severity":1,"message":"493","line":80,"column":37,"nodeType":"494","messageId":"495","endLine":80,"endColumn":39},{"ruleId":"492","severity":1,"message":"493","line":82,"column":66,"nodeType":"494","messageId":"495","endLine":82,"endColumn":68},{"ruleId":"492","severity":1,"message":"493","line":93,"column":27,"nodeType":"494","messageId":"495","endLine":93,"endColumn":29},{"ruleId":"492","severity":1,"message":"493","line":114,"column":45,"nodeType":"494","messageId":"495","endLine":114,"endColumn":47},{"ruleId":"471","severity":1,"message":"560","line":9,"column":19,"nodeType":"473","messageId":"474","endLine":9,"endColumn":27},{"ruleId":"471","severity":1,"message":"561","line":10,"column":12,"nodeType":"473","messageId":"474","endLine":10,"endColumn":16},{"ruleId":"471","severity":1,"message":"562","line":12,"column":11,"nodeType":"473","messageId":"474","endLine":12,"endColumn":17},{"ruleId":"471","severity":1,"message":"531","line":2,"column":28,"nodeType":"473","messageId":"474","endLine":2,"endColumn":35},{"ruleId":"471","severity":1,"message":"532","line":2,"column":54,"nodeType":"473","messageId":"474","endLine":2,"endColumn":57},{"ruleId":"471","severity":1,"message":"533","line":2,"column":59,"nodeType":"473","messageId":"474","endLine":2,"endColumn":70},{"ruleId":"471","severity":1,"message":"514","line":2,"column":80,"nodeType":"473","messageId":"474","endLine":2,"endColumn":90},{"ruleId":"471","severity":1,"message":"529","line":4,"column":10,"nodeType":"473","messageId":"474","endLine":4,"endColumn":23},{"ruleId":"471","severity":1,"message":"534","line":4,"column":25,"nodeType":"473","messageId":"474","endLine":4,"endColumn":31},{"ruleId":"471","severity":1,"message":"535","line":5,"column":8,"nodeType":"473","messageId":"474","endLine":5,"endColumn":13},{"ruleId":"471","severity":1,"message":"536","line":6,"column":10,"nodeType":"473","messageId":"474","endLine":6,"endColumn":18},{"ruleId":"471","severity":1,"message":"537","line":7,"column":8,"nodeType":"473","messageId":"474","endLine":7,"endColumn":14},{"ruleId":"471","severity":1,"message":"538","line":8,"column":8,"nodeType":"473","messageId":"474","endLine":8,"endColumn":16},{"ruleId":"471","severity":1,"message":"539","line":9,"column":8,"nodeType":"473","messageId":"474","endLine":9,"endColumn":19},{"ruleId":"471","severity":1,"message":"482","line":11,"column":8,"nodeType":"473","messageId":"474","endLine":11,"endColumn":13},{"ruleId":"471","severity":1,"message":"540","line":14,"column":8,"nodeType":"473","messageId":"474","endLine":14,"endColumn":28},{"ruleId":"471","severity":1,"message":"541","line":15,"column":8,"nodeType":"473","messageId":"474","endLine":15,"endColumn":22},{"ruleId":"471","severity":1,"message":"542","line":16,"column":8,"nodeType":"473","messageId":"474","endLine":16,"endColumn":18},{"ruleId":"471","severity":1,"message":"543","line":17,"column":8,"nodeType":"473","messageId":"474","endLine":17,"endColumn":22},{"ruleId":"471","severity":1,"message":"544","line":18,"column":10,"nodeType":"473","messageId":"474","endLine":18,"endColumn":26},{"ruleId":"471","severity":1,"message":"545","line":19,"column":8,"nodeType":"473","messageId":"474","endLine":19,"endColumn":18},{"ruleId":"471","severity":1,"message":"546","line":21,"column":5,"nodeType":"473","messageId":"474","endLine":21,"endColumn":17},{"ruleId":"471","severity":1,"message":"547","line":25,"column":5,"nodeType":"473","messageId":"474","endLine":25,"endColumn":12},{"ruleId":"492","severity":1,"message":"493","line":81,"column":127,"nodeType":"494","messageId":"495","endLine":81,"endColumn":129},{"ruleId":"471","severity":1,"message":"531","line":2,"column":28,"nodeType":"473","messageId":"474","endLine":2,"endColumn":35},{"ruleId":"471","severity":1,"message":"532","line":2,"column":54,"nodeType":"473","messageId":"474","endLine":2,"endColumn":57},{"ruleId":"471","severity":1,"message":"533","line":2,"column":59,"nodeType":"473","messageId":"474","endLine":2,"endColumn":70},{"ruleId":"471","severity":1,"message":"514","line":2,"column":80,"nodeType":"473","messageId":"474","endLine":2,"endColumn":90},{"ruleId":"471","severity":1,"message":"529","line":4,"column":10,"nodeType":"473","messageId":"474","endLine":4,"endColumn":23},{"ruleId":"471","severity":1,"message":"534","line":4,"column":25,"nodeType":"473","messageId":"474","endLine":4,"endColumn":31},{"ruleId":"471","severity":1,"message":"535","line":5,"column":8,"nodeType":"473","messageId":"474","endLine":5,"endColumn":13},{"ruleId":"471","severity":1,"message":"536","line":6,"column":10,"nodeType":"473","messageId":"474","endLine":6,"endColumn":18},{"ruleId":"471","severity":1,"message":"537","line":7,"column":8,"nodeType":"473","messageId":"474","endLine":7,"endColumn":14},{"ruleId":"471","severity":1,"message":"538","line":8,"column":8,"nodeType":"473","messageId":"474","endLine":8,"endColumn":16},{"ruleId":"471","severity":1,"message":"539","line":9,"column":8,"nodeType":"473","messageId":"474","endLine":9,"endColumn":19},{"ruleId":"471","severity":1,"message":"482","line":11,"column":8,"nodeType":"473","messageId":"474","endLine":11,"endColumn":13},{"ruleId":"471","severity":1,"message":"540","line":14,"column":8,"nodeType":"473","messageId":"474","endLine":14,"endColumn":28},{"ruleId":"471","severity":1,"message":"541","line":15,"column":8,"nodeType":"473","messageId":"474","endLine":15,"endColumn":22},{"ruleId":"471","severity":1,"message":"542","line":16,"column":8,"nodeType":"473","messageId":"474","endLine":16,"endColumn":18},{"ruleId":"471","severity":1,"message":"543","line":17,"column":8,"nodeType":"473","messageId":"474","endLine":17,"endColumn":22},{"ruleId":"471","severity":1,"message":"544","line":18,"column":10,"nodeType":"473","messageId":"474","endLine":18,"endColumn":26},{"ruleId":"471","severity":1,"message":"545","line":19,"column":8,"nodeType":"473","messageId":"474","endLine":19,"endColumn":18},{"ruleId":"471","severity":1,"message":"546","line":21,"column":5,"nodeType":"473","messageId":"474","endLine":21,"endColumn":17},{"ruleId":"471","severity":1,"message":"547","line":25,"column":5,"nodeType":"473","messageId":"474","endLine":25,"endColumn":12},{"ruleId":"492","severity":1,"message":"493","line":81,"column":127,"nodeType":"494","messageId":"495","endLine":81,"endColumn":129},{"ruleId":"471","severity":1,"message":"563","line":3,"column":10,"nodeType":"473","messageId":"474","endLine":3,"endColumn":24},{"ruleId":"471","severity":1,"message":"532","line":4,"column":10,"nodeType":"473","messageId":"474","endLine":4,"endColumn":13},{"ruleId":"471","severity":1,"message":"564","line":2,"column":10,"nodeType":"473","messageId":"474","endLine":2,"endColumn":16},{"ruleId":"471","severity":1,"message":"565","line":2,"column":18,"nodeType":"473","messageId":"474","endLine":2,"endColumn":26},{"ruleId":"471","severity":1,"message":"566","line":4,"column":18,"nodeType":"473","messageId":"474","endLine":4,"endColumn":28},{"ruleId":"567","severity":1,"message":"568","line":79,"column":7,"nodeType":"569","endLine":79,"endColumn":27,"suggestions":"570"},{"ruleId":"567","severity":1,"message":"568","line":89,"column":7,"nodeType":"569","endLine":89,"endColumn":26,"suggestions":"571"},{"ruleId":"567","severity":1,"message":"568","line":99,"column":7,"nodeType":"569","endLine":99,"endColumn":28,"suggestions":"572"},{"ruleId":"567","severity":1,"message":"568","line":129,"column":7,"nodeType":"569","endLine":129,"endColumn":78,"suggestions":"573"},{"ruleId":"492","severity":1,"message":"493","line":82,"column":49,"nodeType":"494","messageId":"495","endLine":82,"endColumn":51},{"ruleId":"489","severity":1,"message":"490","line":83,"column":39,"nodeType":"491","endLine":83,"endColumn":122},{"ruleId":"471","severity":1,"message":"574","line":220,"column":15,"nodeType":"473","messageId":"474","endLine":220,"endColumn":20},{"ruleId":"517","severity":1,"message":"518","line":240,"column":17,"nodeType":"473","messageId":"519","endLine":240,"endColumn":18},{"ruleId":"517","severity":1,"message":"518","line":248,"column":17,"nodeType":"473","messageId":"519","endLine":248,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":258,"column":51,"nodeType":"494","messageId":"495","endLine":258,"endColumn":53},{"ruleId":"492","severity":1,"message":"493","line":307,"column":44,"nodeType":"494","messageId":"495","endLine":307,"endColumn":46},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["575","576"],["577","578"],"'axios' is defined but never used.","'emailjs' is defined but never used.",["579","580"],["581","582"],["583","584"],["585","586"],"'statusConfirmPassword' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'DataGrid' is defined but never used.","'columns' is assigned a value but never used.","'rows' is assigned a value but never used.","'Page' is defined but never used.","'Label' is defined but never used.","'Scrollbar' is defined but never used.","'SearchNotFound' is defined but never used.","'sentenceCase' is defined but never used.","'EmployeeToolbar' is defined but never used.","'filterName' is assigned a value but never used.","'isVerified' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'SplitButton' is defined but never used.","'InputLabel' is defined but never used.","'Modal' is defined but never used.","'GoodImage' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","Expected '!==' and instead saw '!='.","no-dupe-keys","Duplicate key 'overflow'.","ObjectExpression","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'TextField' is defined but never used.","'BiPlusMedical' is defined but never used.","'AddTypeModal' is defined but never used.","'Divider' is defined but never used.","'Box' is defined but never used.","'CardContent' is defined but never used.","'BiEdit' is defined but never used.","'Stack' is defined but never used.","'GiCancel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'LocalizationProvider' is defined but never used.","'AdapterDateFns' is defined but never used.","'DatePicker' is defined but never used.","'DateTimePicker' is defined but never used.","'AiFillPlusCircle' is defined but never used.","'CancelIcon' is defined but never used.","'productTypes' is assigned a value but never used.","'typeSet' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'Alert' is defined but never used.","'GiVampireCape' is defined but never used.","'setValue' is assigned a value but never used.","'date' is assigned a value but never used.","'value1' is assigned a value but never used.","'visuallyHidden' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'RouterLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'inputProps'. Either include it or remove the dependency array.","ArrayExpression",["587"],["588"],["589"],["590"],"'data1' is assigned a value but never used.",{"messageId":"591","fix":"592","desc":"593"},{"messageId":"594","fix":"595","desc":"596"},{"messageId":"591","fix":"597","desc":"593"},{"messageId":"594","fix":"598","desc":"596"},{"messageId":"591","fix":"599","desc":"593"},{"messageId":"594","fix":"600","desc":"596"},{"messageId":"591","fix":"601","desc":"593"},{"messageId":"594","fix":"602","desc":"596"},{"messageId":"591","fix":"603","desc":"593"},{"messageId":"594","fix":"604","desc":"596"},{"messageId":"591","fix":"605","desc":"593"},{"messageId":"594","fix":"606","desc":"596"},{"desc":"607","fix":"608"},{"desc":"607","fix":"609"},{"desc":"607","fix":"610"},{"desc":"611","fix":"612"},"removeEscape",{"range":"613","text":"614"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"615","text":"616"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"617","text":"614"},{"range":"618","text":"616"},{"range":"619","text":"614"},{"range":"620","text":"616"},{"range":"621","text":"614"},{"range":"622","text":"616"},{"range":"623","text":"614"},{"range":"624","text":"616"},{"range":"625","text":"614"},{"range":"626","text":"616"},"Update the dependencies array to be: [inputProps]",{"range":"627","text":"628"},{"range":"629","text":"628"},{"range":"630","text":"628"},"Update the dependencies array to be: [cancelOnEscape, inputProps, handleRequestSearch, handleCancel]",{"range":"631","text":"632"},[6543,6544],"",[6543,6543],"\\",[6559,6560],[6559,6559],[4616,4617],[4616,4616],[4632,4633],[4632,4632],[3735,3736],[3735,3735],[3751,3752],[3751,3751],[2067,2087],"[inputProps]",[2288,2307],[2525,2546],[3292,3363],"[cancelOnEscape, inputProps, handleRequestSearch, handleCancel]"]
=======
[{"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/index.js":"1","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/App.js":"2","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Store.js":"3","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/LoginStatusReducer.js":"4","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/TypeStatusReducer.js":"5","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ProvinceReducer.js":"6","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ListShiftReducer.js":"7","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/InfoUserReducer.js":"8","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/RoleReducer.js":"9","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ObjectEditShiftReducer.js":"10","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/TypeProductValueReducer.js":"11","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ListProductReducer.js":"12","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/chooseTypeProduct.js":"13","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/DistrictReducer.js":"14","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ConfirmModalReducer.js":"15","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Router/DirectionURL.js":"16","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/typeProductReducer.js":"17","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusEditShiftReducer.js":"18","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusConfirmReducer.js":"19","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusDeleteConfirmReducer.js":"20","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusModalConfirmPassword.js":"21","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusDarkModeReducer.js":"22","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddTypeReducer.js":"23","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusIsAddTypeReducer.js":"24","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusUpdateGoodReducer.js":"25","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusYesConfirmReducer.js":"26","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusUpdateEmployeeReducer.js":"27","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusPayMoneyStatus.js":"28","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddEmployeeReducer.js":"29","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddShiftReducer.js":"30","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusEditTypeReducer.js":"31","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Body.js":"32","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/Register.js":"33","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/ForgotPassword.js":"34","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/LoginWithEmployee.js":"35","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/Login.js":"36","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Router/DashboardURL.js":"37","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/ModalConfirmPassword.js":"38","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Partials/SideNavBar.js":"39","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodManager.js":"40","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeeManager.js":"41","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/ReiceiptManager.js":"42","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/Profile.js":"43","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/DashBoard.js":"44","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/GoodImport.js":"45","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/SellProduct.js":"46","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/EditTypeModal.js":"47","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/UpdateEmployeeModal.js":"48","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/PayMoneyModal.js":"49","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/Tabs.js":"50","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/ComponentToPrint.js":"51","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/ConfirmModal.js":"52","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/AddTypeModal.js":"53","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/Calendar.js":"54","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/Statistic.js":"55","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/GroupButton.js":"56","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/BaseOptionChart.js":"57","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ModalAdd.js":"58","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/Regulation.js":"59","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileSetting.js":"60","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ListShift.js":"61","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ChangePassword.js":"62","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileDetail.js":"63","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/fakeData.js":"64","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/AddEmployeeModal.js":"65","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileHeader.js":"66","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/EmployeeTableHeader.js":"67","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/EmployeeMoreMenu.js":"68","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/EmployeeToolbar.js":"69","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/Scrollbar.js":"70","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/SearchNotFound.js":"71","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/Page.js":"72","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/Label.js":"73","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/SearchBar.js":"74","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/GoodTable.js":"75","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/UpdateGoodModal.js":"76","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/DarkMode.js":"77"},{"size":295,"mtime":1633526918199,"results":"78","hashOfConfig":"79"},{"size":2018,"mtime":1635261981933,"results":"80","hashOfConfig":"79"},{"size":2967,"mtime":1634797384961,"results":"81","hashOfConfig":"79"},{"size":284,"mtime":1633526918189,"results":"82","hashOfConfig":"79"},{"size":331,"mtime":1633861365892,"results":"83","hashOfConfig":"79"},{"size":372,"mtime":1634554437218,"results":"84","hashOfConfig":"79"},{"size":1607,"mtime":1635269701342,"results":"85","hashOfConfig":"79"},{"size":2034,"mtime":1635261981980,"results":"86","hashOfConfig":"79"},{"size":304,"mtime":1634554437218,"results":"87","hashOfConfig":"79"},{"size":330,"mtime":1634050541311,"results":"88","hashOfConfig":"79"},{"size":643,"mtime":1634797384962,"results":"89","hashOfConfig":"79"},{"size":1491,"mtime":1634651182398,"results":"90","hashOfConfig":"79"},{"size":347,"mtime":1634651182407,"results":"91","hashOfConfig":"79"},{"size":364,"mtime":1634708338277,"results":"92","hashOfConfig":"79"},{"size":468,"mtime":1634555131980,"results":"93","hashOfConfig":"79"},{"size":2136,"mtime":1633861365892,"results":"94","hashOfConfig":"79"},{"size":364,"mtime":1634708338297,"results":"95","hashOfConfig":"79"},{"size":302,"mtime":1634050541312,"results":"96","hashOfConfig":"79"},{"size":293,"mtime":1634554437219,"results":"97","hashOfConfig":"79"},{"size":378,"mtime":1634554437220,"results":"98","hashOfConfig":"79"},{"size":360,"mtime":1634554437221,"results":"99","hashOfConfig":"79"},{"size":292,"mtime":1634050541312,"results":"100","hashOfConfig":"79"},{"size":294,"mtime":1634554437218,"results":"101","hashOfConfig":"79"},{"size":360,"mtime":1634554437221,"results":"102","hashOfConfig":"79"},{"size":309,"mtime":1634554437222,"results":"103","hashOfConfig":"79"},{"size":338,"mtime":1634555131981,"results":"104","hashOfConfig":"79"},{"size":329,"mtime":1634651182404,"results":"105","hashOfConfig":"79"},{"size":314,"mtime":1634651182400,"results":"106","hashOfConfig":"79"},{"size":314,"mtime":1634651182398,"results":"107","hashOfConfig":"79"},{"size":293,"mtime":1633939930791,"results":"108","hashOfConfig":"79"},{"size":299,"mtime":1634554437220,"results":"109","hashOfConfig":"79"},{"size":1627,"mtime":1634653934026,"results":"110","hashOfConfig":"79"},{"size":16386,"mtime":1635261981956,"results":"111","hashOfConfig":"79"},{"size":13060,"mtime":1635261981941,"results":"112","hashOfConfig":"79"},{"size":8509,"mtime":1635261981955,"results":"113","hashOfConfig":"79"},{"size":14721,"mtime":1635269701337,"results":"114","hashOfConfig":"79"},{"size":1324,"mtime":1634554437223,"results":"115","hashOfConfig":"79"},{"size":1908,"mtime":1634554437210,"results":"116","hashOfConfig":"79"},{"size":6850,"mtime":1634554437210,"results":"117","hashOfConfig":"79"},{"size":7075,"mtime":1634653936599,"results":"118","hashOfConfig":"79"},{"size":14785,"mtime":1634651182374,"results":"119","hashOfConfig":"79"},{"size":234,"mtime":1633526918188,"results":"120","hashOfConfig":"79"},{"size":2687,"mtime":1635261981970,"results":"121","hashOfConfig":"79"},{"size":5415,"mtime":1634653922799,"results":"122","hashOfConfig":"79"},{"size":25229,"mtime":1635261981937,"results":"123","hashOfConfig":"79"},{"size":6624,"mtime":1635261981978,"results":"124","hashOfConfig":"79"},{"size":6173,"mtime":1635261981936,"results":"125","hashOfConfig":"79"},{"size":13973,"mtime":1634654045948,"results":"126","hashOfConfig":"79"},{"size":13715,"mtime":1634654085548,"results":"127","hashOfConfig":"79"},{"size":1225,"mtime":1634712245948,"results":"128","hashOfConfig":"79"},{"size":689,"mtime":1634554437213,"results":"129","hashOfConfig":"79"},{"size":3407,"mtime":1634555131980,"results":"130","hashOfConfig":"79"},{"size":8088,"mtime":1635261981935,"results":"131","hashOfConfig":"79"},{"size":1565,"mtime":1634554437190,"results":"132","hashOfConfig":"79"},{"size":1776,"mtime":1634554437191,"results":"133","hashOfConfig":"79"},{"size":2693,"mtime":1634554437190,"results":"134","hashOfConfig":"79"},{"size":5405,"mtime":1634554437190,"results":"135","hashOfConfig":"79"},{"size":12001,"mtime":1635261981968,"results":"136","hashOfConfig":"79"},{"size":6859,"mtime":1635261981973,"results":"137","hashOfConfig":"79"},{"size":861,"mtime":1634708338277,"results":"138","hashOfConfig":"79"},{"size":6535,"mtime":1635261981964,"results":"139","hashOfConfig":"79"},{"size":6577,"mtime":1634708338272,"results":"140","hashOfConfig":"79"},{"size":14832,"mtime":1635261981971,"results":"141","hashOfConfig":"79"},{"size":921,"mtime":1634651182386,"results":"142","hashOfConfig":"79"},{"size":13792,"mtime":1634654074750,"results":"143","hashOfConfig":"79"},{"size":3683,"mtime":1634788773882,"results":"144","hashOfConfig":"79"},{"size":1959,"mtime":1634651182376,"results":"145","hashOfConfig":"79"},{"size":3268,"mtime":1634651182375,"results":"146","hashOfConfig":"79"},{"size":2399,"mtime":1634651182377,"results":"147","hashOfConfig":"79"},{"size":1478,"mtime":1634651182382,"results":"148","hashOfConfig":"79"},{"size":0,"mtime":1634651182383,"results":"149","hashOfConfig":"79"},{"size":462,"mtime":1634651182380,"results":"150","hashOfConfig":"79"},{"size":2373,"mtime":1634651182378,"results":"151","hashOfConfig":"79"},{"size":5332,"mtime":1634554437193,"results":"152","hashOfConfig":"79"},{"size":14455,"mtime":1635261981938,"results":"153","hashOfConfig":"79"},{"size":24570,"mtime":1634653930370,"results":"154","hashOfConfig":"79"},{"size":3038,"mtime":1634554437211,"results":"155","hashOfConfig":"79"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"1evuik7",{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"158"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"158"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"158"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"158"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"158"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"158"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"158"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"158"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"158"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"158"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"158"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"158"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"158"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"158"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"158"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"158"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"158"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"158"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"158"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"158"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"158"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"158"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"158"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"158"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"158"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/index.js",[],["336","337"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/App.js",["338"],"import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport DirectionURL from './Router/DirectionURL';\nimport './css/App.css'\nimport { connect } from 'react-redux'\nimport axios from 'axios';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  async componentWillMount() {\n    if (localStorage.getItem('token') && localStorage.getItem('token') !== \"\") {\n      axios.post(`http://localhost:5000/refresh`, {\n        token: localStorage.getItem('token'),\n      })\n        .then(res => {\n          console.log(\"Thành công\");\n          console.log(res.data);\n          if (res.status === 200) {\n            localStorage.setItem('token', res.data.token);\n            this.props.updateProfile(res.data.data.manager);\n            this.props.updateAvatar(res.data.data.manager.imgUrl)\n            this.props.updateShiftTypes(res.data.data.shiftTypes)\n            this.props.changeLoginStatus();\n          }\n        })\n        .catch(err => {\n          console.log(\"thất bại\");\n        })\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <DirectionURL></DirectionURL>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isLogin: state.loginStatus,\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    changeLoginStatus: () => {\n      dispatch({\n        type: \"CHANGE_LOGIN_STATUS\",\n      });\n    },\n    updateProvince: (data) => {\n      dispatch({\n        type: \"UPDATE_DATA\",\n        data: data,\n      })\n    },\n    updateProfile: (data) => {\n      dispatch({\n        type: \"UPDATA_DATA_USER\",\n        data: data,\n      })\n    },\n    updateAvatar: (avatar) => {\n      dispatch({\n        type: \"UPDATE_AVATAR\",\n        avatar: avatar,\n      })\n    },\n    updateShiftTypes: (shiftTypes) => {\n      dispatch({\n        type: \"UPDATE_DATA_SHIFT_USER\",\n        shiftTypes: shiftTypes,\n      })\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Store.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/LoginStatusReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/TypeStatusReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ProvinceReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ListShiftReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/InfoUserReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/RoleReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ObjectEditShiftReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/TypeProductValueReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ListProductReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/chooseTypeProduct.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/DistrictReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ConfirmModalReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Router/DirectionURL.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/typeProductReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusEditShiftReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusConfirmReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusDeleteConfirmReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusModalConfirmPassword.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusDarkModeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddTypeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusIsAddTypeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusUpdateGoodReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusYesConfirmReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusUpdateEmployeeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusPayMoneyStatus.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddEmployeeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddShiftReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusEditTypeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Body.js",["339"],"import React, { Component } from 'react';\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport DashboardURL from '../Router/DashboardURL';\nimport { connect } from 'react-redux';\nimport SideNavBar from './Partials/SideNavBar';\n\nimport '../css/Body.css'\nimport ModalConfirmPassword from './ModalConfirmPassword';\n\nclass Body extends Component {\n    render() {\n        return (\n            <div>\n                <SideNavBar />\n                <div \n                    className=\"body-content\"\n                    style={{\n                        width: 'calc(100% - 224px)',\n                        position: 'fixed', top: 0, right: 0, backgroundColor: this.props.statusDarkmode ? 'rgb(221,235,255)' : 'rgba(20,20,20,0.4)', borderLeft: '2px solid #99999975',\n                    }}\n                >\n                    <DashboardURL></DashboardURL>\n                </div>\n                {this.props.statusConfirmPassword ?\n                    <div className=\"modal-comfirm-password\">\n                        <ModalConfirmPassword></ModalConfirmPassword>\n                    </div> : null\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isLogin: state.loginStatus,\n        statusDarkmode: state.statusDarkmode,\n        statusConfirmPassword: state.statusConfirmPassword,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeLoginStatus: () => {\n            dispatch({\n                type: \"CHANGE_LOGIN_STATUS\",\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Body);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/Register.js",["340","341","342"],"import React, { Component } from 'react';\nimport '../../css/Login.css'\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport Avatar from '@mui/material/Avatar'\nimport { IconContext } from \"react-icons\";\nimport { FiChevronLeft, FiUserPlus, FiXSquare } from \"react-icons/fi\";\nimport { BsFillEnvelopeFill, BsLockFill, BsCodeSlash } from \"react-icons/bs\";\nimport { FaPhoneSquare } from \"react-icons/fa\";\nimport axios from 'axios';\nimport Alert from '@mui/material/Alert';\nimport emailjs from 'emailjs-com';\nvar bcrypt = require('bcryptjs');\n\n\nclass Register extends Component {\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            code: \"\",\n            statusSendCode: true,\n            statusFailed: false,\n            statusSuccess: false,\n        }\n    }\n\n    message = \"\";\n\n    // Send code tới người dùng\n    sendCode = (a = this.makeCode(6)) => {\n        this.setState({\n            code: \"123456\"\n        })\n        // this.setState({\n        //     code: a,\n        // })\n        // emailjs.init(\"user_K1g5N5hUDI0rjsa1uRoI4\");\n        // emailjs.send(\"gmail_main\", \"template_plasdgf\", {\n        //     To_mail: `${document.getElementById('email').value}`,\n        //     code: `${a}`,\n        // })\n        //     .then((response) => {\n        //         console.log('SUCCESS!', response.status, response.text);\n        //     }, (err) => {\n        //         console.log('FAILED...', err);\n        //     });\n    }\n\n    // status SignUp \n    SignUp = (e) => {\n        this.OutAlert();\n        if (this.blurEmail() && this.blurCode() && this.blurPassword() && this.blurRePassword() && this.blurTel()) {\n            axios.post(`http://localhost:5000/register-with-email`, {\n                email: document.getElementById('email').value,\n                password: this.hash(document.getElementById('password').value),\n                tel: document.getElementById('tel').value,\n            })\n                .then(res => {\n                    console.log(res.data);\n                    switch (res.data.status) {\n                        case 1:\n                            this.message = res.data.message;\n                            this.setState({\n                                statusSuccess: true,\n                            })\n                            localStorage.setItem('token', res.data.token);\n                            const data = {\n                                email: res.data.email,\n                                firstName: \"\",\n                                lastName:  \"\",\n                                old:  \"\",\n                                gender: \"0\",\n                                storeName: \"\",\n                                tel: document.getElementById('tel').value,\n                                province: \"0\",\n                                district:  \"0\",\n                                address:  \"\",\n                            }\n                            this.props.updateProfile(data);\n                            this.props.changeLoginStatus();\n                            break;\n                        case -1:\n                            this.message = res.data.message;;\n                            this.setState({\n                                statusFailed: true,\n                            })\n                            break;\n                        default:\n                            break;\n                    }\n                })\n                .catch(err => {\n                    this.message = \"Error system\";\n                    this.setState({\n                        statusFailed: true,\n                    })\n                })\n\n        }\n    }\n\n    // Out Alert\n    OutAlert = () => {\n        this.setState({\n            statusFailed: false,\n            statusSuccess: false,\n        })\n    }\n\n    // Tạo mã code cho người dùng xác nhận\n    makeCode = (length) => {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() *\n                charactersLength));\n        }\n        return result;\n    }\n\n    // Hashpassword\n    hash = (pass) => {\n        var hash = bcrypt.hashSync(pass, 12)\n        return hash;\n    }\n\n\n    // Handle user : blur, change in input\n    blurEmail = () => {\n        const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const e = document.getElementById('email');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            this.setState({\n                statusSendCode: true,\n            })\n            return false;\n        } else if (!regex.test(elementValue)) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\n            this.setState({\n                statusSendCode: true,\n            })\n            return false\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            this.setState({\n                statusSendCode: false,\n            })\n            return true;\n        }\n    }\n\n    blurCode = () => {\n        const e = document.getElementById('code');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (this.state.code === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please press Send Code\"\n            return false\n        } else if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter code here\"\n            return false\n        } else if (elementValue !== this.state.code) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Code is incorrect\"\n            return false\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    blurPassword = () => {\n        const e = document.getElementById('password');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\n            return false;\n        } else if (e.value.length < 6) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    blurRePassword = () => {\n        const e = document.getElementById('re-password')\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else if (document.getElementById('password').value !== elementValue) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Re-password not correct\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true\n        }\n    }\n\n    blurTel = () => {\n        const e = document.getElementById('tel');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        const regex = /^\\d+$/;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else if (!regex.test(elementValue)) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Phone is not in the correct format\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    changeInput = (e) => {\n        const formGroup = e.target.parentElement.parentElement;\n        formGroup.classList.remove('invalid');\n        formGroup.querySelector('.form-message').innerText = \"\";\n    }\n\n    componentWillMount() {\n        document.title = 'Register'\n    }\n\n    render() {\n        const enterPress = this.SignUp;\n        document.onkeydown = function (e) {\n            switch (e.which) {\n                case 13:\n                    enterPress(e);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return (\n            <div className=\"Login\">\n                <div className=\"form-register\">\n                    <div className=\"auth-form\">\n                        <Avatar className=\"auth-form__avatar\">\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\n                                <FiUserPlus></FiUserPlus>\n                            </IconContext.Provider>\n                        </Avatar>\n                        <div className=\"auth-form__container\">\n                            <div className=\"auth-form__header\">\n                                <div className=\"auth-form__heading\">Register</div>\n                                <NavLink to=\"/login\" className=\"auth-form__switch-btn\"> <FiChevronLeft className=\"auth-form__arrow-return\"></FiChevronLeft>Login</NavLink>\n                            </div>\n                        </div>\n                        <div className=\"auth-form__body\">\n                            <form action=\"/register-submit\" method=\"post\" id=\"register-form\">\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"VD: abc@gmail.com\" type=\"text\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span><BsCodeSlash className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurCode()} name=\"code\" rules=\"required|email\" id=\"code\" placeholder=\"Ex: ABC321\" type=\"text\" />\n                                        <button type=\"button\" disabled={this.state.statusSendCode} onClick={() => this.sendCode()} class=\"btn btn-primary disabel send-code\">SEND</button>\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurPassword()} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurRePassword()} name=\"re-password\" id=\"re-password\" placeholder=\"Emter re-password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <FaPhoneSquare className=\"input-custom-icon\" ></FaPhoneSquare>\n                                        </span>\n                                        <input className=\"form-control\" onBlur={(e) => this.blurTel(e)} onChange={(e) => this.changeInput(e)} name=\"tel\" rules=\"required\" id=\"tel\" placeholder=\"Ex: 0303030303\" type=\"tel\" />\n\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"register-description\">Bằng cách ấn vào nút\n                                    <span className=\"register-description__keyword\">“ĐĂNG KÝ”</span>\n                                    , tôi đồng ý với\n                                    <span className=\"register-description__keyword\">Điều Khoản Sử Dụng</span> và\n                                    <div className=\"register-description__keyword\"> Chính Sách Bảo Mật</div>\n                                </div>\n                                <div className=\"auth-form__btn\">\n                                    <div onClick={(e) => this.SignUp(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign Up</div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div >\n                {this.state.statusSuccess ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isLogin: state.loginStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeLoginStatus: () => {\n            dispatch({\n                type: \"CHANGE_LOGIN_STATUS\",\n            });\n        },\n        updateProfile: (data) => {\n            dispatch({\n                type: \"UPDATA_DATA_USER\",\n                email: data.email,\n                firstName: data.firstName,\n                lastName: data.lastName,\n                old: data.old,\n                gender: data.gender,\n                storeName: data.storeName,\n                tel: data.tel,\n                province: data.province,\n                district: data.district,\n                address: data.address,\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/ForgotPassword.js",["343","344","345"],"import React, { Component } from 'react';\nimport Avatar from '@mui/material/Avatar'\nimport { IconContext } from \"react-icons\";\nimport { FiSend, FiXSquare } from \"react-icons/fi\";\nimport { BsFillEnvelopeFill, BsLockFill, BsBoxArrowInLeft, BsCodeSlash } from \"react-icons/bs\";\nimport emailjs from 'emailjs-com';\nimport Alert from '@mui/material/Alert';\nimport axios from 'axios';\nimport {\n    NavLink\n} from \"react-router-dom\";\nvar bcrypt = require('bcryptjs');\n\n\nclass ForgotPassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: \"\",\n            statusSendCode: true,\n            statusFailed: false,\n            statusSuccess: false,\n        }\n    }\n\n    message = \"\"\n\n    // Send code tới người dùng\n    sendCode = (a = this.makeCode(6)) => {\n        this.setState({\n            code: \"123456\"\n        })\n        // this.setState({\n        //     code: a,\n        // })\n        // emailjs.init(\"user_K1g5N5hUDI0rjsa1uRoI4\");\n        // emailjs.send(\"gmail_main\", \"template_plasdgf\", {\n        //     To_mail: `${document.querySelector('#email').value}`,\n        //     code: `${a}`,\n        // })\n        //     .then((response) => {\n        //         console.log('SUCCESS!', response.status, response.text);\n        //     }, (err) => {\n        //         console.log('FAILED...', err);\n        //     });\n    }\n\n    // Tạo code để xác nhận\n    makeCode = (length) => {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() *\n                charactersLength));\n        }\n        return result;\n    }\n\n    // Hashpassword\n    hash = (pass) => {\n        var hash = bcrypt.hashSync(pass, 12)\n        return hash;\n    }\n\n\n    // Out Alert\n    OutAlert = () => {\n        this.setState({\n            statusFailed: false,\n            statusSuccess: false,\n        })\n    }\n\n    //Check tìm lại mật khẩu\n    findPassword = (e) => {\n        this.OutAlert();\n        if (this.blurEmail() && this.blurCode() && this.blurPassword() && this.blurRePassword()) {\n            const form = document.getElementById('findpass-form');\n            axios.post(`http://localhost:5000/find-password`, {\n                email: document.querySelector('#email').value,\n                password: this.hash(document.getElementById('password').value),\n            })\n                .then(res => {\n                    form.reset();\n                    console.log(res.data.status);\n                    switch (res.data.status) {\n                        case 1:\n                            this.message = res.data.message;\n                            this.setState({\n                                statusSuccess: true,\n                            })\n                            break;\n                        case -1:\n                            this.message = res.data.message;\n                            this.setState({\n                                statusFailed: true,\n                            })\n                            break;\n                        default:\n                            break;\n                    }\n                })\n                .catch(err => {\n                    this.message = \"Error system\";\n                    this.setState({\n                        statusFailed: true,\n                    })\n                })\n        }\n    }\n\n\n    // Handle user blue change in input\n    blurEmail = () => {\n        var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const event = document.querySelector('#email');\n        const elementValue = event.value;\n        const formGroup = event.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            this.setState({\n                statusSendCode: true,\n            })\n            return false;\n        } else if (!regex.test(elementValue)) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\n            this.setState({\n                statusSendCode: true,\n            })\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            this.setState({\n                statusSendCode: false,\n            })\n            return true;\n        }\n    }\n\n    blurPassword = () => {\n        const e = document.getElementById('password');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\n            return false;\n        } else if (e.value.length < 6) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    blurCode = () => {\n        const e = document.getElementById('code');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (this.state.code === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please press Send Code\"\n            return false\n        } else if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter code here\"\n            return false\n        } else if (elementValue !== this.state.code) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Code is incorrect\"\n            return false\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    blurRePassword = () => {\n        const e = document.getElementById('re-password')\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else if (document.getElementById('password').value !== elementValue) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Re-password not correct\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true\n        }\n    }\n\n    changeInput = (e) => {\n        const formGroup = e.target.parentElement.parentElement;\n        formGroup.classList.remove('invalid');\n        formGroup.querySelector('.form-message').innerText = \"\";\n    }\n\n    componentWillMount() {\n        document.title = 'Find password'\n    }\n\n    render() {\n        const enterPress = this.findPassword;\n        document.onkeydown = function (e) {\n            switch (e.which) {\n                case 13:\n                    enterPress(e);\n                    break;\n                default:\n                    break;\n            }\n        }\n        return (\n            <div className=\"Login\">\n                <div className=\"form-findpass\">\n                    <div className=\"auth-form\">\n                        <Avatar className=\"auth-form__avatar\">\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\n                                <FiSend></FiSend>\n                            </IconContext.Provider>\n                        </Avatar>\n                        <div className=\"auth-form__container\">\n                            <div className=\"auth-form__header\">\n                                <div className=\"auth-form__heading\">Find password</div>\n                                <NavLink to=\"/login\" className=\"auth-form__switch-btn\"><BsBoxArrowInLeft className=\"arrow-return\"></BsBoxArrowInLeft></NavLink>\n                            </div>\n                        </div>\n                        <div className=\"auth-form__body\">\n                            <form action=\"/findpass-submit?_method=PUT\" method=\"POST\" id=\"findpass-form\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                                    <div className=\"input-custom\">\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"Ex: abc@gmail.com\" type=\"text\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"code\" className=\"form-label\">Code</label>\n                                    <div className=\"input-custom\">\n                                        <span><BsCodeSlash className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurCode()} name=\"code\" rules=\"required|email\" id=\"code\" placeholder=\"Ex: ABC321\" type=\"text\" />\n                                        <button type=\"button\" disabled={this.state.statusSendCode} onClick={() => this.sendCode()} class=\"btn btn-primary disabel send-code\">SEND</button>\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\" className=\"form-label\">New password</label>\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurPassword()} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\" className=\"form-label\">Re-password</label>\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurRePassword()} name=\"password\" rules=\"required|min:6\" id=\"re-password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"auth-form__btn\">\n                                    <div onClick={(e) => this.findPassword(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Find Password</div>\n                                </div>\n\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                {this.state.statusSuccess ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n            </div>\n        );\n    }\n}\n\n\n\n\nexport default ForgotPassword;\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/LoginWithEmployee.js",["346"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../css/Login.css'\nimport { BsFillEnvelopeFill, BsLockFill } from \"react-icons/bs\";\nimport {  FiXSquare,FiChevronLeft } from \"react-icons/fi\";\nimport {FaUserTie} from 'react-icons/fa'\nimport { Avatar } from '@mui/material'\nimport { IconContext } from \"react-icons\";\nimport axios from 'axios';\nimport Alert from '@mui/material/Alert';\n\nclass LoginWithEmployee extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            statusFailed: false,\n            statusSucces: false,\n        }\n    }\n\n    message = \"Login success\";\n\n    // Out Alert\n    OutAlert = () => {\n        this.setState({\n            statusFailed: false,\n            statusSucces: false,\n        })\n    }\n\n    // Check để thay đổi trạng thái đã login hay chưa\n    isLoginCheck = (e) => {\n        // this.OutAlert();\n        // if (this.blurEmail() && this.blurPassword()) {\n        //     axios.post(`http://localhost:5000/sign-in-employee`, {\n        //         username: document.querySelector('#username').value,\n        //         password: document.getElementById('password').value,\n        //     })\n        //         .then(res => {\n        //             switch (res.data.status) {\n        //                 case 1:\n        //                     this.message = res.data.message;\n        //                     this.setState({\n        //                         statusSucces: true,\n        //                     })\n        //                     localStorage.setItem('token', res.data.token);\n        //                     this.props.changeLoginStatus();\n        //                     break;\n        //                 case -1:\n        //                     this.message = res.data.message;\n        //                     this.setState({\n        //                         statusFailed: true,\n        //                     })\n        //                     break;\n        //                 default:\n        //                     break;\n        //             }\n        //         })\n        //         .catch(err => {\n        //             this.message = \"Enter again\";\n        //             this.setState({\n        //                 statusFailed: true,\n        //             })\n        //         })\n        // }\n        this.setState({\n            statusSucces: true,\n        })\n        this.props.setRole()\n    }\n\n\n    // Handle user : blur , change in input\n    blurEmail = () => {\n        const event = document.querySelector('#username');\n        let elementValue = event.value;\n        const formGroup = event.parentElement.parentElement;\n        // check validate\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n\n    blurPassword = () => {\n        const e = document.getElementById('password');\n        let elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\n            return false;\n        } else if (e.value.length < 6) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    changeInput = (e) => {\n        const formGroup = e.target.parentElement.parentElement;\n        formGroup.classList.remove('invalid');\n        formGroup.querySelector('.form-message').innerText = \"\";\n    }\n\n    componentWillMount() {\n        document.title = 'Employee'\n    }\n\n    render() {\n        const enterPress = this.isLoginCheck;\n        document.onkeydown = function (e) {\n            switch (e.which) {\n                case 13:\n                    enterPress(e);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return (\n            <div className=\"Login\">\n                <div className=\"form-login\">\n                    <div className=\"auth-form\">\n                        <Avatar className=\"auth-form__avatar\">\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\n                                <FaUserTie></FaUserTie>\n                            </IconContext.Provider>\n                        </Avatar>\n                        <div className=\"auth-form__container\">\n                            <div className=\"auth-form__header\">\n                                <div className=\"auth-form__heading\">Employee</div>\n                                <NavLink to=\"/login\" className=\"auth-form__switch-btn\"> <FiChevronLeft className=\"auth-form__arrow-return\"></FiChevronLeft>Login</NavLink>\n                            </div>\n                        </div>\n                        <div className=\"auth-form__body\">\n                            <form action=\"/login-submit\" method=\"POST\" id=\"login-form\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\" className=\"form-label\">Username</label>\n                                    <div className=\"input-custom\">\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"username\"  id=\"username\" placeholder=\"VD: phuoc123\" type=\"text\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={(e) => this.blurPassword(e)} name=\"password\"  id=\"password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"auth-form__btn\">\n                                    <div to=\"/sellproduct\" id=\"navlink\" onClick={(e) => this.isLoginCheck(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign In</div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                {this.state.statusSucces ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isLogin: state.loginStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeLoginStatus: () => {\n            dispatch({\n                type: \"CHANGE_LOGIN_STATUS\",\n            });\n        },\n        setRole: () => {\n            dispatch({\n                type: \"EMPLOYEE_ROLE\",\n            });\n            localStorage.setItem('role', 'employee');\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps , mapDispatchToProps)(LoginWithEmployee);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/Login.js",["347","348","349","350"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Router/DashboardURL.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/ModalConfirmPassword.js",["351"],"import React from 'react';\nimport {Card,CardHeader,Divider,CardContent,Grid,TextField,Box,Button} from '@mui/material';\nimport {BiPlusMedical} from 'react-icons/bi'\nimport { GiCancel } from 'react-icons/gi'\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction ModalConfirmPassword(props) {\n\n    const statusConfirmPassword = useSelector(state => state.statusConfirmPassword)\n    const dispatch = useDispatch();\n\n    const handleCancel = () => {\n        dispatch({\n            type:\"CHANGE_MODAL_CONFIRM_PASSWORD_STATUS\",\n        })\n    }\n\n    return (\n        <Card className=\"card-confirm-password\" style={{ minWidth: '500px', width: '600px', justifyContent: 'center', marginTop: '10%' }}>\n            <CardHeader style={{ color: 'blue', backgroundColor: '#efeeef' }} title=\"Confirm password\" />\n            <Divider />\n            <CardContent>\n                <Grid container spacing={2}>\n                    <Grid item md={12} xs={12}>\n                        <TextField\n                            id=\"outlined-basic\"\n                            variant=\"outlined\"\n                            fullWidth\n                            label=\"Your password\"\n                            required\n                            type=\"password\"\n                        />\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <Divider />\n            <Box sx={{ display: 'flex', justifyContent: 'space-evenly', p: 2 }}>\n                <Button style={{ backgroundColor: 'yellowgreen' }} variant=\"contained\" startIcon={<BiPlusMedical />}>\n                    Xác nhận\n                </Button>\n                <Button style={{ backgroundColor: 'red' }} onClick={() => handleCancel()} variant=\"contained\" startIcon={<GiCancel />}>\n                    Hủy\n                </Button>\n            </Box>\n        </Card>\n    );\n}\n\nexport default ModalConfirmPassword;","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Partials/SideNavBar.js",["352","353","354","355"],"import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport {\n    AiOutlineDashboard,\n    AiFillDashboard,\n    AiOutlineContainer,\n    AiFillContainer\n} from \"react-icons/ai\";\nimport { BsInfoCircleFill} from \"react-icons/bs\";\nimport { \n    IoPeopleOutline,\n    IoPeopleSharp,\n    IoReceiptOutline,\n    IoReceiptSharp,\n} from \"react-icons/io5\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { RiProfileFill, RiProfileLine } from \"react-icons/ri\";\nimport { FaSignOutAlt } from \"react-icons/fa\";\nimport {GiSellCard} from 'react-icons/gi'\nimport Avatar from '../../img/avatar_default.jpg';\nimport { NavLink } from 'react-router-dom';\n\nimport '../../css/SideNavBar.css';\n\nclass SideNavBar extends Component {\n    \n    render() {\n\n        const navbarContainer = document.querySelector('.navbar-container');\n        console.log(navbarContainer);\n        // navbarContainer.setAttribute(\"style\",\"width:20px\");\n        return (\n            <div \n                class=\"navbar-container\"\n                style={{\n                    width: 0\n                }}\n            >\n                <div class=\"navibar sidebar\">\n                    <div className=\"nav-icon\" >\n                        <IoIosArrowBack\n                            size={20}\n                        />\n                    </div>\n                    <div class=\"nav-heading\">\n                        <div class=\"navbar-heading-container\">\n                            <img src={this.props.infoUser.avatar ? this.props.infoUser.avatar: Avatar} style ={{width: 40, height: 40, borderRadius: '100%'}}></img>\n                            <span class=\"user-name\">{this.props.infoUser.lastName +\" \" + this.props.infoUser.firstName}</span>\n                        </div>\n                    </div>\n                    <div class=\"nav-container\">\n                        {   \n                            // this.props.role == true ?\n                            localStorage.getItem('role')=='admin' ?\n                            (<NavLink className=\"nav-item\" to=\"/dashboard\">\n                                <AiOutlineDashboard class=\"nav-item-icon\" />\n                                <AiFillDashboard class=\"nav-item-icon icon-activate\" />\n                                <span className=\"nav-item-lable\">Dashboard</span>\n                            </NavLink>):(null)\n                        }\n                        \n                        <NavLink to=\"/profile\" className=\"nav-item\" href=\"#\">\n                            <RiProfileLine class=\"nav-item-icon\" />\n                            <RiProfileFill class=\"nav-item-icon icon-activate\" />\n                            <span className=\"nav-item-lable\">Profile</span>\n                        </NavLink>\n\n                        {   \n                            // this.props.role == true ?\n                            localStorage.getItem('role')=='admin' ?\n                            (   \n                                <div>\n                                    <NavLink\n                                        to=\"/employeemanager\"\n                                        className=\"nav-item\"\n                                        href=\"#\"\n                                    >\n                                        <IoPeopleOutline class=\"nav-item-icon\" />\n                                        <IoPeopleSharp class=\"nav-item-icon icon-activate\" />\n                                        <span className=\"nav-item-lable\">Employee Manager</span>\n                                    </NavLink>\n                                    <NavLink\n                                        to=\"/goodmanager\"\n                                        className=\"nav-item\"\n                                        href=\"#\"\n                                    >\n                                        <AiOutlineContainer className=\"nav-item-icon\" />\n                                        <AiFillContainer className=\"nav-item-icon icon-activate\" />\n                                        <span className=\"nav-item-lable\">Goods Manager</span>\n                                    </NavLink>\n                                    <NavLink\n                                        to=\"/receiptmanager\"\n                                        className=\"nav-item\"\n                                        href=\"#\"\n                                    >\n                                        <IoReceiptOutline class=\"nav-item-icon\" />\n                                        <IoReceiptSharp class=\"nav-item-icon icon-activate\" />\n                                        <span className=\"nav-item-lable\">Receipt Manager</span>\n                                    </NavLink>\n                                </div>    \n                            ):(null)\n                        }   \n                        \n                        <NavLink to=\"/sellproduct\" className=\"nav-item\" href='#'>\n                            <GiSellCard class=\"nav-item-icon\"/>\n                            <GiSellCard class=\"nav-item-icon icon-activate\"/>\n                            <span className=\"nav-item-lable\">Sell Product</span>\n                        </NavLink>\n                    </div>\n\n                    <div class=\"nav-footer\">\n                        <NavLink\n                            to=\"/login\"\n                            onClick={() => this.props.changeLoginStatus()}\n                            className=\"nav-item\"\n                            style={{ flex: 5 }}\n                        >\n                            <FaSignOutAlt class=\"nav-item-icon\" />\n                            <span className=\"nav-item-lable\">Sign out</span>\n                        </NavLink>\n                        {/* <a href=\"#\" className=\"nav-item\" style={{ flex: 4 }}>\n                            <BsInfoCircleFill class=\"nav-item-icon\" /> */}\n                        <a href=\"#\" className=\"nav-item\" onClick={() => this.props.changeConfirmPasswordTest()} style={{flex: 4}}>\n                            <BsInfoCircleFill class=\"nav-item-icon\"/>\n                            <span className=\"nav-item-lable\">About</span>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isLogin: state.loginStatus,\n        infoUser: state.infoUser,\n        role: state.role,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeLoginStatus: () => {\n            dispatch({\n                type: \"CHANGE_LOGIN_STATUS\",\n            })\n        },\n        changeConfirmPasswordTest: () => {\n            dispatch({\n                type:\"CHANGE_MODAL_CONFIRM_PASSWORD_STATUS\",\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavBar);\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodManager.js",["356","357","358"],"import { Component } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport GoodTable from './GoodPartials/GoodTable';\nimport { NavLink } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport SearchBar from './GoodPartials/SearchBar';\nimport {connect} from 'react-redux'\nimport AddTypeModal from './GoodPartials/AddTypeModal';\nimport '../css/GoodManager.css';\nimport ConfirmModal from './GoodPartials/ConfirmModal';\nimport UpdateGoodModal from './GoodPartials/UpdateGoodModal';\nimport EditTypeModal from './GoodPartials/EditTypeModal';\n\nconst columns = [\n    { field: 'id', headerName: 'ID', width: 40 },\n    { field: 'firstName', headerName: 'First name', width: 200 },\n    { field: 'lastName', headerName: 'Last name', width: 200 },\n    {\n      field: 'age',\n      headerName: 'Age',\n      type: 'number',\n      width: 130,\n    },\n    {\n      field: 'fullName',\n      headerName: 'Full name',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      valueGetter: (params) =>\n        `${params.getValue(params.id, 'firstName') || ''} ${\n          params.getValue(params.id, 'lastName') || ''\n        }`,\n    },\n  ];\n\n  const rows = [\n    { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n    { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n    { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n    { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n    { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n  ];\n\n\nclass GoodManager extends Component {\n    \n    handleAdd() {\n        this.props.changeAddTypeStatus();\n        this.props.setAddTypeStatus();\n    }\n    handleConfirm(){\n        this.props.changeConfirmStatus();\n        this.props.unsetDelete();\n    }\n    handleConfirmDelete(){\n        this.props.changeConfirmStatus();\n        this.props.setDeleteConfirm();\n    }\n    handleUpdateGood() {\n        this.props.changeUpdateGoodStatus();\n    }\n    handleEditType() {\n        this.props.changeEditTypeStatus();\n    }\n    render() {\n        return (\n            <div>\n                Good Manager\n                <div style={{ height: 600, width: '100%', overflowX: 'scroll' }}>\n                    <div style={{display: 'flex'}}>\n                        <Button variant=\"contained\">\n                            <NavLink style={{color: '#fff', textDecoration: 'none'}} to=\"/goodmanager/import\">Import</NavLink>\n                        </Button>\n                        <SearchBar style={{height: '120px'}}/>\n                        <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.handleAdd()} variant=\"contained\">\n                            add type\n                        </Button>\n                        <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.handleEditType()} variant=\"contained\">\n                            edit type\n                        </Button>\n                        <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.handleConfirmDelete()} variant=\"contained\">\n                            Delete\n                        </Button>\n                        <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.handleConfirm()} variant=\"contained\">\n                            Edit\n                        </Button>\n                        <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.handleUpdateGood()} variant=\"contained\">\n                            Update Good\n                        </Button>\n\n                     </div>\n\n                    <GoodTable />\n\n                    {/* Đây là phần modal */}\n                    {this.props.addTypeStatus ? (\n                        <div className=\"modal-add\">\n                            <div onClick={() => {this.props.changeAddTypeStatus();}} className=\"modal-overlay\"></div>\n                            <AddTypeModal></AddTypeModal>\n                        </div>\n                    ): null}\n                    {this.props.confirmStatus ? (\n                        <div className=\"modal-add\">\n                            <div onClick={() => {this.props.changeConfirmStatus();}} className=\"modal-overlay\"></div>\n                            <ConfirmModal></ConfirmModal>\n                        </div>\n                    ): null}\n                    {this.props.updateGoodStatus ? (\n                        <div \n                            className=\"modal-add\"\n                        >\n                            <div onClick={() => {this.props.changeUpdateGoodStatus();}} className=\"modal-overlay\"></div>\n                            <UpdateGoodModal\n                                style={{\n                                    marginTop: 0\n                                }}\n                            >\n                            </UpdateGoodModal>\n                        </div>\n                    ): null}\n                     {this.props.editTypeStatus ? (\n                        <div className=\"modal-add\">\n                            <div onClick={() => {this.props.changeEditTypeStatus();}} className=\"modal-overlay\"></div>\n                            <EditTypeModal></EditTypeModal>\n                        </div>\n                    ): null}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        addTypeStatus: state.addTypeStatus,\n        confirmStatus: state.confirmStatus,\n        deleteStatus: state.deleteStatus,\n        updateGoodStatus: state.updateGoodStatus,\n        editTypeStatus: state.editTypeStatus,\n        isAddTypeStatus: state.isAddTypeStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeAddTypeStatus: () => {\n            dispatch({\n                type: \"CHANGE_ADD_TYPE_STATUS\",\n            });\n        },\n        changeConfirmStatus: () => {\n            dispatch({\n                type: \"CHANGE_CONFIRM_STATUS\",\n            });\n        },\n        unsetDelete: () => {\n            dispatch({\n                type: \"UNSET_DELETE_STATUS\",\n            })\n        },\n        changeUpdateGoodStatus: () => {\n            dispatch({\n                type: \"CHANGE_UPDATE_GOOD_STATUS\",\n            })\n        },\n        changeEditTypeStatus: () => {\n            dispatch({\n                type: \"CHANGE_EDIT_TYPE_STATUS\",\n            })\n        },\n        setAddTypeStatus: () => {\n            dispatch({\n                type: \"SET_ADD_TYPE_STATUS\",\n            });\n        },\n        setDeleteConfirm: () => {\n            dispatch({\n                type: \"SET_CONFIRM_DELETE_GOOD\",\n            }); \n        },\n        \n    }\n}\nexport default connect(mapStateToProps , mapDispatchToProps)(GoodManager);\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeeManager.js",["359","360","361","362","363","364","365","366","367","368"],"import React, { Component } from 'react';\nimport Page from './EmployeePartials/Page';\nimport Label from './EmployeePartials/Label';\nimport Scrollbar from './EmployeePartials/Scrollbar';\nimport SearchNotFound from './EmployeePartials/SearchNotFound';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport {connect} from 'react-redux'\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport {\n    Card,\n    Table,\n    Stack,\n    Avatar,\n    Button,\n    Checkbox,\n    TableRow,\n    TableBody,\n    TableCell,\n    Container,\n    Typography,\n    TableContainer,\n    TablePagination\n} from '@mui/material';\nimport EmployeeToolbar from './EmployeePartials/EmployeeToolbar';\nimport EmployeeMoreMenu from './EmployeePartials/EmployeeMoreMenu';\nimport EmployeeTableHeader from './EmployeePartials/EmployeeTableHeader';\nimport USERLIST from './EmployeePartials/fakeData'\nimport AddEmployeeModal from './EmployeePartials/AddEmployeeModal';\nimport UpdateEmployeeModal from './EmployeePartials/UpdateEmployeeModal';\nimport PayMoneyModal from './EmployeePartials/PayMoneyModal';\n\n\nconst TABLE_HEAD = [\n    { id: 'ID', label: 'ID', alignRight: false },\n    { id: 'firstName', label: 'Name', alignRight: false },\n    { id: 'lastName', label: 'Last Name', alignRight: false },\n    { id: 'old', label: 'Old', alignRight: false },\n    { id: 'gender', label: 'Gender', alignRight: false },\n    { id: 'province', label: 'Province', alignRight: false },\n    { id: 'phoneNumber', label: 'Phone', alignRight: false },\n    { id: 'email', label: 'Email', alignRight: false },\n    { id: 'adress', label: 'Adress', alignRight: false },\n    { id: '' }\n];\n\nvar selected = [];\nvar filterName = \"\";\nvar filteredUsers = USERLIST;\nvar page = 5;\nvar rowsPerPage = 5;\nclass EmployeeManager extends Component {\n    handleFilterByName(event){\n        filterName = event.target.value;\n    }\n    addEmployee () {\n        this.props.changeAddEmployeeStatus();\n    }\n    render() {\n        return (\n            <div\n                style={{height:'800px', overflowY: 'auto'}}\n            >\n                <Container\n                    style={{marginTop: 60}}\n                >\n                    <span\n                        style = {{\n                            color: \"#fff\",\n                            border: '1px solid cyan',\n                            padding: 12,\n                            backgroundColor: '#222'\n                        }}\n                    >\n                        Current Employee\n                    </span>\n                    <Button\n                        variant='contained'\n                        startIcon={<Icon icon={plusFill} />}\n                        onClick={() => this.addEmployee()}\n                    >\n                        New User\n                    </Button>\n\n                    <Card>\n                    {/* <EmployeeToolbar\n                        numSelected={selected.length}\n                        filterName={filterName}\n                        // onFilterName={this.handleFilterByName(event)}\n                    /> */}\n                    <TableContainer>\n                        <Table>\n                            <EmployeeTableHeader\n                                // order={order}\n                                // orderBy={orderBy}\n                                headLabel={TABLE_HEAD}\n                                rowCount={USERLIST.length}\n                                numSelected={selected.length}\n                                // onRequestSort={handleRequestSort}\n                                // onSelectAllClick={handleSelectAllClick}\n                            />\n                            <TableBody\n                                style={{height: '400px', width: '100%'}}\n                            >\n                            {\n                                filteredUsers\n                                .map((row) => {\n                                    \n                                const { id, firstName, lastName, gender, province,email, adress, old, phone, avatarUrl, isVerified } = row;\n                                const isItemSelected = selected.indexOf(firstName) !== -1;\n\n                                return (\n                                    <TableRow\n                                        hover\n                                        key={id}\n                                        tabIndex={-1}\n                                        role=\"checkbox\"\n                                        // selected={isItemSelected}\n                                        // aria-checked={isItemSelected}\n                                    >\n                                        <TableCell padding=\"checkbox\">\n                                            <Checkbox\n                                            checked={isItemSelected}\n                                            // onChange={(event) => handleClick(event, name)}\n                                            />\n                                        </TableCell>\n                                        <TableCell align=\"left\">{id}</TableCell>\n                                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                                            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                                            <Avatar alt={firstName} src={avatarUrl} />\n                                            <Typography variant=\"subtitle2\" noWrap>\n                                                {firstName}\n                                            </Typography>\n                                            </Stack>\n                                        </TableCell>\n                                        <TableCell align=\"left\">{lastName}</TableCell>  \n                                        <TableCell align=\"left\">{old}</TableCell>\n                                        <TableCell align=\"left\">{gender}</TableCell>\n                                        <TableCell align=\"left\">{province}</TableCell>\n                                        <TableCell align=\"left\">{phone}</TableCell>\n                                        <TableCell align=\"left\">{email}</TableCell>\n                                        <TableCell align=\"left\">{adress}</TableCell>\n                                        <TableCell align=\"right\">\n                                            <EmployeeMoreMenu />\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={USERLIST.length}\n                        // rowsPerPage={rowsPerPage}\n                        // page={page}\n                        // onPageChange={handleChangePage}\n                        // onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n                    </Card>\n                </Container>\n                <Container\n                    style={{marginTop: 60}}\n                    style={{\n                        marginBottom: 220,\n                        marginTop: 40\n                    }}\n                >\n                    <span\n                        style = {{\n                            color: \"#fff\",\n                            border: '1px solid cyan',\n                            padding: 12,\n                            margin: 12,\n                            height: 40,\n                            backgroundColor: '#222'\n                        }}\n                    >\n                        Sacked Employee\n                    </span>\n                    <Card>\n                    {/* <EmployeeToolbar\n                        numSelected={selected.length}\n                        filterName={filterName}\n                        // onFilterName={this.handleFilterByName(event)}\n                    /> */}\n                    <TableContainer>\n                    <Table>\n                        <EmployeeTableHeader\n                            // order={order}\n                            // orderBy={orderBy}\n                            headLabel={TABLE_HEAD}\n                            // rowCount={USERLIST.length}\n                            // numSelected={selected.length}\n                            // onRequestSort={handleRequestSort}\n                            // onSelectAllClick={handleSelectAllClick}\n                        />\n                        <TableBody\n                            style={{height: '400px'}}\n                        >\n                        {\n                                filteredUsers\n                                .map((row) => {\n                                    \n                                const { id, firstName, lastName, gender, province,email, adress, old, phone, avatarUrl, isVerified } = row;\n                                const isItemSelected = selected.indexOf(firstName) !== -1;\n\n                                return (\n                                    <TableRow\n                                        hover\n                                        key={id}\n                                        tabIndex={-1}\n                                        role=\"checkbox\"\n                                        // selected={isItemSelected}\n                                        // aria-checked={isItemSelected}\n                                    >\n                                        <TableCell padding=\"checkbox\">\n                                            <Checkbox\n                                            checked={isItemSelected}\n                                            // onChange={(event) => handleClick(event, name)}\n                                            />\n                                        </TableCell>\n                                        <TableCell align=\"left\">{id}</TableCell>\n                                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                                            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                                            <Avatar alt={firstName} src={avatarUrl} />\n                                            <Typography variant=\"subtitle2\" noWrap>\n                                                {firstName}\n                                            </Typography>\n                                            </Stack>\n                                        </TableCell>\n                                        <TableCell align=\"left\">{lastName}</TableCell>  \n                                        <TableCell align=\"left\">{old}</TableCell>\n                                        <TableCell align=\"left\">{gender}</TableCell>\n                                        <TableCell align=\"left\">{province}</TableCell>\n                                        <TableCell align=\"left\">{phone}</TableCell>\n                                        <TableCell align=\"left\">{email}</TableCell>\n                                        <TableCell align=\"left\">{adress}</TableCell>\n                                        <TableCell align=\"right\">\n                                            <EmployeeMoreMenu />\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                                })}\n                        </TableBody>\n                    </Table>\n                    </TableContainer>\n\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={USERLIST.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        // onPageChange={handleChangePage}\n                        // onRowsPerPageChange={handleChangeRowsPerPage}\n                        \n                    />\n                    </Card>\n                </Container>\n                {/* Đây là phần modal */}\n                {this.props.addEmployeeStatus ? (\n                    <div \n                        className=\"modal-add\"\n                    >\n                        <div onClick={() => {this.props.changeAddEmployeeStatus();}} className=\"modal-overlay\"></div>\n                        <AddEmployeeModal\n                            style={{\n                                marginTop: 0\n                            }}\n                        >\n                        </AddEmployeeModal>\n                    </div>\n                ): null}\n                {this.props.updateEmployeeStatus ? (\n                    <div \n                        className=\"modal-add\"\n                    >\n                        <div onClick={() => {this.props.changeUpdateEmployeeStatus();}} className=\"modal-overlay\"></div>\n                        <UpdateEmployeeModal\n                            style={{\n                                marginTop: 0\n                            }}\n                        >\n                        </UpdateEmployeeModal>\n                    </div>\n                ): null}\n                {this.props.payEmployeeStatus ? (\n                    <div \n                        className=\"modal-add\"\n                    >\n                        <div onClick={() => {this.props.changePayEmployeeStatus();}} className=\"modal-overlay\"></div>\n                        <PayMoneyModal\n                            style={{\n                                marginTop: 0\n                            }}\n                        >\n                        </PayMoneyModal>\n                    </div>\n                ): null}\n            </div>\n            \n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        addEmployeeStatus: state.addEmployeeStatus,\n        updateEmployeeStatus: state.updateEmpoyeeStatus,\n        payEmployeeStatus: state.payEmployeeStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeAddEmployeeStatus: () => {\n            dispatch({\n                type: \"CHANGE_ADD_EMPLOYEE_STATUS\",\n            });\n        },\n        changeUpdateEmployeeStatus: () => {\n            dispatch({\n                type: \"CHANGE_UPDATE_EMPLOYEE_STATUS\",\n            });\n        },\n        changePayEmployeeStatus: () => {\n            dispatch({\n                type: \"CHANGE_PAY_EMPLOYEE_STATUS\",\n            });\n        }\n    }\n}\nexport default connect(mapStateToProps , mapDispatchToProps)(EmployeeManager);\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/ReiceiptManager.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/Profile.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/DashBoard.js",["369"],"import React, { Component } from 'react';\nimport '../../css/Dashboard.css'\nimport { Container, Grid } from '@mui/material';\nimport { Typography } from '@mui/material';\nimport { DiApple } from 'react-icons/di'\nimport StaticDateRangePickerDemo from './Calendar'\nimport AppWebsiteVisits from './Statistic';\nimport SplitButton from './GroupButton';\nimport FullCalendar from '@fullcalendar/react' // must go before plugins\nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\nimport interactionPlugin from \"@fullcalendar/interaction\" // needed for dayClick\n\n\nclass DashBoard extends Component {\n\n    renderEventContent = (eventInfo) => {\n        return (\n            <>\n                <b>{eventInfo.timeText}</b>\n                <i>{eventInfo.event.title}</i>\n            </>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"dashboard\" style={{ overflow: 'scroll', overflowX: 'hidden', height: '100vh' }}>\n                <Container style={{ marginTop: '40px' }} maxWidth=\"xl\">\n                    <Grid container spacing={3}>\n                        <Grid className=\"dashboard-item\" item md={3} sm={12} >\n                            <div className=\"dashboard-css\">\n                                <div className=\"dashboard-item-img\" style={{ marginBottom: '30px' }}>\n                                    <DiApple className=\"dashboard-item-icon\"></DiApple>\n                                </div>\n                                <Typography style={{ marginBottom: '10px' }} variant=\"h4\">256</Typography>\n                                <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n                                    Total money\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid className=\"dashboard-item\" item md={3} sm={12} >\n                            <div className=\"dashboard-css sold-good\">\n                                <div className=\"dashboard-item-img sold-good\" style={{ marginBottom: '30px' }}>\n                                    <DiApple className=\"dashboard-item-icon sold-good\"></DiApple>\n                                </div>\n                                <Typography style={{ marginBottom: '10px' }} variant=\"h4\">256</Typography>\n                                <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n                                    Sold good\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid className=\"dashboard-item\" item md={3} sm={12} >\n                            <div className=\"dashboard-css imported-good\">\n                                <div className=\"dashboard-item-img imported-good\" style={{ marginBottom: '30px' }}>\n                                    <DiApple className=\"dashboard-item-icon imported-good\"></DiApple>\n                                </div>\n                                <Typography style={{ marginBottom: '10px' }} variant=\"h4\">256</Typography>\n                                <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n                                    Imported good\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid className=\"dashboard-item\" item md={3} sm={12} >\n                            <div className=\"dashboard-css error-receipt\">\n                                <div className=\"dashboard-item-img error-receipt\" style={{ marginBottom: '30px' }}>\n                                    <DiApple className=\"dashboard-item-icon error-receipt\"></DiApple>\n                                </div>\n                                <Typography style={{ marginBottom: '10px' }} variant=\"h4\">256</Typography>\n                                <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n                                    Error receipt\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid className=\"dashboard-item\" item md={12} sm={12} >\n                            <div style={{ borderRadius: '20px' }}>\n                                <StaticDateRangePickerDemo></StaticDateRangePickerDemo>\n                            </div>\n                        </Grid>\n                        <Grid className=\"dashboard-item\" item md={12} sm={12} >\n                            <div style={{ borderRadius: '20px' }}>\n                                <FullCalendar\n                                    plugins={[ dayGridPlugin, interactionPlugin ]}\n                                    initialView=\"dayGridMonth\"\n                                    weekends={true}\n                                    events={[\n                                        { title: 'event 1', date: '2021-10-18' },\n                                        { title: 'event 2', date: '2021-10-18' }\n                                    ]}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid className=\"dashboard-item\" item md={12} sm={12} >\n                            <AppWebsiteVisits></AppWebsiteVisits>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default DashBoard;","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/GoodImport.js",["370","371","372","373","374","375","376","377"],"import React, { Component } from 'react';\nimport { TextField } from '@mui/material';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport { InputLabel, Button, Modal, Grid, Card, CardHeader} from '@mui/material';\nimport { Image } from 'cloudinary-react';\nimport axios from 'axios';\nimport '../../css/GoodManager.css';\nimport { connect } from 'react-redux';\nimport GoodImage from '../../img/good-example.jpg';\nimport AddTypeModal from './AddTypeModal';\nimport { withStyles } from '@material-ui/styles';\nimport { AiFillPlusCircle} from \"react-icons/ai\";\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport ConfirmModal from './ConfirmModal';\n\n// Use for save type\nvar productTypes =[];\nvar listTypeInfor = [];\n\nvar listProductInfor = [];\n\n// Use for choose type:\nvar typeSet = [];\n\nconst StyledTextField = withStyles((theme) => ({\n    root: {\n      \"& .MuiInputBase-root\": {\n        height: 36,\n        \"& input\": {\n          textAlign: \"right\",\n          marginLeft: '4px',\n        }\n      }\n    }\n  }))(TextField);\n\nclass GoodImport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageSelect: \"null\",\n            type:'none',\n            url: 'http://res.cloudinary.com/databaseimg/image/upload/v1634117795/ubvxisehhpvnu2lbqmeg.png',\n            currentDateTime: new Date('2014-08-18T21:11:54'),\n            change: false,\n        }; \n        this.loadAllType(); \n        this.loadAllGood();\n    }\n    handleAdd(){\n        this.props.changeAddTypeStatus();\n        this.props.setAddTypeStatus();\n    }\n    imgUrl= 'none';\n    dateTime= Date.now();\n\n    profileImageChange = (fileChangeEvent) => {\n        this.setState({\n            imageSelect: fileChangeEvent.target.files[0],\n        })\n        const file = fileChangeEvent.target.files[0];\n        const { type } = file;\n        if (!(type.endsWith('jpeg') || type.endsWith('png') || type.endsWith('jpg') || type.endsWith('gif'))) {\n        } else {\n            const formData = new FormData();\n            formData.append(\"file\", fileChangeEvent.target.files[0])\n            formData.append(\"upload_preset\", \"qqqhcaa3\");\n            axios.post(`https://api.cloudinary.com/v1_1/databaseimg/image/upload`, formData)\n                .then(res => {\n                    this.imgUrl=res.data.url;\n                    this.setState({\n                        change: 'true'\n                    });\n                })\n                .catch(err => {\n                    console.log(\"Thất bại\");\n                })\n\n        }\n\n    }\n\n    async importGood() {\n        // Thêm hàng hoá\n        const data = {\n            token: localStorage.getItem('token'),\n            product: {\n                _id: {\n                    productID: this.generatedID,\n                    importDate: Date(this.dateTime),\n                    storeID: this.props.infoUser.email,\n                },\n                name: document.querySelector('input[name=\"goodName\"]').value,\n                quantity: document.querySelector('input[name=\"goodQuantity\"]').value,\n                remain: document.querySelector('input[name=\"goodQuantity\"]').value,\n                importPrice: document.querySelector('input[name=\"originalPrice\"]').value,\n                sellPrice: document.querySelector('input[name=\"sellPrice\"]').value,\n                expires: document.querySelector('input[name=\"expiredDate\"]').value,\n                imgUrl: this.imgUrl,\n                unit: document.querySelector('input[name=\"unit\"]').value,\n            }\n        }\n        axios.post(`http://localhost:5000/api/product`, data)\n            .then(res => {\n                console.log(\"Save success\");\n                alert(\"Lưu được rồi anh chai\")\n                console.log(data._id.importDate)\n            })\n            .catch(err => {\n                alert(err);\n                console.log(err);\n            })\n\n        //Thêm vào bảng joinType nữa\n        // Giờ thêm nhiều type thì phải làm cái này nhiều lần\n        for(var i = 0 ; i < typeSet.length ; i++)\n        {\n            const data1 = {\n                token: localStorage.getItem('token'),\n                productJoinType: {\n                    _id : {\n                        productID: this.generatedID,\n                        typeID: typeSet[i], \n                        importDate: Date.now(),\n                        storeID: this.props.infoUser.email,\n                    }\n                }\n            }\n            console.log(data1);\n            console.log(\"Đang thêm vô bảng join\")\n            axios.post(`http://localhost:5000/api/product/join`, data1)\n                .then(res => {\n                    console.log(\"lưu vô bảng join thành công\");\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        }\n        \n\n        // console.log(data);\n    }\n    checkConstraint = () => {\n        // Kiểm tra các constraint ở đây coi thử ổn chưa\n        // Kiểm tra thử form ok ko\n        this.props.changeConfirmStatus();\n        this.props.setConfirm();\n    }\n\n    async loadAllType() {\n        var result = [];\n        const data = {\n            token: localStorage.getItem('token'),\n            filter: {\n                storeID: this.props.infoUser.email,\n            }   \n        }\n\n        await axios.get(`http://localhost:5000/api/product/type`, \n        {\n            params: {...data}\n        })\n            .then(res => {\n                result = res.data.data;\n            })\n            .catch(err => {\n                console.log(err);\n                alert(err);\n            })\n        //Get data và lưu các tên Type vào bảng\n        listTypeInfor=[];\n        for(var i=0; i < result.length ; i++)\n        {\n            listTypeInfor.push(result[i]);\n        }\n        productTypes=[];\n        for(var i=0 ; i< listTypeInfor.length ; i ++)\n        {\n            productTypes.push(listTypeInfor[i].name);\n        }\n        this.setState({change: true});\n    }\n\n    async loadAllGood() {\n        var result = [];\n        const data = {\n            token: localStorage.getItem('token'),\n            filter: {\n                storeID: this.props.infoUser.email,\n            }   \n        }\n        await axios.get(`http://localhost:5000/api/product/`, {\n            params: {...data}\n        })\n            .then(res => {\n                alert(\"Lấy hết đc product ròi anh chai\");\n                result = res.data.data;\n                console.log(res.data.data);\n            })\n            .catch(err => {\n                console.log(err);\n                alert(err)\n            })\n        // Get data và lưu các tên Type vào dữ liệU\n        //Get data và lưu các tên Type vào bảng\n        listProductInfor=[];\n        for(var i=0; i < result.length ; i++)\n        {\n            listProductInfor.push(result[i]);\n        }\n        this.generatedID = listProductInfor.length;\n        alert(this.generatedID);\n        this.setState({change: false});\n    }\n\n    generatedID = 0;\n\n    getTypeNamebyTypeID (typeID) {\n        var typeName='';\n        for(var i = 0; i<listTypeInfor.length;i++)\n        {   \n            if(listTypeInfor[i]._id.typeID == typeID)\n            {\n                typeName = listTypeInfor[i].name;\n                break;\n            }\n        }\n        return typeName;\n    }\n\n    render() {\n        \n        return(\n            <div \n                style={{ \n                    height: 600, width: '100%', overflowY: 'scroll', backgroundColor: 'rgb(221,235,255)'   \n                }}\n            >   \n                <div className=\"good-import-header\"></div>\n                <Grid className=\"import-container\" container spacing={2}>\n                    <Grid item md={3}  \n                        style={{\n                            display: 'flex', \n                            justifyContent:'center', \n                            flexDirection:'column',\n                            alignItems:'center',\n                            paddingLeft: '30px'\n                        }}\n                    >   \n                        <label className=\"profile-header__avatar\" for=\"profile-header-update-avatar\" style={{ overflow: 'hidden', marginTop: '15px ' }}>\n                            <Image style={{width: '240px',height: '240px', padding: '10px' }} cloudName=\"databaseimg\" publicId={this.imgUrl=='none' ? 'http://res.cloudinary.com/databaseimg/image/upload/v1634358564/b9wj5lcklxitjglymxqh.png' : this.imgUrl}></Image>\n                        </label>\n                        {/* Ẩn đi */}\n                        <input id=\"profile-header-update-avatar\" type=\"file\" style={{ display: 'none' }} accept=\"image/png, image/jpeg\" onChange={(e) => this.profileImageChange(e)}></input>\n                    </Grid>\n                    <Grid item md={9}>\n\n                        <Card \n                            style={{\n                                marginRight: '18px',\n                            }}\n                        >\n                            <CardHeader style={{ color: 'blue', backgroundColor: '#efeeef' , textAlign: 'center'}} title=\"ADD GOOD\" />\n                            <Grid container md={12}>\n                                <Grid item md={6} \n                                    className='input-item'\n                                >\n                                    <div \n                                        className=\"input-label\"\n                                        style={{\n                                            width: '116px'\n                                        }}\n                                    >\n                                        ID\n                                    </div>\n                                    <StyledTextField\n                                        classname='input-box' \n                                        type=\"text\" \n                                        // class=\"input-val\" \n                                        style = {{width: '100%'}} \n                                        fullWidth \n                                        size=\"small\" \n                                        name=\"goodID\" \n                                        variant=\"outlined\"\n                                        value={this.generatedID}\n                                        inputProps={\n                                            { readOnly: true, }\n                                        } \n                                    />\n                                </Grid>\n                                <Grid item md={6} \n                                    className='input-item'\n                                    style={{\n                                        marginLeft: 0,\n                                        paddingLeft: 0\n                                    }}\n                                >\n                                    <div className=\"input-label\" style={{width: 128}}>Import Date</div>\n                                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                        <DateTimePicker\n                                            renderInput={(params) => <StyledTextField \n                                                                        {...params} \n                                                                        classname='input-box'\n                                                                        name=\"importDateTime\"\n                                                                        style = {{width: '70%', marginRight: 20}} \n                                                                        fullWidth \n                                                                    />}\n                                            value={this.dateTime}\n                                            onChange={(newValue) => {\n                                                this.changeTimeFrom(newValue);\n                                            }}\n                                        />\n                                    </LocalizationProvider>\n                                </Grid>\n                                \n                                <Grid item md={6} \n                                    className='input-item'\n                                >\n                                    <div className=\"input-label\"style={{width: '114px'}}>Name</div>\n                                    <StyledTextField\n                                        classname='input-box'   \n                                        type=\"text\" \n                                        // class=\"input-val\" \n                                        style = {{width: '100%'}} \n                                        fullWidth\n                                        size=\"small\"\n                                        name=\"goodName\" \n                                        variant=\"outlined\" \n                                    />\n                                </Grid>\n                                <Grid item md={3}\n                                    className='input-item'\n                                    style={{padding: '0px', marginLeft: '0px'}}\n                                >\n                                    <div \n                                        className=\"input-label\" \n                                        style={{width: '100px'}}\n                                    >\n                                        Quantity\n                                    </div>\n                                    <StyledTextField\n                                        style = {{width: '60%'}} \n                                        fullWidth\n                                        name=\"goodQuantity\" \n                                        variant=\"outlined\"\n                                        type=\"number\" \n                                    />\n                                </Grid>\n                                <Grid item md={3}\n                                    className='input-item'\n                                    style={{\n                                        paddingRight: 24\n                                    }}\n                                >\n                                    <div \n                                        className=\"input-label\"\n                                        style={{\n                                            marginLeft: 0,\n                                            paddingLeft: 4\n                                        }}\n                                    >\n                                        Unit\n                                    </div>\n                                    <StyledTextField\n                                        classname='input-box'\n                                        style = {{width: '100%', marginLeft: '4px'}} \n                                        fullWidth\n                                        variant=\"outlined\"\n                                        type=\"text\" \n                                        name=\"unit\" \n                                    />\n                                </Grid>\n                                <Grid item md={6}\n                                    className='input-item'\n                                >\n                                    <div className=\"input-label\" style={{width: 128}}>Original Price</div>\n                                    <StyledTextField\n                                        classname='input-box'\n                                        style = {{width: '60%', marginLeft: '4px', marginRight:'8px'}} \n                                        fullWidth\n                                        name=\"originalPrice\" \n                                        variant=\"outlined\"\n                                        type=\"number\" \n                                    />\n                                    đ\n                                </Grid>\n                                <Grid item md={6}\n                                    className='input-item'\n                                    style={{padding: '0px', marginLeft: '0px', paddingRight: 24}}\n                                >\n                                    <div \n                                        className=\"input-label\"\n                                        style={{width: '96px'}}\n                                    >\n                                        Sell Price\n                                    </div>\n                                    <StyledTextField\n                                        classname='input-box'\n                                        style = {{width: '80%', marginLeft: '4px',marginRight:'8px'}} \n                                        fullWidth\n                                        name=\"sellPrice\" \n                                        variant=\"outlined\"\n                                        type=\"number\" \n                                    />\n                                    đ\n                                </Grid>\n                                <Grid item md={7} \n                                    className='input-item'\n                                >\n                                    <div className=\"input-label\" style={{width: 132}}>Expired Date</div>\n                                    <StyledTextField\n                                        classname='input-box'   \n                                        type=\"date\" \n                                        style = {{width: '70%'}} \n                                        fullWidth\n                                        size=\"small\"\n                                        name=\"expiredDate\" \n                                        variant=\"outlined\" \n                                    />\n                                </Grid>\n                                <Grid item md={10}\n                                    className='input-item'\n                                >\n                                    <div \n                                        className=\"input-label\"\n                                        style={{width:132}}\n                                    >\n                                        Product Type\n                                    </div>\n                                    <FormControl sx={{ minWidth: 120 }}>\n                                        {/* <InputLabel id=\"select-filled-label\">Type</InputLabel> */}\n                                        <Select\n                                            value={this.state.type}\n                                            onChange={(event) => {\n                                                this.setState({type: event.target.value});\n                                                if(!typeSet.includes(event.target.value))\n                                                {\n                                                    typeSet.push(event.target.value);\n                                                }\n                                            }}\n                                            style={{\n                                                height: 36,\n                                            }}\n                                        >\n                                            {\n                                                listTypeInfor.length== 0 ? <MenuItem value={'none'}>None</MenuItem>\n                                                : listTypeInfor.map((type) =>\n                                                    <MenuItem value={type._id.typeID}>{type.name}</MenuItem>\n                                                )\n                                            }   \n                                        </Select> \n                                    </FormControl>\n                                    <Button onClick={() => this.handleAdd()}>\n                                        <AiFillPlusCircle\n                                            size={28}\n                                            style={{\n                                                fontSize: 28,\n                                                margin: 0,\n                                                padding: 0,\n                                                width: 28,\n                                                height: 28\n                                            }}    \n                                        />\n                                    </Button>\n                                    <div className='all-type-container'>\n                                            {\n                                                Array.from(typeSet).map((type) =>\n                                                    <div className='type-container'>\n                                                        \n                                                        <CancelIcon\n                                                            className='close-icon'\n                                                            size={10}\n                                                            onClick={() => {\n                                                                typeSet = typeSet.filter(function(item) {\n                                                                    return item != type;\n                                                                })\n                                                                console.log(typeSet);\n                                                                this.setState({type: 'none'});\n                                                            }}\n                                                \n                                                        />\n                                                        <span className='type-title'>\n                                                            {this.getTypeNamebyTypeID(type)}\n                                                        </span>\n                                                    </div>\n                                                    \n                                                )\n                                            }\n                                        </div>\n                                </Grid>\n                                {/* <Grid item md={10}\n                                    className='input-item'\n                                >\n\n                                </Grid> */}\n                                <Grid item md={2}\n                                    className='input-item'\n                                >\n                                    <Button variant=\"contained\" onClick={() => this.importGood()}>\n                                        Import\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    </Grid>\n                    <Grid item sm={12} md={12} >\n                        \n                    </Grid>\n                </Grid> \n                    \n                {this.props.addTypeStatus ? (\n                    <div className=\"modal-add\">\n                        <div onClick={() => {this.props.changeAddTypeStatus();}} className=\"modal-overlay\"></div>\n                        <AddTypeModal></AddTypeModal>\n                    </div>\n                ): null}\n                {this.props.confirmStatus ? (\n                    <div className=\"modal-add\">\n                        <div onClick={() => {this.props.changeConfirmStatus();}} className=\"modal-overlay\"></div>\n                        <ConfirmModal></ConfirmModal>\n                    </div>\n                ): null}\n            </div>\n        );        \n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        addTypeStatus: state.addTypeStatus,\n        infoUser: state.infoUser,\n        isAddTypeStatus: state.isAddTypeStatus,\n        confirmStatus: state.confirmStatus\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeAddTypeStatus: () => {\n            dispatch({\n                type: \"CHANGE_ADD_TYPE_STATUS\",\n            });\n        },\n        updateAvatar: (avatar) => {\n            dispatch({\n                type: \"UPDATE_AVATAR\",\n                avatar: avatar\n            })\n        },\n        setAddTypeStatus: () => {\n            dispatch({\n                type: \"SET_ADD_TYPE_STATUS\",\n            });\n        },\n        changeConfirmStatus: () => {\n            dispatch({\n                type: \"CHANGE_CONFIRM_STATUS\",\n            });\n        },\n        setConfirm: () => {\n            dispatch({\n                type: \"SET_CONFIRM_IMPORT_GOOD\",\n            });\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GoodImport);\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/SellProduct.js",["378","379","380","381"],"import React, { Component } from 'react';\nimport ReactToPrint from 'react-to-print';\nimport { Container, Grid, Button, CardActionArea, CardActions, CardMedia } from '@mui/material';\nimport { ComponentToPrint } from './ComponentToPrint';\nimport '../../css/SellProduct.css'\nimport Tabs from './Tabs'\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport exampleImg from '../../img/good-example.jpg'\nimport { BiPlusMedical } from 'react-icons/bi';\nimport { connect } from 'react-redux'\n\nclass SellProduct extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0,\n        }\n    }\n\n\n    handleChange = (event, newValue) => {\n        this.setState({\n            value: newValue,\n        })\n    };\n\n    bull = (\n        <Box\n            component=\"span\"\n            sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\n        >\n            •\n        </Box>\n    );\n\n    AddProduct = () => {\n        console.log(\"click\");\n    }\n\n    render() {\n        return (\n            <div className=\"sell-product\" >\n                <Container maxWidth=\"xl\">\n                    <Grid container spacing={2}>\n                        <Grid item md={8} sm={4}  >\n                            <div style={{ borderRadius: '8px', marginTop: '20px', backgroundColor: 'beige', height: 'calc(100vh - 40px)', overflow: 'scroll', overflow: 'hidden' }}>\n                                <div style={{ overflow: 'hidden', marginBottom: '5px' }}>\n                                    <Tabs></Tabs>\n                                </div>\n                                <Container id=\"choses-product\" style={{ height: '94%', overflowY: 'scroll' }} maxWidth=\"xl\">\n                                    <Grid container spacing={2}>\n                                        {this.props.listProduct.filter(value => {\n                                            if (this.props.chooseTypeProduct === 'all') {\n                                                return value;\n                                            }\n                                            if (value.type == this.props.chooseTypeProduct) {\n                                                return value\n                                            }\n                                        }).map(value => (\n                                            <Grid item md={3} sm={3}>\n                                                <Card onClick={() => this.AddProduct()}>\n                                                    <CardActionArea>\n                                                        <CardMedia\n                                                            component=\"img\"\n                                                            height=\"140\"\n                                                            image={exampleImg}\n                                                            alt=\"green iguana\"\n                                                        />\n                                                        <CardContent style={{ padding: '5px' }}>\n                                                            <Typography style={{ textAlign: 'center' }} gutterBottom variant=\"h6\" component=\"div\">\n                                                                {value.description}\n                                                            </Typography>\n                                                        </CardContent>\n                                                    </CardActionArea>\n                                                    <CardActions style={{ justifyContent: 'center' }}>\n                                                        <Button style={{ color: 'green', fontWeight: '700' }} endIcon={<BiPlusMedical></BiPlusMedical>} size=\"medium\" color=\"primary\">\n                                                            {value.price}\n                                                        </Button>\n                                                    </CardActions>\n                                                </Card>\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                </Container>\n                            </div>\n                        </Grid>\n                        <Grid item md={4} sm={4} >\n                            <div style={{ borderRadius: '8px', marginTop: '20px', backgroundColor: 'beige', height: 'calc(100vh - 40px)', overflow: 'hidden', overflowX: 'hidden' }}>\n                                <div id=\"choses-product\" style={{ height: '70%', backgroundColor: 'red', margin: '10px', overflowY: 'scroll' }} >\n                                    <Grid sty container spacing={0}>\n                                        <Grid item md={12} sm={12}>\n                                            <div style={{ backgroundColor: 'white', boxShadow: 'rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px' }}>abc</div>\n                                        </Grid>\n                                        <Grid item md={12} sm={12}>\n                                            <div style={{ backgroundColor: 'white', boxShadow: 'rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px' }}>abc</div>\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                                <ReactToPrint\n                                    trigger={() => {\n                                        return <a href=\"#\">Print this out!</a>;\n                                    }}\n                                    content={() => this.componentRef}\n                                />\n                                <div style={{ display: 'none' }}>\n                                    <ComponentToPrint ref={el => (this.componentRef = el)} />\n                                </div>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        listProduct: state.listProduct,\n        chooseTypeProduct: state.chooseTypeProduct,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeAddStatus: () => {\n            dispatch({\n                type: \"CHANGE_ADD_STATUS\",\n            });\n        },\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SellProduct);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/EditTypeModal.js",["382","383","384","385"],"import React, { Component } from 'react';\nimport { Card, CardHeader, Divider, Grid, TextField, Box, CardContent, Button } from '@mui/material';\nimport { connect } from 'react-redux'\nimport { BiPlusMedical, BiEdit} from 'react-icons/bi';\nimport { TiDelete } from \"react-icons/ti\";\nimport Stack from '@mui/material/Stack';\nimport { GiCancel } from 'react-icons/gi'\nimport axios from 'axios';\nimport AddTypeModal from './AddTypeModal';\n\nvar productTypes =[];\nvar listTypeInfor = [];\n\nclass EditTypeModal extends Component {\n    constructor(props) {\n        super(props);\n        this.loadAllType();\n        this.state = {\n            change: false\n        }\n    }\n    confirm = () => {\n        // Thực hiện các lệnh xử lý tại đây\n        this.props.changeConfirmStatus();\n    }\n    cancel = () => {\n        // this.props.changeConfirmStatus();\n        this.props.changeEditTypeStatus();\n    }\n    edit = (type) => {\n        this.props.changeAddTypeStatus();\n        this.props.setEditTypeStatus();\n        this.props.typeToUpdate(type);\n        this.props.changeEditTypeStatus();\n    }\n    async delete(type){\n        const data = {\n            token: localStorage.getItem('token'),\n            productTypes:\n            [\n                {\n                    typeID: type._id.typeID,\n                    storeID: type._id.storeID\n                }\n            ]\n                \n        }\n        await axios.delete(`http://localhost:5000/api/product/type`,{data: data})\n            .then(res => {\n                console.log(\"Update success\");\n                alert('delete được rồi anh trai')\n            })\n            .catch(err => {\n                alert(err);\n                // alert(\"Lỗi gì cmnr\")\n            })\n        this.loadAllType();\n    }\n    \n\n\n    async loadAllType() {\n        var result = [];\n        const data = {\n            token: localStorage.getItem('token'),\n            filter: {\n                storeID: this.props.infoUser.email,\n            }   \n        }\n        console.log(data.token);\n        // alert(data.token);\n        console.log(data.filter);\n        await axios.get(`http://localhost:5000/api/product/type`, \n        {\n            params: {...data}\n        })\n            .then(res => {\n                result = res.data.data;\n            })\n            .catch(err => {\n                console.log(err);\n                alert(err); // 401 ở đây\n            })\n        //Get data và lưu các tên Type vào bảng\n        listTypeInfor=[];\n        for(var i=0; i < result.length ; i++)\n        {\n            listTypeInfor.push(result[i]);\n        }\n        productTypes=[];\n        for(var i=0 ; i< listTypeInfor.length ; i ++)\n        {\n            productTypes.push(listTypeInfor[i].name);\n        }\n        this.setState({change: true});\n    }\n\n    render() {\n        return (\n            <form style={{ zIndex: '10', minWidth: '500px', width: '600px', justifyContent: 'center', marginTop: '10%' }} autoComplete=\"off\" noValidate>\n                <Card>\n                    <CardHeader style={{ color: 'blue', backgroundColor: '#efeeef' }} title=\"All Good Type\" />\n                    <Divider />\n                    <CardContent>\n                        <Grid container spacing={2}>\n                            <Grid container item md={12} xs={12} spacing={0}>\n                                { listTypeInfor.map((type) => (\n                                    <Grid item md={3} style={{border:'1px solid #333', padding: 4}}>\n                                        <span>{type.name}</span>\n                                        <BiEdit onClick={() => this.edit(type)}/>\n                                        <TiDelete onClick={() => this.delete(type)}/>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                            <Grid item md={12} xs={12}>\n                                <Stack spacing={3}>\n                                   \n                                </Stack>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <Divider />\n                    <Box sx={{ display: 'flex', justifyContent: 'space-evenly', p: 2 }}>\n                        <Button style={{ backgroundColor: 'red' }} onClick={(e) => this.cancel(e)} variant=\"contained\" startIcon={<GiCancel />}>\n                            Thoát\n                        </Button>\n                    </Box>\n                </Card>\n                {/* {this.props.addTypeStatus ? (\n                        <div className=\"modal-add\">\n                            <div onClick={() => {this.props.changeAddTypeStatus();}} className=\"modal-overlay\"></div>\n                            <AddTypeModal></AddTypeModal>\n                        </div>\n                    ): null} */}\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        editTypeStatus: state.editTypeStatus,\n        addTypeStatus: state.addTypeStatus,\n        isAddTypeStatus: state.isAddTypeStatus,\n        infoUser: state.infoUser,\n        typeProductValue: state.typeProductValue,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeEditTypeStatus: () => {\n            dispatch({\n                type: \"CHANGE_EDIT_TYPE_STATUS\",\n            });\n        },\n        changeAddTypeStatus: () => {\n            dispatch({\n                type: \"CHANGE_ADD_TYPE_STATUS\",\n            });\n        },\n        setEditTypeStatus: () => {\n            dispatch({\n                type: \"SET_EDIT_TYPE_STATUS\",\n            })\n        },\n        changeConfirmStatus: () => {\n            dispatch({\n                type: \"CHANGE_CONFIRM_STATUS\",\n            });\n        },\n        typeToUpdate: (data) => {\n            dispatch({\n                type: \"UPDATE_PRODUCT_TYPE\",\n                _id: {\n                    typeID: data._id.typeID,\n                    storeID: data._id.storeID,\n                },\n                name: data.name\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTypeModal);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/UpdateEmployeeModal.js",["386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406"],"import React, { Component } from 'react';\nimport { Card, CardHeader, Divider, Grid, TextField, Box, CardContent, Button, InputLabel } from '@mui/material';\nimport { connect } from 'react-redux'\nimport { BiPlusMedical, BiEdit } from 'react-icons/bi';\nimport Stack from '@mui/material/Stack';\nimport { GiCancel } from 'react-icons/gi'\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport { Image } from 'cloudinary-react';\nimport axios from 'axios';\nimport '../../css/GoodManager.css';\nimport { withStyles } from '@material-ui/styles';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DatePicker from '@mui/lab/DatePicker';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport { AiFillPlusCircle} from \"react-icons/ai\";\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nvar productTypes =[\n    'food', 'detergent', 'cuisine'\n];\n\nvar typeSet = [];\n\nconst StyledTextField = withStyles((theme) => ({\n    root: {\n      \"& .MuiInputBase-root\": {\n        height: 36,\n        \"& input\": {\n          textAlign: \"right\",\n          marginLeft: '4px',\n        }\n      }\n    }\n  }))(TextField);\n\nclass UpdateEmployeeModal extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            goodID : \"\",\n            change: false,\n            imageSelect: \"null\",\n            type:'none',\n            url: 'http://res.cloudinary.com/databaseimg/image/upload/v1634117795/ubvxisehhpvnu2lbqmeg.png',\n        }; \n    }\n    \n\n    cancel = () => {\n        this.props.changeAddEmployeeStatus();\n    }\n\n    addEmployee = () => {\n        this.props.changeAddEmployeeStatus();\n    }\n    render() {\n        return (\n            <form style={{ zIndex: '10', width: '60%', justifyContent: 'center', marginTop: '80px'}} autoComplete=\"off\" noValidate>\n                <Card>\n                    <CardHeader style={{ color: 'blue', backgroundColor: '#efeeef' , textAlign: 'center'}} title=\"UPDATE EMPLOYEE\" />\n                        <div \n                        style={{ \n                            width: '100%', backgroundColor: 'rgb(221,235,255)'   \n                        }}\n                    >   \n                    <Grid className=\"import-container\" container >\n                        <Grid item md={12}  \n                            style={{\n                                display: 'flex', \n                                justifyContent:'center', \n                                flexDirection:'column',\n                                alignItems:'center',\n                                marginTop: '0px'\n                            }}\n                        >   \n                            <label className=\"profile-header__avatar\" for=\"profile-header-update-avatar\" style={{ overflow: 'hidden' }}>\n                                <Image style={{width: '150px',height: '150px' }} cloudName=\"databaseimg\" publicId={this.imgUrl=='none' ? 'http://res.cloudinary.com/databaseimg/image/upload/v1634358564/b9wj5lcklxitjglymxqh.png' : this.imgUrl}></Image>\n                            </label>\n                            {/* Ẩn đi */}\n                            <input id=\"profile-header-update-avatar\" type=\"file\" style={{ display: 'none' }} accept=\"image/png, image/jpeg\" onChange={(e) => this.profileImageChange(e)}></input>\n                        </Grid>\n                        <Grid item md={12}>\n\n                            <Card>\n                                \n                                <Grid container md={12}>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div \n                                            className=\"input-label\"\n                                            style={{\n                                                width: '116px'\n                                            }}\n                                        >\n                                            ID\n                                        </div>\n                                        <StyledTextField\n                                            classname='input-box' \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth \n                                            size=\"small\" \n                                            variant=\"outlined\" \n                                            readOnly={true}\n                                            disabled={true}\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>First Name</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>Last Name</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>ID CARD</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\" style={{width: '114px'}}>Old</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>Gender</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>Province</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>PhoneNumber</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '100%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>Email</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>BirthDay</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={9}></Grid>\n                                    <Grid item md={3}\n                                        className='input-item'\n                                    >\n                                        <Button variant=\"contained\" onClick={() => this.props.changeUpdateEmployeeStatus()}>\n                                            UPDATE employee\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                        <Grid item sm={12} md={12} >\n                            \n                        </Grid>\n                    </Grid> \n                </div>\n                </Card>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        addEmployeeStatus: state.addEmployeeStatus,\n        confirmStatus: state.confirmStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeAddEmployeeStatus: () => {\n            dispatch({\n                type: \"CHANGE_ADD_EMPLOYEE_STATUS\",\n            });\n        },\n        changeUpdateEmployeeStatus: () => {\n            dispatch({\n                type: \"CHANGE_UPDATE_EMPLOYEE_STATUS\",\n            });\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateEmployeeModal);\n\n               ","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/PayMoneyModal.js",["407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427"],"import React, { Component } from 'react';\nimport { Card, CardHeader, Divider, Grid, TextField, Box, CardContent, Button, InputLabel } from '@mui/material';\nimport { connect } from 'react-redux'\nimport { BiPlusMedical, BiEdit } from 'react-icons/bi';\nimport Stack from '@mui/material/Stack';\nimport { GiCancel } from 'react-icons/gi'\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport { Image } from 'cloudinary-react';\nimport axios from 'axios';\nimport '../../css/GoodManager.css';\nimport { withStyles } from '@material-ui/styles';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DatePicker from '@mui/lab/DatePicker';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport { AiFillPlusCircle} from \"react-icons/ai\";\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nvar productTypes =[\n    'food', 'detergent', 'cuisine'\n];\n\nvar typeSet = [];\n\nconst StyledTextField = withStyles((theme) => ({\n    root: {\n      \"& .MuiInputBase-root\": {\n        height: 36,\n        \"& input\": {\n          textAlign: \"right\",\n          marginLeft: '4px',\n        }\n      }\n    }\n  }))(TextField);\n\nclass PayEmployeeModal extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            goodID : \"\",\n            change: false,\n            imageSelect: \"null\",\n            type:'none',\n            url: 'http://res.cloudinary.com/databaseimg/image/upload/v1634117795/ubvxisehhpvnu2lbqmeg.png',\n        }; \n    }\n    \n\n    cancel = () => {\n        this.props.changeAddEmployeeStatus();\n    }\n\n    addEmployee = () => {\n        this.props.changeAddEmployeeStatus();\n    }\n    render() {\n        return (\n            <form style={{ zIndex: '10', width: '60%', justifyContent: 'center', marginTop: '80px'}} autoComplete=\"off\" noValidate>\n                <Card>\n                    <CardHeader style={{ color: 'blue', backgroundColor: '#efeeef' , textAlign: 'center'}} title=\"PAY EMPLOYEE\" />\n                        <div \n                        style={{ \n                            width: '100%', backgroundColor: 'rgb(221,235,255)'   \n                        }}\n                    >   \n                    <Grid className=\"import-container\" container >\n                        <Grid item md={12}  \n                            style={{\n                                display: 'flex', \n                                justifyContent:'center', \n                                flexDirection:'column',\n                                alignItems:'center',\n                                marginTop: '0px'\n                            }}\n                        >   \n                            <label className=\"profile-header__avatar\" for=\"profile-header-update-avatar\" style={{ overflow: 'hidden' }}>\n                                <Image style={{width: '150px',height: '150px' }} cloudName=\"databaseimg\" publicId={this.imgUrl=='none' ? 'http://res.cloudinary.com/databaseimg/image/upload/v1634358564/b9wj5lcklxitjglymxqh.png' : this.imgUrl}></Image>\n                            </label>\n                            {/* Ẩn đi */}\n                            <input id=\"profile-header-update-avatar\" type=\"file\" style={{ display: 'none' }} accept=\"image/png, image/jpeg\" onChange={(e) => this.profileImageChange(e)}></input>\n                        </Grid>\n                        <Grid item md={12}>\n\n                            <Card>\n                                \n                                <Grid container md={12}>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div \n                                            className=\"input-label\"\n                                            style={{\n                                                width: '116px'\n                                            }}\n                                        >\n                                            ID\n                                        </div>\n                                        <StyledTextField\n                                            classname='input-box' \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth \n                                            size=\"small\" \n                                            variant=\"outlined\" \n                                            readOnly={true}\n                                            disabled={true}\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>First Name</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>Last Name</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>ID CARD</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\" style={{width: '114px'}}>Old</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>Gender</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>Province</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>PhoneNumber</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '100%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>Email</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>BirthDay</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={9}></Grid>\n                                    <Grid item md={3}\n                                        className='input-item'\n                                    >\n                                        <Button variant=\"contained\" onClick={() => this.props.changePayEmployeeStatus()}>\n                                            Pay employee\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                        <Grid item sm={12} md={12} >\n                            \n                        </Grid>\n                    </Grid> \n                </div>\n                </Card>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changePayEmployeeStatus: () => {\n            dispatch({\n                type: \"CHANGE_PAY_EMPLOYEE_STATUS\",\n            });\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PayEmployeeModal);\n\n               ","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/Tabs.js",["428"],"import * as React from 'react';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport { useSelector , useDispatch} from 'react-redux';\n\nexport default function IconLabelTabs() {\n    const [value, setValue] = React.useState(0);\n    const typeProduct = useSelector(state => state.typeProduct)\n    const dispatch = useDispatch();\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        console.log(newValue);\n        var index;\n        if ( newValue === 0 ) {\n            index = 'all'\n        } else {\n            typeProduct.map((value ,key) => {\n                 if (key === newValue - 1) {\n                    index = value.type\n                }\n            })\n        }\n\n        dispatch({\n            type: \"UPDATE_TYPE_CHOOSE\",\n            typeProduct: index,\n        })\n    };\n    return (\n        <Tabs\n            value={value}\n            onChange={handleChange}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            aria-label=\"scrollable auto tabs example\"\n        >\n            <Tab  label=\"Tất cả\" />\n            {typeProduct.map(value => (\n                <Tab  label={value.name} />\n            ))}\n        </Tabs>\n    );\n}\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/ComponentToPrint.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/ConfirmModal.js",["429","430","431","432","433","434"],"import React, { Component } from 'react';\nimport { Card, CardHeader, Divider, Grid, TextField, Box, CardContent, Button } from '@mui/material';\nimport { connect } from 'react-redux'\nimport { BiPlusMedical, BiEdit } from 'react-icons/bi';\nimport Stack from '@mui/material/Stack';\nimport { GiCancel } from 'react-icons/gi'\nimport axios from 'axios';\n\nclass ConfirmModal extends Component {\n    constructor(props) {\n        super(props);\n    }\n    confirm = () => {\n        // Thực hiện các lệnh xử lý tại đây\n        this.props.changeConfirmStatus();\n        this.props.setConfirm();\n    }\n\n    cancel = () => {\n        this.props.changeConfirmStatus();\n        this.props.setQuit();\n    }\n\n    getMessage = ()  => {\n        var message = \"Cái này chưa code\";\n        switch(this.props.confirmCode)\n        {\n            case 'confirm-delete-good':\n                message = \"Are you sure to delete this product ?\";\n            case 'confirm-import-good':\n                message = \"Are you sure to import this product ?\";\n        }\n        return (\n            <div>\n                {message}\n            </div>\n        );\n    }\n    render() {\n        console.log(this.props.objectEditShift);\n        return (\n            <form style={{ zIndex: '10', minWidth: '500px', width: '600px', justifyContent: 'center', marginTop: '10%' }} autoComplete=\"off\" noValidate>\n                <Card>\n                    <CardHeader style={{ color: 'blue', backgroundColor: '#efeeef' }} title=\"Confirm\" />\n                    <Divider />\n                    <CardContent>\n                        <Grid container spacing={2}>\n                            <Grid item md={12} xs={12}>\n                                {this.getMessage()}\n                            </Grid>\n                            <Grid item md={12} xs={12}>\n                                <Stack spacing={3}>\n                                   \n                                </Stack>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <Divider />\n                    <Box sx={{ display: 'flex', justifyContent: 'space-evenly', p: 2 }}>\n                        <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.confirm()} variant=\"contained\" startIcon={<BiPlusMedical />}>\n                            Xác nhận\n                        </Button>\n                        <Button style={{ backgroundColor: 'red' }} onClick={(e) => this.cancel(e)} variant=\"contained\" startIcon={<GiCancel />}>\n                            Hủy\n                        </Button>\n                    </Box>\n                </Card>\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        confirmStatus: state.confirmStatus,\n        deleteStatus: state.deleteStatus,\n        confirmCode: state.confirmCode,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeConfirmStatus: () => {\n            dispatch({\n                type: \"CHANGE_CONFIRM_STATUS\",\n            });\n        },\n        setConfirm: () => {\n            dispatch({\n                type: \"CONFIRM\",\n            });\n        },\n        setQuit: () => {\n            dispatch({\n                type: \"QUIT\",\n            });\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmModal);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/AddTypeModal.js",["435","436","437","438","439","440","441","442"],"import React, { Component } from 'react';\nimport { Card, CardHeader, Divider, Grid, TextField, Box, CardContent, Button, Alert } from '@mui/material';\nimport { connect } from 'react-redux'\nimport { BiPlusMedical, BiEdit } from 'react-icons/bi';\nimport Stack from '@mui/material/Stack';\nimport { GiCancel, GiVampireCape } from 'react-icons/gi'\nimport axios from 'axios';\n\nvar listTypeInfor = [];\n\nclass AddTypeModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state= {\n            change: 'false'\n        }\n        this.loadInitialData();\n        this.getAllTypeList();\n    }\n    storeID = \"\";\n    typeList = [];\n\n    async getAllTypeList(){\n        var result = [];\n        const data = {\n            token: localStorage.getItem('token'),\n            filter: {\n                storeID: this.props.infoUser.email,\n            }   \n        }\n        console.log(data.token);\n        // alert(data.token);\n        console.log(data.filter);\n        await axios.get(`http://localhost:5000/api/product/type`, \n        {\n            params: {...data}\n        })\n            .then(res => {\n                alert(\"Get success\");\n                result = res.data.data;\n            })\n            .catch(err => {\n                console.log(err);\n                alert(err); // 401 ở đây\n            })\n        //Get data và lưu các tên Type vào bảng\n        for(var i=0; i < result.length ; i++)\n        {\n            listTypeInfor.push(result[i]);\n        }\n    }\n    addType = () => {\n        var newTypeName = document.querySelector('input[name=\"typeName\"]').value.trim();\n        if(this.checkConstraint(newTypeName)==false)  return;\n        const data = {\n            token: localStorage.getItem('token'),\n            productType: {\n                _id:{\n                    typeID: listTypeInfor.length,\n                    storeID: this.props.infoUser.email,\n                },\n                name: newTypeName,\n            }    \n        }\n        axios.post(`http://localhost:5000/api/product/type`, data)\n            .then(res => {\n                alert(\"Save success\");\n                //TODO: Cập nhật token ở đây nữa\n            })\n            .catch(err => {\n                alert(err);\n            })\n        this.props.changeAddTypeStatus();\n    }\n    \n    checkConstraint(typeName) {\n        //Constraint 1: Check name\n        for(var i=0;i<listTypeInfor.length;i++)\n        {\n            if(listTypeInfor[i].name==typeName)\n            {\n                if(!this.props.isAddTypeStatus && typeName.trim()==this.props.typeProductValue.name)\n                {\n                    alert(\"Không đổi tên à anh zai\");\n                    return false;\n                }\n                alert(\"Trùng tên rồi anh chai\");\n                return false;\n            }\n            \n        }        \n        // Constraint 2: Not blank\n        if(typeName.length==0)\n        {\n            alert(\"Không nhập gì à anh chai\")\n            return false;\n        }\n        return true;\n\n    }\n    cancel = () => {\n        this.props.changeAddTypeStatus();\n    }\n\n    handle = () => {\n        if (this.props.isAddTypeStatus)\n            this.addType();\n        else \n            this.editType();\n    }\n\n    editType = () => {\n        var newTypeName = this.typeName;\n        if(this.checkConstraint(newTypeName)==false) return;\n        const data = {\n            token: localStorage.getItem('token'),\n            productType: {\n                _id: {\n                    typeID: this.props.typeProductValue._id.typeID,\n                    storeID: this.props.infoUser.email,\n                }, \n                name: newTypeName,\n            }\n        }\n        // alert(data.product.name)\n        axios.put(`http://localhost:5000/api/product/type`, data)\n            .then(res => {\n                // Có khi mình sẽ cập nhật type ở dây\n                console.log(\"Update success\");\n                alert('update được rồi anh trai')\n            })\n            .catch(err => {\n                console.log(err);\n                alert(\"Lỗi gì cmnr\")\n            })\n        this.props.changeAddTypeStatus();\n        this.props.changeEditTypeStatus();\n    }\n    typeName = \"\";\n    loadInitialData = () => {\n        if (this.props.isAddTypeStatus) {\n            \n        }\n        else\n        {\n            this.typeName = this.props.typeProductValue.name;\n            this.setState({change: true});\n        } \n    }\n\n    changeTypeName(e)\n    {\n        this.typeName = e.target.value;\n    }\n    render() {\n        return (\n            <form style={{ zIndex: '10', minWidth: '500px', width: '600px', justifyContent: 'center', marginTop: '10%' }} autoComplete=\"off\" noValidate>\n                <Card>\n                    <CardHeader \n                        style={{ color: 'blue', backgroundColor: '#efeeef', textAlign: 'center' }} \n                        title={this.props.isAddTypeStatus? \"Add Type\" : \"Edit Type\"}\n                        />\n                    <Divider />\n                    <CardContent>\n                        <Grid \n                            container \n                            spacing={2}\n                            justifyContent={'center'}\n                            alignItems={'center'}\n                        >\n                            <Grid item md={2} xs={12}>\n                                TypeName\n                            </Grid>\n                            <Grid item md={10} xs={12}>\n                                <TextField\n                                    id=\"outlined-basic\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                    type=\"text\"\n                                    name=\"typeName\"\n                                    defaultValue={this.typeName}\n                                    onChange={(e) => this.changeTypeName(e)}\n                                />\n                            </Grid>\n                            <Grid item md={12} xs={12}>\n                                <Stack spacing={3}>\n                                   \n                                </Stack>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <Divider />\n                    <Box sx={{ display: 'flex', justifyContent: 'space-evenly', p: 2 }}>\n                        <Button \n                            style={{ backgroundColor: 'yellowgreen' }} \n                            // onClick={() => this.addShift()} \n                            onClick={() => this.handle()}\n                            variant=\"contained\" \n                            startIcon={<BiPlusMedical />}\n                        >\n                            Xác nhận\n                        </Button>\n                        <Button \n                            style={{ backgroundColor: 'red' }} \n                            // onClick={() => this.editShift()}\n                            onClick={() => this.cancel()}\n                            variant=\"contained\" \n                            startIcon={<GiCancel />}\n                        >\n                            Cancel\n                        </Button>\n                    </Box>\n                </Card>\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        addTypeStatus: state.addTypeStatus,\n        isAddTypeStatus: state.isAddTypeStatus,\n        infoUser: state.infoUser,\n        typeProductValue: state.typeProductValue\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeEditTypeStatus: () => {\n            dispatch({\n                type: \"CHANGE_EDIT_TYPE_STATUS\",\n            });\n        },\n        changeAddTypeStatus: () => {\n            dispatch({\n                type: \"CHANGE_ADD_TYPE_STATUS\",\n            });\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTypeModal);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/Calendar.js",["443","444","445"],"import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport StaticDateRangePicker from '@mui/lab/StaticDateRangePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport Box from '@mui/material/Box';\n\nexport default function StaticDateRangePickerDemo() {\n    const [value, setValue] = React.useState([new Date(2021, 2, 2), new Date(2021, 2, 5)]);\n    const [date, setDate] = React.useState(new Date(2021, 4, 2))\n\n    const value1 = [\n        { date: '2021/01/11', count:2 },\n        { date: '2021/04/12', count:2 },\n        { date: '2021/05/01', count:5 },\n        { date: '2021/05/02', count:5 },\n        { date: '2021/05/03', count:1 },\n        { date: '2021/05/04', count:11 },\n        { date: '2021/05/08', count:32 },\n      ];\n\n    return (\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <StaticDateRangePicker\n                displayStaticWrapperAs=\"desktop\"\n                value={value}\n                onChange={(date) => {\n                    setDate(date);\n                }}\n                renderInput={(startProps, endProps) => (\n                    <React.Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                    </React.Fragment>\n                )}\n                calendars={4}\n                disableAutoMonthSwitching={true}\n            />\n        </LocalizationProvider>\n    );\n}\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/Statistic.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/GroupButton.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/BaseOptionChart.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ModalAdd.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/Regulation.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileSetting.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ListShift.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ChangePassword.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileDetail.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/fakeData.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/AddEmployeeModal.js",["446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466"],"import React, { Component } from 'react';\nimport { Card, CardHeader, Divider, Grid, TextField, Box, CardContent, Button, InputLabel } from '@mui/material';\nimport { connect } from 'react-redux'\nimport { BiPlusMedical, BiEdit } from 'react-icons/bi';\nimport Stack from '@mui/material/Stack';\nimport { GiCancel } from 'react-icons/gi'\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport { Image } from 'cloudinary-react';\nimport axios from 'axios';\nimport '../../css/GoodManager.css';\nimport { withStyles } from '@material-ui/styles';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DatePicker from '@mui/lab/DatePicker';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport { AiFillPlusCircle} from \"react-icons/ai\";\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nvar productTypes =[\n    'food', 'detergent', 'cuisine'\n];\n\nvar typeSet = [];\n\nconst StyledTextField = withStyles((theme) => ({\n    root: {\n      \"& .MuiInputBase-root\": {\n        height: 36,\n        \"& input\": {\n          textAlign: \"right\",\n          marginLeft: '4px',\n        }\n      }\n    }\n  }))(TextField);\n\nclass AddEmployeeModal extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            goodID : \"\",\n            change: false,\n            imageSelect: \"null\",\n            type:'none',\n            url: 'http://res.cloudinary.com/databaseimg/image/upload/v1634117795/ubvxisehhpvnu2lbqmeg.png',\n        }; \n    }\n    \n\n    cancel = () => {\n        this.props.changeAddEmployeeStatus();\n    }\n\n    addEmployee = () => {\n        this.props.changeAddEmployeeStatus();\n    }\n    render() {\n        return (\n            <form style={{ zIndex: '10', width: '60%', justifyContent: 'center', marginTop: '80px'}} autoComplete=\"off\" noValidate>\n                <Card>\n                    <CardHeader style={{ color: 'blue', backgroundColor: '#efeeef' , textAlign: 'center'}} title=\"ADD EMPLOYEE\" />\n                        <div \n                        style={{ \n                            width: '100%', backgroundColor: 'rgb(221,235,255)'   \n                        }}\n                    >   \n                    <Grid className=\"import-container\" container >\n                        <Grid item md={12}  \n                            style={{\n                                display: 'flex', \n                                justifyContent:'center', \n                                flexDirection:'column',\n                                alignItems:'center',\n                                marginTop: '0px'\n                            }}\n                        >   \n                            <label className=\"profile-header__avatar\" for=\"profile-header-update-avatar\" style={{ overflow: 'hidden' }}>\n                                <Image style={{width: '150px',height: '150px' }} cloudName=\"databaseimg\" publicId={this.imgUrl=='none' ? 'http://res.cloudinary.com/databaseimg/image/upload/v1634358564/b9wj5lcklxitjglymxqh.png' : this.imgUrl}></Image>\n                            </label>\n                            {/* Ẩn đi */}\n                            <input id=\"profile-header-update-avatar\" type=\"file\" style={{ display: 'none' }} accept=\"image/png, image/jpeg\" onChange={(e) => this.profileImageChange(e)}></input>\n                        </Grid>\n                        <Grid item md={12}>\n\n                            <Card>\n                                \n                                <Grid container md={12}>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div \n                                            className=\"input-label\"\n                                            style={{\n                                                width: '116px'\n                                            }}\n                                        >\n                                            ID\n                                        </div>\n                                        <StyledTextField\n                                            classname='input-box' \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth \n                                            size=\"small\" \n                                            variant=\"outlined\" \n                                            readOnly={true}\n                                            disabled={true}\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>First Name</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>Last Name</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>ID CARD</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\" style={{width: '114px'}}>Old</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>Gender</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>Province</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>PhoneNumber</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '100%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>Email</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>BirthDay</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={9}></Grid>\n                                    <Grid item md={3}\n                                        className='input-item'\n                                    >\n                                        <Button variant=\"contained\" onClick={() => this.addEmployee()}>\n                                            Add employee\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                        <Grid item sm={12} md={12} >\n                            \n                        </Grid>\n                    </Grid> \n                </div>\n                </Card>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        addEmployeeStatus: state.addEmployeeStatus,\n        confirmStatus: state.confirmStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeAddEmployeeStatus: () => {\n            dispatch({\n                type: \"CHANGE_ADD_EMPLOYEE_STATUS\",\n            });\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEmployeeModal);\n\n               ","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileHeader.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/EmployeeTableHeader.js",["467","468"],"import PropTypes from 'prop-types';\n// material\nimport { visuallyHidden } from '@mui/utils';\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nEmployeeTableHeader.propTypes = {\n  order: PropTypes.oneOf(['asc', 'desc']),\n  orderBy: PropTypes.string,\n  rowCount: PropTypes.number,\n  headLabel: PropTypes.array,\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func,\n  onSelectAllClick: PropTypes.func\n};\n\nexport default function EmployeeTableHeader({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick\n}) {\n  // const createSortHandler = (property) => (event) => {\n  //   onRequestSort(event, property);\n  // };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            // indeterminate={numSelected > 0 && numSelected < rowCount}\n            // checked={rowCount > 0 && numSelected === rowCount}\n            // onChange={onSelectAllClick}\n          />\n        </TableCell>\n        {headLabel.map((headCell) => (\n          <TableCell\n            // key={headCell.id}\n            // align={headCell.alignRight ? 'right' : 'left'}\n            // sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              // hideSortIcon\n              // active={orderBy === headCell.id}\n              // direction={orderBy === headCell.id ? order : 'asc'}\n              // onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {/* {orderBy === headCell.id ? (\n                <Box sx={{ ...visuallyHidden }}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null} */}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/EmployeeMoreMenu.js",["469","470","471"],"import { Icon } from '@iconify/react';\nimport { useRef, useState } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\nimport {GiPayMoney} from \"react-icons/gi\";\nimport {connect} from 'react-redux';\nimport React, { Component } from 'react';\n// material\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nclass EmployeeMoreMenu extends Component {\n  // const ref = useRef(null);\n  // const [isOpen, setIsOpen] = useState(false);\n  \n  constructor(props) {\n    super(props);\n    this.state= {\n      change: 'false'\n    }\n  }\n  setIsOpen(val) {\n    this.isOpen = val;\n    this.setState({change: val});\n  }\n\n  edit() {\n    this.props.changeUpdateEmployeeStatus();\n  }\n\n  isOpen=false;\n  render() {\n    return (\n      <div\n        style={{\n          position:'relative'\n        }}\n      >\n        <IconButton onClick={() => this.setIsOpen(true)}>\n          <Icon icon={moreVerticalFill} width={20} height={20} />\n        </IconButton>\n  \n        <Menu\n          open={this.isOpen}\n          style={{\n            position:'absolute',\n            top: 0,\n            right: 0,\n          }}\n          onClose={() => this.setIsOpen(false)}\n          PaperProps={{\n            sx: { width: 200, maxWidth: '100%' }\n          }}\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n          transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        >\n          <MenuItem sx={{ color: 'text.secondary' }}>\n            <ListItemIcon>\n              <Icon icon={trash2Outline} width={24} height={24} />\n            </ListItemIcon>\n            <ListItemText primary=\"Delete\" primaryTypographyProps={{ variant: 'body2' }} />\n          </MenuItem>\n  \n          <MenuItem sx={{ color: 'text.secondary' }}\n            onClick={() => this.edit()}\n          >\n            <ListItemIcon>\n              <Icon icon={editFill} width={24} height={24} />\n            </ListItemIcon>\n            <ListItemText primary=\"Edit\" primaryTypographyProps={{ variant: 'body2' }} />\n          </MenuItem>\n          <MenuItem sx={{ color: 'text.secondary' }}\n            onClick={()=> this.props.changePayEmployeeStatus()}\n          >\n            <ListItemIcon>\n              <GiPayMoney size={24}/> \n            </ListItemIcon>\n            <ListItemText primary=\"Pay money\" primaryTypographyProps={{ variant: 'body2' }} />\n          </MenuItem>\n        </Menu>\n      </div>\n    );\n  }\n  \n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    updateEmployeeStatus: state.updateEmpoyeeStatus,\n    payEmployeeStatus: state.payEmployeeStatus,\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n      changeUpdateEmployeeStatus: () => {\n          dispatch({\n              type: \"CHANGE_UPDATE_EMPLOYEE_STATUS\",\n          });\n      },\n      changePayEmployeeStatus: () => {\n        dispatch({\n            type: \"CHANGE_PAY_EMPLOYEE_STATUS\",\n        });\n    },\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeMoreMenu);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/EmployeeToolbar.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/Scrollbar.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/SearchNotFound.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/Page.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/Label.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/SearchBar.js",["472","473","474","475"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { MdClear} from \"react-icons/md\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport { withStyles } from '@material-ui/styles';\nimport classNames from \"classnames\";\n\nconst styles = theme => ({\n  root: {\n    // height: theme.spacing(6),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    height: \"80px\",\n  },\n//   iconButton: {\n//     color: theme.palette.action.active,\n//     transform: \"scale(1, 1)\",\n//     transition: theme.transitions.create([\"transform\", \"color\"], {\n//       duration: theme.transitions.duration.shorter,\n//       easing: theme.transitions.easing.easeInOut,\n//     }),\n//   },\n  iconButtonHidden: {\n    transform: \"scale(0, 0)\",\n    \"& > $icon\": {\n      opacity: 0,\n    },\n  },\n  searchIconButton: {\n    // marginRight: theme.spacing(-6),\n  },\n//   icon: {\n//     transition: theme.transitions.create([\"opacity\"], {\n//       duration: theme.transitions.duration.shorter,\n//       easing: theme.transitions.easing.easeInOut,\n//     }),\n//   },\n  input: {\n    width: \"100%\",\n  },\n  searchContainer: {\n    margin: \"4px 8px 4px 8px\",\n    height: \"40px\",\n    // width: `calc(100% - ${theme.spacing(6 + 4)}px)`, // 6 button + 4 margin\n  },\n});\nconst SearchBar = React.forwardRef(\n  (\n    {\n      cancelOnEscape,\n      className,\n      classes,\n      closeIcon,\n      disabled,\n      onCancelSearch,\n      onRequestSearch,\n      searchIcon,\n      style,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const inputRef = React.useRef();\n    const [value, setValue] = React.useState(inputProps.value);\n\n    React.useEffect(() => {\n      setValue(inputProps.value);\n    }, [inputProps.value]);\n\n    const handleFocus = React.useCallback(\n      (e) => {\n        if (inputProps.onFocus) {\n          inputProps.onFocus(e);\n        }\n      },\n      [inputProps.onFocus]\n    );\n\n    const handleBlur = React.useCallback(\n      (e) => {\n        setValue((v) => v.trim());\n        if (inputProps.onBlur) {\n          inputProps.onBlur(e);\n        }\n      },\n      [inputProps.onBlur]\n    );\n\n    const handleInput = React.useCallback(\n      (e) => {\n        setValue(e.target.value);\n        if (inputProps.onChange) {\n          inputProps.onChange(e.target.value);\n        }\n      },\n      [inputProps.onChange]\n    );\n\n    const handleCancel = React.useCallback(() => {\n      setValue(\"\");\n      if (onCancelSearch) {\n        onCancelSearch();\n      }\n    }, [onCancelSearch]);\n\n    const handleRequestSearch = React.useCallback(() => {\n      if (onRequestSearch) {\n        onRequestSearch(value);\n      }\n    }, [onRequestSearch, value]);\n\n    const handleKeyUp = React.useCallback(\n      (e) => {\n        if (e.charCode === 13 || e.key === \"Enter\") {\n          handleRequestSearch();\n        } else if (\n          cancelOnEscape &&\n          (e.charCode === 27 || e.key === \"Escape\")\n        ) {\n          handleCancel();\n        }\n        if (inputProps.onKeyUp) {\n          inputProps.onKeyUp(e);\n        }\n      },\n      [handleRequestSearch, cancelOnEscape, handleCancel, inputProps.onKeyUp]\n    );\n\n    React.useImperativeHandle(ref, () => ({\n      focus: () => {\n        inputRef.current.focus();\n      },\n      blur: () => {\n        inputRef.current.blur();\n      },\n    }));\n\n    return (\n      <Paper className={classNames(classes.root, className)} style={{height: '40px'}}>\n        <div className={classes.searchContainer}>\n          <Input\n            {...inputProps}\n            inputRef={inputRef}\n            onBlur={handleBlur}\n            value={value}\n            onChange={handleInput}\n            onKeyUp={handleKeyUp}\n            onFocus={handleFocus}\n            fullWidth\n            className={classes.input}\n            disableUnderline\n            disabled={disabled}\n          />\n        </div>\n        <IconButton\n          onClick={handleRequestSearch}\n          className={classNames(classes.iconButton, classes.searchIconButton, {\n            [classes.iconButtonHidden]: value !== \"\",\n          })}\n          disabled={disabled}\n        >\n          {React.cloneElement(searchIcon, {\n            classes: { root: classes.icon },\n          })}\n        </IconButton>\n        <IconButton\n          onClick={handleCancel}\n          className={classNames(classes.iconButton, {\n            [classes.iconButtonHidden]: value === \"\",\n          })}\n          disabled={disabled}\n        >\n          {React.cloneElement(closeIcon, {\n            classes: { root: classes.icon },\n          })}\n        </IconButton>\n      </Paper>\n    );\n  }\n);\n\nSearchBar.defaultProps = {\n  className: \"\",\n  closeIcon: <MdClear/>,\n  disabled: false,\n  placeholder: \"Search\",\n  searchIcon: <AiOutlineSearch />,\n  style: null,\n  value: \"\",\n};\n\nSearchBar.propTypes = {\n  cancelOnEscape: PropTypes.bool,\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  closeIcon: PropTypes.node,\n  disabled: PropTypes.bool,\n  onCancelSearch: PropTypes.func,\n  onChange: PropTypes.func,\n  onRequestSearch: PropTypes.func,\n  placeholder: PropTypes.string,\n  searchIcon: PropTypes.node,\n  style: PropTypes.object,\n  value: PropTypes.string,\n};\n\nexport default withStyles(styles)(SearchBar);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/GoodTable.js",["476","477","478","479","480","481","482"],"import * as React from 'react';\nimport { Component } from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport { makeStyles } from '@material-ui/styles';\nimport { withStyles } from '@material-ui/styles';\nimport GoodImage from './goodExample.jpg';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { Image } from 'cloudinary-react';\n\nfunction createData(index, id, name, quantity, originalPrice, sellPrice, importTime, productType, imgUrl) {\n    return {\n        index,\n        id,\n        name,\n        quantity,\n        sellPrice,\n        importTime,\n        imgLink: imgUrl,\n        hidden: [\n            {\n                date: '2020-01-05',\n                remaining: quantity,\n                originalPrice: originalPrice,\n                productType: productType,\n            }\n        ],\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    goodTable_Cell:{\n        borderWidth: '1px',\n        borderColor: '#ccc',\n        borderStyle: 'solid'\n    }\n}));\n\n\n\nfunction Row(props) {\n    const { row } = props;\n    const [open, setOpen] = React.useState(false);\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n                <TableCell className={classes.goodTable_Cell} component=\"th\" scope=\"row\">{row.index}</TableCell>\n                <TableCell className={classes.goodTable_Cell} component=\"th\" scope=\"row\">{row.id}</TableCell>\n                <TableCell className={classes.goodTable_Cell} component=\"th\" scope=\"row\">{row.name}</TableCell>\n                <TableCell className={classes.goodTable_Cell} align=\"right\">{row.quantity}</TableCell>\n                <TableCell className={classes.goodTable_Cell} align=\"right\">{row.sellPrice}</TableCell>\n                <TableCell className={classes.goodTable_Cell} align=\"right\">{row.importTime}</TableCell>\n                <TableCell className={classes.goodTable_Cell} align=\"right\">\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                        {open ? (<KeyboardArrowUpIcon />) : (<KeyboardArrowDownIcon />)}\n                    </IconButton>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell className={classes.goodTable_Cell} style={{ padding: 0}} colSpan={8}>\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <Box sx={{ margin: 1 }}>\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                Other information\n                            </Typography>\n                            <div style={{display: 'flex'}}>\n                                {  \n                                    row.imgLink == \"none\"\n                                    ? <img src={GoodImage} style={{width: '100px', height: '100px', objectFit:'cover'}}/>\n                                    : <Image style={{width: '100px', height: '100px', objectFit:'cover'}} cloudName=\"databaseimg\" publicId={row.imgLink}>{row.imgLink}</Image>\n                                }\n                                \n                                \n                                <Table size=\"small\" aria-label=\"purchases\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell className={classes.goodTable_Cell}>Expired Day</TableCell>\n                                            <TableCell className={classes.goodTable_Cell}>Original Price</TableCell>\n                                            <TableCell className={classes.goodTable_Cell}>Good Remain</TableCell>\n                                            <TableCell className={classes.goodTable_Cell}>Product Type</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {row.hidden.map((hiddenRow) => (\n                                            <TableRow key={hiddenRow.date}>\n                                                <TableCell className={classes.goodTable_Cell} component=\"th\" scope=\"row\">\n                                                    {hiddenRow.date}\n                                                </TableCell>\n                                                <TableCell className={classes.goodTable_Cell}>{hiddenRow.originalPrice}</TableCell>\n                                                <TableCell className={classes.goodTable_Cell}>{hiddenRow.remaining}</TableCell>\n                                                <TableCell className={classes.goodTable_Cell}>{hiddenRow.productType}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                                <div className=\"button-container\">\n                                    <Button \n                                        onClick={() => {\n                                            removeRow(row)\n                                        }}\n                                        variant=\"contained\"\n                                    >\n                                        Update\n                                    </Button>\n                                    <Button variant=\"contained\">Delete</Button>\n                                </div>\n                            </div>  \n                        </Box>\n                    </Collapse>\n                </TableCell>\n            </TableRow>\n        </React.Fragment>\n    );\n}\n\nfunction removeRow(row)\n{\n    rows = rows.filter(function(item) {\n        return item !== row;\n    })   \n    alert(rows.length);\n    // Tới đây là ổn, tìm cách gọi hàm trong class nữa là ok\n    \n}\n\nvar rows = [\n    // createData(1,10001,'Frozen yoghurt', 159, 20, 24, '1/1/2021','food'),\n    // createData(2,10002,'Ice cream sandwich', 237, 27, 37, '2/2/2021', 'food'),\n    // createData(3,10003,'Eclair', 262, 16, 24, '3/3/2021', 'food'),\n    // createData(4,10004,'Cupcake', 305, 47, 67, '4/4/2021', 'cuisine'),\n    // createData(5,10005,'Gingerbread', 356, 26, 49, '31/1/2021', 'cuisine'),\n    // createData(6,10006,'Frozen yoghurt', 159, 20, 24, '1/1/2021','cuisine'),\n    // createData(7,10007,'Ice cream sandwich', 237, 27, 37, '2/2/2021', 'food'),\n    // createData(8,10008,'Eclair', 262, 16, 24, '3/3/2021', 'food'),\n    // createData(9,10009,'Cupcake', 305, 47, 67, '4/4/2021', 'detergent'),\n    // createData(10,10010,'Gingerbread', 356, 26, 49, '31/1/2021', 'detergent'),\n    // createData(11,10011,'Frozen yoghurt', 159, 20, 24, '1/1/2021','detergent'),\n    // createData(12,10012,'Ice cream sandwich', 237, 27, 37, '2/2/2021', 'food'),\n    // createData(13,10013,'Eclair', 262, 16, 24, '3/3/2021', 'food'),\n    // createData(14,10014,'Cupcake', 305, 47, 67, '4/4/2021', 'food'),\n    // createData(15,10015,'Gingerbread', 356, 26, 49, '31/1/2021', 'food'),\n];\nconst styles = theme =>  ({\n    goodTable: {                                     \n        borderWidth: '1px',\n        borderColor: '#ccc',\n        borderStyle: 'solid'\n    },\n    goodTable_Cell: {                                     \n        borderWidth: '1px',\n        borderColor: '#ccc',\n        borderStyle: 'solid',\n        height: '40px',\n    } \n})\n\n\nvar listProductInfor = [];\nvar joinTypeInfor = [];\nvar listTypeInfor = [];\n\nclass GoodTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            update: false\n        }\n        this.loadAllType();\n        this.loadAllGood();\n    }\n    removeProduct= (row) => {\n        // Đây là xử lý ở phía dữ liệu, có thể await gì đó.\n        // Xử lý ở phía giao diện(tạm)\n\n        // Đây là câu lệnh để update nhẹ\n        this.setState({update: this.state.update})\n    }\n    async loadAllGood() {\n        var result = [];\n        const data = {\n            token: localStorage.getItem('token'),\n            filter: {\n                storeID: this.props.infoUser.email,\n            }   \n        }\n        await axios.get(`http://localhost:5000/api/product/`, {\n            params: {...data}\n        })\n            .then(res => {\n                alert(\"Lấy hết đc product ròi anh chai\");\n                result = res.data.data;\n                console.log(res.data.data);\n            })\n            .catch(err => {\n                console.log(err);\n                alert(err)\n            })\n        // Get data và lưu các tên Type vào dữ liệU\n        //Get data và lưu các tên Type vào bảng\n        listProductInfor=[];\n        for(var i=0; i < result.length ; i++)\n        {\n            listProductInfor.push(result[i]);\n        }\n        // Get hết từ cái productjoinType\n        const data1 = {\n            token: localStorage.getItem('token'),\n            filter: {\n                storeID: this.props.infoUser.email,\n            }   \n        }\n        await axios.get(`http://localhost:5000/api/product/join`, {\n            params: {...data}\n        })\n            .then(res => {\n                alert(\"Lấy hết đc join ròi anh chai\");\n                result = res.data.data;\n                console.log(res.data.data);\n            })\n            .catch(err => {\n                console.log(err);\n                alert(err)\n            })  \n        // Lấy các cái jointype\n        joinTypeInfor = [];\n        for(var i = 0 ; i < result.length; i++)\n        {\n            joinTypeInfor.push(result[i]);\n        }\n\n        //createData(index, id, name, quantity, originalPrice, sellPrice, importTime, productType, imgUrl)\n        // Cập nhật vào cái row đi cho chắc\n        rows = [];\n        for(var i = 0; i < listProductInfor.length ; i++)\n        {\n            var obj = listProductInfor[i];\n\n            var joinType = '';\n            // // Lấy tất cả các type trong cái product\n            for(var j = 0; j < joinTypeInfor.length ; j++)\n            {\n\n                // console.log(\"joinTypeInfor[]\", j ,joinTypeInfor[j])\n                if(joinTypeInfor[j]._id.productID == obj._id.productID)\n                {\n                    joinType = joinType + ' ' + this.getTypeNamebyTypeID(joinTypeInfor[j]._id.typeID);\n                }\n            }\n\n            rows.push(\n                createData((i+1), obj._id.productID, obj.name, obj.quantity, \n                    obj.importPrice, obj.sellPrice, obj._id.importDate, joinType, obj.imgUrl)\n            );\n            console.log(\"obj.imgUrl\",obj.imgUrl);\n        }\n        \n        this.setState({change: !this.state.change});\n    }\n\n    async loadAllType() {\n        var result = [];\n        const data = {\n            token: localStorage.getItem('token'),\n            filter: {\n                storeID: this.props.infoUser.email,\n            }   \n        }\n\n        await axios.get(`http://localhost:5000/api/product/type`, \n        {\n            params: {...data}\n        })\n            .then(res => {\n                result = res.data.data;\n            })\n            .catch(err => {\n                console.log(err);\n                alert(err);\n            })\n        //Get data và lưu các tên Type vào bảng\n        listTypeInfor=[];\n        for(var i=0; i < result.length ; i++)\n        {\n            listTypeInfor.push(result[i]);\n        }\n\n        this.setState({change: true});\n    }\n    getTypeNamebyTypeID (typeID) {\n        var typeName='';\n        for(var i = 0; i<listTypeInfor.length;i++)\n        {   \n            if(listTypeInfor[i]._id.typeID == typeID)\n            {\n                typeName = listTypeInfor[i].name;\n                break;\n            }\n        }\n        return typeName;\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <TableContainer component={Paper}>\n                    <Table className={classes.goodTable} aria-label=\"collapsible table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">Index</TableCell>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">ID</TableCell>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">GoodName</TableCell>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">Quantity</TableCell>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">Sell Price</TableCell>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">ImportTime</TableCell>\n                                <TableCell className={classes.goodTable_Cell}/>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map((row) => (\n                                <Row key={row.name} row={row} />\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        addTypeStatus: state.addTypeStatus,\n        infoUser: state.infoUser,\n        isAddTypeStatus: state.isAddTypeStatus,\n        confirmStatus: state.confirmStatus\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)((withStyles(styles, {withTheme: true}))(GoodTable));\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/UpdateGoodModal.js",["483","484","485","486","487","488","489","490","491","492","493","494"],"import React, { Component } from 'react';\nimport { Card, CardHeader, Divider, Grid, TextField, Box, CardContent, Button, InputLabel } from '@mui/material';\nimport { connect } from 'react-redux'\nimport { BiPlusMedical, BiEdit } from 'react-icons/bi';\nimport Stack from '@mui/material/Stack';\nimport { GiCancel } from 'react-icons/gi'\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport { Image } from 'cloudinary-react';\nimport axios from 'axios';\nimport '../../css/GoodManager.css';\nimport GoodImage from './goodExample.jpg';\nimport AddTypeModal from './AddTypeModal';\nimport { withStyles } from '@material-ui/styles';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DatePicker from '@mui/lab/DatePicker';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport { AiFillPlusCircle} from \"react-icons/ai\";\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport ConfirmModal from './ConfirmModal';\n\nvar productTypes =[\n    'food', 'detergent', 'cuisine'\n];\n\nvar typeSet = [];\n\nconst StyledTextField = withStyles((theme) => ({\n    root: {\n      \"& .MuiInputBase-root\": {\n        height: 36,\n        \"& input\": {\n          textAlign: \"right\",\n          marginLeft: '4px',\n        }\n      }\n    }\n  }))(TextField);\n\nclass UpdateGoodModal extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            goodID : \"\",\n            change: false,\n            imageSelect: \"null\",\n            type:'none',\n            url: 'http://res.cloudinary.com/databaseimg/image/upload/v1634117795/ubvxisehhpvnu2lbqmeg.png',\n        }; \n        this.loadInitialData = this.loadInitialData.bind(this);\n        // this.loadInitialData();\n        // alert(this.state.goodID)\n    }\n    imgUrl='none';\n    goodID='';\n    importDate='';\n    name='';\n    imgUrl='';\n    quantity = 0;\n    remain = 0;\n    unit = \"\";\n    sellPrice = \"\";\n    expire =\"\";\n    \n    blurDiscription = (e) => {\n        this.descriptionShift = e.target.value;\n    }\n    blurSalary = (e) => {\n        this.salary = e.target.value;\n    }\n\n    updateGood = () => {\n        this.props.changeUpdateGoodStatus();\n        const data = {\n            token: localStorage.getItem('token'),\n            product: {\n                _id: {\n                    productID: document.querySelector('input[name=\"goodID\"]').value,\n                    importDate: Date(this.dateTime),\n                },\n                name: document.querySelector('input[name=\"goodName\"]').value,\n                quantity: document.querySelector('input[name=\"goodQuantity\"]').value,\n                // remain: document.querySelector('input[name=\"goodQuantity\"]').value,\n                importPrice: document.querySelector('input[name=\"originalPrice\"]').value,\n                sellPrice: document.querySelector('input[name=\"sellPrice\"]').value,\n                expires: document.querySelector('input[name=\"expiredDate\"]').value,\n                imgUrl: this.imgUrl,\n                unit: document.querySelector('input[name=\"unit\"]').value,\n            }\n        }\n        axios.put(`http://localhost:5000/api/product`, data)\n            .then(res => {\n                console.log(\"Update success\");\n                alert('update được rồi anh trai')\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        console.log(data);\n    }\n\n    cancel = () => {\n        this.props.changeUpdateGoodStatus();\n    }\n\n    sampleData = {\n        email:\"19522006@gm.uit.edu.vn\",\n        token:\"this is token\",\n        data: [\n            {\n                _id:{\n                    productID:\"1212121\",\n                    importDate:\"2021-10-08T00:00:00.000Z\"\n                },\n                name:\"SHIIijjjiI\",\n                imgUrl:\"none\",\n                quantity:4,\n                remain:4,\n                unit:\"12\",\n                importPrice:7,\n                sellPrice:7,\n                expires:\"2000-11-10T00:00:00.000Z\",\n            },\n            {\n                _id:{\n                    productID:\"121212aa1\",\n                    importDate:\"2021-10-08T00:00:00.000Z\"\n                }, \n                name:\"q\",\n                imgUrl:\"none\",\n                quantity:11,\n                remain:11,\n                unit:\"11\",\n                importPrice:212,\n                sellPrice:120,\n                expires:\"2021-10-28\"\n            }\n        ]\n    }\n\n    loadInitialData = () => {\n        // Load các dữ liệu ban đầu của form ở đây để mà update nhưng mà bị lỗi 401 mẹ\n        var data = this.sampleData;\n        //Xử lý sampleData\n        var productInfo = data.data[0];\n        this.goodID = productInfo._id.productID;\n        this.importDate = productInfo._id.importDate;\n        this.name = productInfo.name;\n        this.imgUrl = productInfo.imgUrl;\n        this.quantity = productInfo.quantity;\n        // this.remain = productInfo.remain;\n        this.unit = productInfo.unit;\n        this.sellPrice = productInfo.sellPrice;\n        this.expire = productInfo.expires;\n    }\n\n    render() {\n        this.loadInitialData();\n        return (\n            <form style={{ zIndex: '10', width: '60%', justifyContent: 'center', marginTop: '80px'}} autoComplete=\"off\" noValidate>\n                <Card>\n                    <CardHeader style={{ color: 'blue', backgroundColor: '#efeeef' , textAlign: 'center'}} title=\"UPDATE GOOD\" />\n                        <div \n                        style={{ \n                            width: '100%', backgroundColor: 'rgb(221,235,255)'   \n                        }}\n                    >   \n                    <Grid className=\"import-container\" container >\n                        <Grid item md={12}  \n                            style={{\n                                display: 'flex', \n                                justifyContent:'center', \n                                flexDirection:'column',\n                                alignItems:'center',\n                                marginTop: '0px'\n                            }}\n                        >   \n                            <label className=\"profile-header__avatar\" for=\"profile-header-update-avatar\" style={{ overflow: 'hidden' }}>\n                                <Image style={{width: '150px',height: '150px' }} cloudName=\"databaseimg\" publicId={this.imgUrl=='none' ? 'http://res.cloudinary.com/databaseimg/image/upload/v1634358564/b9wj5lcklxitjglymxqh.png' : this.imgUrl}></Image>\n                            </label>\n                            {/* Ẩn đi */}\n                            <input id=\"profile-header-update-avatar\" type=\"file\" style={{ display: 'none' }} accept=\"image/png, image/jpeg\" onChange={(e) => this.profileImageChange(e)}></input>\n                        </Grid>\n                        <Grid item md={12}>\n\n                            <Card \n                            >\n                                \n                                <Grid container md={12}>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div \n                                            className=\"input-label\"\n                                            style={{\n                                                width: '116px'\n                                            }}\n                                        >\n                                            ID\n                                        </div>\n                                        <StyledTextField\n                                            classname='input-box' \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '100%'}} \n                                            fullWidth \n                                            size=\"small\" \n                                            name=\"goodID\" \n                                            variant=\"outlined\" \n                                            value={this.goodID}\n                                            readOnly={true}\n                                            disabled={true}\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                        style={{\n                                            marginLeft: 0,\n                                            paddingLeft: 0\n                                        }}\n                                    >\n                                        <div className=\"input-label\" style={{width: 128}}>Import Date</div>\n                                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                            <DateTimePicker\n                                                renderInput={(params) => <StyledTextField \n                                                                            {...params} \n                                                                            classname='input-box'\n                                                                            name=\"importDateTime\"\n                                                                            style = {{width: '70%', marginRight: 20}} \n                                                                            fullWidth \n                                                                        />}\n                                                value={this.importDate}\n                                                readOnly={true}\n                                                disabled={true}\n                                            />\n                                        </LocalizationProvider>\n                                    </Grid>\n                                    \n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>Name</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '100%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            name=\"goodName\" \n                                            variant=\"outlined\"\n                                            defaultValue={this.name} \n                                        />\n                                    </Grid>\n                                    <Grid item md={3}\n                                        className='input-item'\n                                        style={{padding: '0px', marginLeft: '0px'}}\n                                    >\n                                        <div \n                                            className=\"input-label\" \n                                            style={{width: '100px'}}\n                                        >\n                                            Quantity\n                                        </div>\n                                        <StyledTextField\n                                            style = {{width: '60%'}} \n                                            fullWidth\n                                            name=\"goodQuantity\" \n                                            variant=\"outlined\"\n                                            type=\"number\" \n                                            defaultValue={this.quantity}\n                                        />\n                                    </Grid>\n                                    <Grid item md={3}\n                                        className='input-item'\n                                        style={{\n                                            paddingRight: 24\n                                        }}\n                                    >\n                                        <div \n                                            className=\"input-label\"\n                                            style={{\n                                                marginLeft: 0,\n                                                paddingLeft: 4\n                                            }}\n                                        >\n                                            Unit\n                                        </div>\n                                        <StyledTextField\n                                            classname='input-box'\n                                            style = {{width: '100%', marginLeft: '4px'}} \n                                            fullWidth\n                                            variant=\"outlined\"\n                                            type=\"text\" \n                                            name=\"unit\" \n                                            defaultValue={this.unit}\n                                        />\n                                    </Grid>\n                                    <Grid item md={6}\n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\" style={{width: 128}}>Original Price</div>\n                                        <StyledTextField\n                                            classname='input-box'\n                                            style = {{width: '60%', marginLeft: '4px', marginRight:'8px'}} \n                                            fullWidth\n                                            name=\"originalPrice\" \n                                            variant=\"outlined\"\n                                            type=\"number\"\n                                            defaultValue={this.importPrice}\n                                        />\n                                        đ\n                                    </Grid>\n                                    <Grid item md={6}\n                                        className='input-item'\n                                        style={{padding: '0px', marginLeft: '0px', paddingRight: 24}}\n                                    >\n                                        <div \n                                            className=\"input-label\"\n                                            style={{width: '96px'}}\n                                        >\n                                            Sell Price\n                                        </div>\n                                        <StyledTextField\n                                            classname='input-box'\n                                            style = {{width: '80%', marginLeft: '4px',marginRight:'8px'}} \n                                            fullWidth\n                                            name=\"sellPrice\" \n                                            variant=\"outlined\"\n                                            type=\"number\" \n                                            defaultValue={this.sellPrice}\n                                        />\n                                        đ\n                                    </Grid>\n                                    <Grid item md={7} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\" style={{width: 132}}>Expired Date</div>\n                                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                            <DatePicker\n                                                renderInput={(params) => <StyledTextField \n                                                                            {...params} \n                                                                            classname='input-box'\n                                                                            name=\"expiredDate\"\n                                                                            style = {{width: '70%', marginRight: 20}} \n                                                                            fullWidth \n                                                                            value={this.expire}\n                                                                        />}\n                                                defaultvalue={this.expire}\n                                                onChange={(newValue) => {\n                                                    this.changeTimeFrom(newValue);\n                                                }}\n                                            />\n                                        </LocalizationProvider>\n                                        \n                                    </Grid>\n                                    <Grid item md={10}\n                                        className='input-item'\n                                    >\n                                        <div \n                                            className=\"input-label\"\n                                            style={{width:132}}\n                                        >\n                                            Product Type\n                                        </div>\n                                        <FormControl sx={{ minWidth: 120 }}>\n                                            {/* <InputLabel id=\"select-filled-label\">Type</InputLabel> */}\n                                            <Select\n                                                value={this.state.type}\n                                                onChange={(event) => {\n                                                    this.setState({type: event.target.value});\n                                                    if(!typeSet.includes(event.target.value))\n                                                    {\n                                                        typeSet.push(event.target.value);\n                                                    }\n                                                }}\n                                                style={{\n                                                    height: 36,\n                                                }}\n                                            >\n                                                {\n                                                    productTypes.length== 0 ? <MenuItem value={'none'}>None</MenuItem>\n                                                    : productTypes.map((type) =>\n                                                        <MenuItem value={type}>{type}</MenuItem>\n                                                    )\n                                                }   \n                                            </Select> \n                                        </FormControl>\n                                        <Button onClick={() => this.handleAdd()}>\n                                            <AiFillPlusCircle\n                                                size={28}\n                                                style={{\n                                                    fontSize: 28,\n                                                    margin: 0,\n                                                    padding: 0,\n                                                    width: 28,\n                                                    height: 28\n                                                }}    \n                                            />\n                                        </Button>\n                                        <div className='all-type-container'>\n                                                {\n                                                    Array.from(typeSet).map((type) =>\n                                                        <div className='type-container'>\n                                                            \n                                                            <CancelIcon\n                                                                className='close-icon'\n                                                                size={10}\n                                                                onClick={() => {\n                                                                    typeSet = typeSet.filter(function(item) {\n                                                                        return item != type;\n                                                                    })\n                                                                    console.log(typeSet);\n                                                                    this.setState({type: 'none'});\n                                                                }}\n                                                    \n                                                            />\n                                                            <span className='type-title'>\n                                                                {type}\n                                                            </span>\n                                                        </div>\n                                                        \n                                                    )\n                                                }\n                                            </div>\n                                    </Grid>\n                                    {/* <Grid item md={10}\n                                        className='input-item'\n                                    >\n\n                                    </Grid> */}\n                                    <Grid item md={2}\n                                        className='input-item'\n                                    >\n                                        <Button variant=\"contained\" onClick={() => this.updateGood()}>\n                                            UPDATE\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                        <Grid item sm={12} md={12} >\n                            \n                        </Grid>\n                    </Grid> \n                        \n                    {this.props.addTypeStatus ? (\n                        <div className=\"modal-add\">\n                            <div onClick={() => {this.props.changeAddTypeStatus();}} className=\"modal-overlay\"></div>\n                            <AddTypeModal></AddTypeModal>\n                        </div>\n                    ): null}\n                    {this.props.confirmStatus ? (\n                        <div className=\"modal-add\">\n                            <div onClick={() => {this.props.changeConfirmStatus();}} className=\"modal-overlay\"></div>\n                            <ConfirmModal></ConfirmModal>\n                        </div>\n                    ): null}\n                </div>\n                </Card>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        updateGoodStatus: state.updateGoodStatus,\n        confirmStatus: state.confirmStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeUpdateGoodStatus: () => {\n            dispatch({\n                type: \"CHANGE_UPDATE_GOOD_STATUS\",\n            });\n        },\n        changeConfirmStatus: () => {\n            dispatch({\n                type: \"CHANGE_CONFIRM_STATUS\",\n            });\n        },\n        setUpdateConfirm: () => {\n            dispatch({\n                type: \"SET_CONFIRM_UPDATE_GOOD\",\n            }); \n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateGoodModal);\n\n               ","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/DarkMode.js",[],{"ruleId":"495","replacedBy":"496"},{"ruleId":"497","replacedBy":"498"},{"ruleId":"499","severity":1,"message":"500","line":12,"column":3,"nodeType":"501","messageId":"502","endLine":15,"endColumn":4},{"ruleId":"503","severity":1,"message":"504","line":3,"column":5,"nodeType":"505","messageId":"506","endLine":3,"endColumn":12},{"ruleId":"503","severity":1,"message":"507","line":14,"column":8,"nodeType":"505","messageId":"506","endLine":14,"endColumn":15},{"ruleId":"508","severity":1,"message":"509","line":134,"column":30,"nodeType":"510","messageId":"511","endLine":134,"endColumn":31,"suggestions":"512"},{"ruleId":"508","severity":1,"message":"509","line":134,"column":46,"nodeType":"510","messageId":"511","endLine":134,"endColumn":47,"suggestions":"513"},{"ruleId":"503","severity":1,"message":"507","line":6,"column":8,"nodeType":"505","messageId":"506","endLine":6,"endColumn":15},{"ruleId":"508","severity":1,"message":"509","line":116,"column":28,"nodeType":"510","messageId":"511","endLine":116,"endColumn":29,"suggestions":"514"},{"ruleId":"508","severity":1,"message":"509","line":116,"column":44,"nodeType":"510","messageId":"511","endLine":116,"endColumn":45,"suggestions":"515"},{"ruleId":"503","severity":1,"message":"516","line":13,"column":8,"nodeType":"505","messageId":"506","endLine":13,"endColumn":13},{"ruleId":"503","severity":1,"message":"517","line":42,"column":31,"nodeType":"505","messageId":"506","endLine":42,"endColumn":35},{"ruleId":"503","severity":1,"message":"517","line":108,"column":35,"nodeType":"505","messageId":"506","endLine":108,"endColumn":39},{"ruleId":"508","severity":1,"message":"509","line":148,"column":28,"nodeType":"510","messageId":"511","endLine":148,"endColumn":29,"suggestions":"518"},{"ruleId":"508","severity":1,"message":"509","line":148,"column":44,"nodeType":"510","messageId":"511","endLine":148,"endColumn":45,"suggestions":"519"},{"ruleId":"503","severity":1,"message":"520","line":9,"column":11,"nodeType":"505","messageId":"506","endLine":9,"endColumn":32},{"ruleId":"521","severity":1,"message":"522","line":48,"column":29,"nodeType":"523","endLine":48,"endColumn":159},{"ruleId":"524","severity":1,"message":"525","line":55,"column":57,"nodeType":"526","messageId":"527","endLine":55,"endColumn":59},{"ruleId":"524","severity":1,"message":"525","line":71,"column":57,"nodeType":"526","messageId":"527","endLine":71,"endColumn":59},{"ruleId":"528","severity":1,"message":"529","line":124,"column":25,"nodeType":"523","endLine":124,"endColumn":131},{"ruleId":"503","severity":1,"message":"530","line":2,"column":10,"nodeType":"505","messageId":"506","endLine":2,"endColumn":18},{"ruleId":"503","severity":1,"message":"531","line":14,"column":7,"nodeType":"505","messageId":"506","endLine":14,"endColumn":14},{"ruleId":"503","severity":1,"message":"532","line":37,"column":9,"nodeType":"505","messageId":"506","endLine":37,"endColumn":13},{"ruleId":"503","severity":1,"message":"533","line":2,"column":8,"nodeType":"505","messageId":"506","endLine":2,"endColumn":12},{"ruleId":"503","severity":1,"message":"534","line":3,"column":8,"nodeType":"505","messageId":"506","endLine":3,"endColumn":13},{"ruleId":"503","severity":1,"message":"535","line":4,"column":8,"nodeType":"505","messageId":"506","endLine":4,"endColumn":17},{"ruleId":"503","severity":1,"message":"536","line":5,"column":8,"nodeType":"505","messageId":"506","endLine":5,"endColumn":22},{"ruleId":"503","severity":1,"message":"537","line":7,"column":10,"nodeType":"505","messageId":"506","endLine":7,"endColumn":22},{"ruleId":"503","severity":1,"message":"538","line":25,"column":8,"nodeType":"505","messageId":"506","endLine":25,"endColumn":23},{"ruleId":"503","severity":1,"message":"539","line":48,"column":5,"nodeType":"505","messageId":"506","endLine":48,"endColumn":15},{"ruleId":"503","severity":1,"message":"540","line":109,"column":121,"nodeType":"505","messageId":"506","endLine":109,"endColumn":131},{"ruleId":"541","severity":1,"message":"542","line":166,"column":21,"nodeType":"543","messageId":"544","endLine":169,"endColumn":23},{"ruleId":"503","severity":1,"message":"540","line":207,"column":121,"nodeType":"505","messageId":"506","endLine":207,"endColumn":131},{"ruleId":"503","severity":1,"message":"545","line":8,"column":8,"nodeType":"505","messageId":"506","endLine":8,"endColumn":19},{"ruleId":"503","severity":1,"message":"546","line":6,"column":10,"nodeType":"505","messageId":"506","endLine":6,"endColumn":20},{"ruleId":"503","severity":1,"message":"547","line":6,"column":30,"nodeType":"505","messageId":"506","endLine":6,"endColumn":35},{"ruleId":"503","severity":1,"message":"548","line":11,"column":8,"nodeType":"505","messageId":"506","endLine":11,"endColumn":17},{"ruleId":"549","severity":1,"message":"550","line":182,"column":17,"nodeType":"505","messageId":"551","endLine":182,"endColumn":18},{"ruleId":"524","severity":1,"message":"525","line":227,"column":44,"nodeType":"526","messageId":"527","endLine":227,"endColumn":46},{"ruleId":"524","severity":1,"message":"525","line":256,"column":140,"nodeType":"526","messageId":"527","endLine":256,"endColumn":142},{"ruleId":"524","severity":1,"message":"525","line":451,"column":69,"nodeType":"526","messageId":"527","endLine":451,"endColumn":71},{"ruleId":"524","severity":1,"message":"552","line":480,"column":81,"nodeType":"526","messageId":"527","endLine":480,"endColumn":83},{"ruleId":"553","severity":1,"message":"554","line":50,"column":159,"nodeType":"555","messageId":"527","endLine":50,"endColumn":167},{"ruleId":"556","severity":1,"message":"557","line":56,"column":78,"nodeType":"558","messageId":"559","endLine":56,"endColumn":80},{"ruleId":"524","severity":1,"message":"525","line":60,"column":60,"nodeType":"526","messageId":"527","endLine":60,"endColumn":62},{"ruleId":"528","severity":1,"message":"529","line":105,"column":48,"nodeType":"523","endLine":105,"endColumn":60},{"ruleId":"503","severity":1,"message":"560","line":2,"column":43,"nodeType":"505","messageId":"506","endLine":2,"endColumn":52},{"ruleId":"503","severity":1,"message":"561","line":4,"column":10,"nodeType":"505","messageId":"506","endLine":4,"endColumn":23},{"ruleId":"503","severity":1,"message":"562","line":9,"column":8,"nodeType":"505","messageId":"506","endLine":9,"endColumn":20},{"ruleId":"549","severity":1,"message":"550","line":91,"column":17,"nodeType":"505","messageId":"551","endLine":91,"endColumn":18},{"ruleId":"503","severity":1,"message":"563","line":2,"column":28,"nodeType":"505","messageId":"506","endLine":2,"endColumn":35},{"ruleId":"503","severity":1,"message":"564","line":2,"column":54,"nodeType":"505","messageId":"506","endLine":2,"endColumn":57},{"ruleId":"503","severity":1,"message":"565","line":2,"column":59,"nodeType":"505","messageId":"506","endLine":2,"endColumn":70},{"ruleId":"503","severity":1,"message":"546","line":2,"column":80,"nodeType":"505","messageId":"506","endLine":2,"endColumn":90},{"ruleId":"503","severity":1,"message":"561","line":4,"column":10,"nodeType":"505","messageId":"506","endLine":4,"endColumn":23},{"ruleId":"503","severity":1,"message":"566","line":4,"column":25,"nodeType":"505","messageId":"506","endLine":4,"endColumn":31},{"ruleId":"503","severity":1,"message":"567","line":5,"column":8,"nodeType":"505","messageId":"506","endLine":5,"endColumn":13},{"ruleId":"503","severity":1,"message":"568","line":6,"column":10,"nodeType":"505","messageId":"506","endLine":6,"endColumn":18},{"ruleId":"503","severity":1,"message":"569","line":7,"column":8,"nodeType":"505","messageId":"506","endLine":7,"endColumn":14},{"ruleId":"503","severity":1,"message":"570","line":8,"column":8,"nodeType":"505","messageId":"506","endLine":8,"endColumn":16},{"ruleId":"503","severity":1,"message":"571","line":9,"column":8,"nodeType":"505","messageId":"506","endLine":9,"endColumn":19},{"ruleId":"503","severity":1,"message":"516","line":11,"column":8,"nodeType":"505","messageId":"506","endLine":11,"endColumn":13},{"ruleId":"503","severity":1,"message":"572","line":14,"column":8,"nodeType":"505","messageId":"506","endLine":14,"endColumn":28},{"ruleId":"503","severity":1,"message":"573","line":15,"column":8,"nodeType":"505","messageId":"506","endLine":15,"endColumn":22},{"ruleId":"503","severity":1,"message":"574","line":16,"column":8,"nodeType":"505","messageId":"506","endLine":16,"endColumn":18},{"ruleId":"503","severity":1,"message":"575","line":17,"column":8,"nodeType":"505","messageId":"506","endLine":17,"endColumn":22},{"ruleId":"503","severity":1,"message":"576","line":18,"column":10,"nodeType":"505","messageId":"506","endLine":18,"endColumn":26},{"ruleId":"503","severity":1,"message":"577","line":19,"column":8,"nodeType":"505","messageId":"506","endLine":19,"endColumn":18},{"ruleId":"503","severity":1,"message":"578","line":21,"column":5,"nodeType":"505","messageId":"506","endLine":21,"endColumn":17},{"ruleId":"503","severity":1,"message":"579","line":25,"column":5,"nodeType":"505","messageId":"506","endLine":25,"endColumn":12},{"ruleId":"524","severity":1,"message":"525","line":81,"column":127,"nodeType":"526","messageId":"527","endLine":81,"endColumn":129},{"ruleId":"503","severity":1,"message":"563","line":2,"column":28,"nodeType":"505","messageId":"506","endLine":2,"endColumn":35},{"ruleId":"503","severity":1,"message":"564","line":2,"column":54,"nodeType":"505","messageId":"506","endLine":2,"endColumn":57},{"ruleId":"503","severity":1,"message":"565","line":2,"column":59,"nodeType":"505","messageId":"506","endLine":2,"endColumn":70},{"ruleId":"503","severity":1,"message":"546","line":2,"column":80,"nodeType":"505","messageId":"506","endLine":2,"endColumn":90},{"ruleId":"503","severity":1,"message":"561","line":4,"column":10,"nodeType":"505","messageId":"506","endLine":4,"endColumn":23},{"ruleId":"503","severity":1,"message":"566","line":4,"column":25,"nodeType":"505","messageId":"506","endLine":4,"endColumn":31},{"ruleId":"503","severity":1,"message":"567","line":5,"column":8,"nodeType":"505","messageId":"506","endLine":5,"endColumn":13},{"ruleId":"503","severity":1,"message":"568","line":6,"column":10,"nodeType":"505","messageId":"506","endLine":6,"endColumn":18},{"ruleId":"503","severity":1,"message":"569","line":7,"column":8,"nodeType":"505","messageId":"506","endLine":7,"endColumn":14},{"ruleId":"503","severity":1,"message":"570","line":8,"column":8,"nodeType":"505","messageId":"506","endLine":8,"endColumn":16},{"ruleId":"503","severity":1,"message":"571","line":9,"column":8,"nodeType":"505","messageId":"506","endLine":9,"endColumn":19},{"ruleId":"503","severity":1,"message":"516","line":11,"column":8,"nodeType":"505","messageId":"506","endLine":11,"endColumn":13},{"ruleId":"503","severity":1,"message":"572","line":14,"column":8,"nodeType":"505","messageId":"506","endLine":14,"endColumn":28},{"ruleId":"503","severity":1,"message":"573","line":15,"column":8,"nodeType":"505","messageId":"506","endLine":15,"endColumn":22},{"ruleId":"503","severity":1,"message":"574","line":16,"column":8,"nodeType":"505","messageId":"506","endLine":16,"endColumn":18},{"ruleId":"503","severity":1,"message":"575","line":17,"column":8,"nodeType":"505","messageId":"506","endLine":17,"endColumn":22},{"ruleId":"503","severity":1,"message":"576","line":18,"column":10,"nodeType":"505","messageId":"506","endLine":18,"endColumn":26},{"ruleId":"503","severity":1,"message":"577","line":19,"column":8,"nodeType":"505","messageId":"506","endLine":19,"endColumn":18},{"ruleId":"503","severity":1,"message":"578","line":21,"column":5,"nodeType":"505","messageId":"506","endLine":21,"endColumn":17},{"ruleId":"503","severity":1,"message":"579","line":25,"column":5,"nodeType":"505","messageId":"506","endLine":25,"endColumn":12},{"ruleId":"524","severity":1,"message":"525","line":81,"column":127,"nodeType":"526","messageId":"527","endLine":81,"endColumn":129},{"ruleId":"556","severity":1,"message":"580","line":18,"column":42,"nodeType":"558","messageId":"581","endLine":18,"endColumn":44},{"ruleId":"503","severity":1,"message":"560","line":2,"column":43,"nodeType":"505","messageId":"506","endLine":2,"endColumn":52},{"ruleId":"503","severity":1,"message":"566","line":4,"column":25,"nodeType":"505","messageId":"506","endLine":4,"endColumn":31},{"ruleId":"503","severity":1,"message":"516","line":7,"column":8,"nodeType":"505","messageId":"506","endLine":7,"endColumn":13},{"ruleId":"499","severity":1,"message":"500","line":10,"column":5,"nodeType":"501","messageId":"502","endLine":12,"endColumn":6},{"ruleId":"582","severity":1,"message":"583","line":26,"column":9,"nodeType":"584","messageId":"585","endLine":32,"endColumn":10},{"ruleId":"586","severity":1,"message":"587","line":30,"column":13,"nodeType":"588","messageId":"589","endLine":31,"endColumn":67},{"ruleId":"503","severity":1,"message":"590","line":2,"column":80,"nodeType":"505","messageId":"506","endLine":2,"endColumn":85},{"ruleId":"503","severity":1,"message":"566","line":4,"column":25,"nodeType":"505","messageId":"506","endLine":4,"endColumn":31},{"ruleId":"503","severity":1,"message":"591","line":6,"column":20,"nodeType":"505","messageId":"506","endLine":6,"endColumn":33},{"ruleId":"524","severity":1,"message":"525","line":54,"column":45,"nodeType":"526","messageId":"527","endLine":54,"endColumn":47},{"ruleId":"524","severity":1,"message":"525","line":80,"column":37,"nodeType":"526","messageId":"527","endLine":80,"endColumn":39},{"ruleId":"524","severity":1,"message":"525","line":82,"column":66,"nodeType":"526","messageId":"527","endLine":82,"endColumn":68},{"ruleId":"524","severity":1,"message":"525","line":93,"column":27,"nodeType":"526","messageId":"527","endLine":93,"endColumn":29},{"ruleId":"524","severity":1,"message":"525","line":114,"column":45,"nodeType":"526","messageId":"527","endLine":114,"endColumn":47},{"ruleId":"503","severity":1,"message":"592","line":9,"column":19,"nodeType":"505","messageId":"506","endLine":9,"endColumn":27},{"ruleId":"503","severity":1,"message":"593","line":10,"column":12,"nodeType":"505","messageId":"506","endLine":10,"endColumn":16},{"ruleId":"503","severity":1,"message":"594","line":12,"column":11,"nodeType":"505","messageId":"506","endLine":12,"endColumn":17},{"ruleId":"503","severity":1,"message":"563","line":2,"column":28,"nodeType":"505","messageId":"506","endLine":2,"endColumn":35},{"ruleId":"503","severity":1,"message":"564","line":2,"column":54,"nodeType":"505","messageId":"506","endLine":2,"endColumn":57},{"ruleId":"503","severity":1,"message":"565","line":2,"column":59,"nodeType":"505","messageId":"506","endLine":2,"endColumn":70},{"ruleId":"503","severity":1,"message":"546","line":2,"column":80,"nodeType":"505","messageId":"506","endLine":2,"endColumn":90},{"ruleId":"503","severity":1,"message":"561","line":4,"column":10,"nodeType":"505","messageId":"506","endLine":4,"endColumn":23},{"ruleId":"503","severity":1,"message":"566","line":4,"column":25,"nodeType":"505","messageId":"506","endLine":4,"endColumn":31},{"ruleId":"503","severity":1,"message":"567","line":5,"column":8,"nodeType":"505","messageId":"506","endLine":5,"endColumn":13},{"ruleId":"503","severity":1,"message":"568","line":6,"column":10,"nodeType":"505","messageId":"506","endLine":6,"endColumn":18},{"ruleId":"503","severity":1,"message":"569","line":7,"column":8,"nodeType":"505","messageId":"506","endLine":7,"endColumn":14},{"ruleId":"503","severity":1,"message":"570","line":8,"column":8,"nodeType":"505","messageId":"506","endLine":8,"endColumn":16},{"ruleId":"503","severity":1,"message":"571","line":9,"column":8,"nodeType":"505","messageId":"506","endLine":9,"endColumn":19},{"ruleId":"503","severity":1,"message":"516","line":11,"column":8,"nodeType":"505","messageId":"506","endLine":11,"endColumn":13},{"ruleId":"503","severity":1,"message":"572","line":14,"column":8,"nodeType":"505","messageId":"506","endLine":14,"endColumn":28},{"ruleId":"503","severity":1,"message":"573","line":15,"column":8,"nodeType":"505","messageId":"506","endLine":15,"endColumn":22},{"ruleId":"503","severity":1,"message":"574","line":16,"column":8,"nodeType":"505","messageId":"506","endLine":16,"endColumn":18},{"ruleId":"503","severity":1,"message":"575","line":17,"column":8,"nodeType":"505","messageId":"506","endLine":17,"endColumn":22},{"ruleId":"503","severity":1,"message":"576","line":18,"column":10,"nodeType":"505","messageId":"506","endLine":18,"endColumn":26},{"ruleId":"503","severity":1,"message":"577","line":19,"column":8,"nodeType":"505","messageId":"506","endLine":19,"endColumn":18},{"ruleId":"503","severity":1,"message":"578","line":21,"column":5,"nodeType":"505","messageId":"506","endLine":21,"endColumn":17},{"ruleId":"503","severity":1,"message":"579","line":25,"column":5,"nodeType":"505","messageId":"506","endLine":25,"endColumn":12},{"ruleId":"524","severity":1,"message":"525","line":81,"column":127,"nodeType":"526","messageId":"527","endLine":81,"endColumn":129},{"ruleId":"503","severity":1,"message":"595","line":3,"column":10,"nodeType":"505","messageId":"506","endLine":3,"endColumn":24},{"ruleId":"503","severity":1,"message":"564","line":4,"column":10,"nodeType":"505","messageId":"506","endLine":4,"endColumn":13},{"ruleId":"503","severity":1,"message":"596","line":2,"column":10,"nodeType":"505","messageId":"506","endLine":2,"endColumn":16},{"ruleId":"503","severity":1,"message":"597","line":2,"column":18,"nodeType":"505","messageId":"506","endLine":2,"endColumn":26},{"ruleId":"503","severity":1,"message":"598","line":4,"column":18,"nodeType":"505","messageId":"506","endLine":4,"endColumn":28},{"ruleId":"599","severity":1,"message":"600","line":79,"column":7,"nodeType":"601","endLine":79,"endColumn":27,"suggestions":"602"},{"ruleId":"599","severity":1,"message":"600","line":89,"column":7,"nodeType":"601","endLine":89,"endColumn":26,"suggestions":"603"},{"ruleId":"599","severity":1,"message":"600","line":99,"column":7,"nodeType":"601","endLine":99,"endColumn":28,"suggestions":"604"},{"ruleId":"599","severity":1,"message":"600","line":129,"column":7,"nodeType":"601","endLine":129,"endColumn":78,"suggestions":"605"},{"ruleId":"524","severity":1,"message":"525","line":82,"column":49,"nodeType":"526","messageId":"527","endLine":82,"endColumn":51},{"ruleId":"521","severity":1,"message":"522","line":83,"column":39,"nodeType":"523","endLine":83,"endColumn":122},{"ruleId":"503","severity":1,"message":"606","line":220,"column":15,"nodeType":"505","messageId":"506","endLine":220,"endColumn":20},{"ruleId":"549","severity":1,"message":"550","line":240,"column":17,"nodeType":"505","messageId":"551","endLine":240,"endColumn":18},{"ruleId":"549","severity":1,"message":"550","line":248,"column":17,"nodeType":"505","messageId":"551","endLine":248,"endColumn":18},{"ruleId":"524","severity":1,"message":"525","line":258,"column":51,"nodeType":"526","messageId":"527","endLine":258,"endColumn":53},{"ruleId":"524","severity":1,"message":"525","line":307,"column":44,"nodeType":"526","messageId":"527","endLine":307,"endColumn":46},{"ruleId":"503","severity":1,"message":"563","line":2,"column":28,"nodeType":"505","messageId":"506","endLine":2,"endColumn":35},{"ruleId":"503","severity":1,"message":"564","line":2,"column":54,"nodeType":"505","messageId":"506","endLine":2,"endColumn":57},{"ruleId":"503","severity":1,"message":"565","line":2,"column":59,"nodeType":"505","messageId":"506","endLine":2,"endColumn":70},{"ruleId":"503","severity":1,"message":"546","line":2,"column":80,"nodeType":"505","messageId":"506","endLine":2,"endColumn":90},{"ruleId":"503","severity":1,"message":"561","line":4,"column":10,"nodeType":"505","messageId":"506","endLine":4,"endColumn":23},{"ruleId":"503","severity":1,"message":"566","line":4,"column":25,"nodeType":"505","messageId":"506","endLine":4,"endColumn":31},{"ruleId":"503","severity":1,"message":"567","line":5,"column":8,"nodeType":"505","messageId":"506","endLine":5,"endColumn":13},{"ruleId":"503","severity":1,"message":"568","line":6,"column":10,"nodeType":"505","messageId":"506","endLine":6,"endColumn":18},{"ruleId":"503","severity":1,"message":"548","line":13,"column":8,"nodeType":"505","messageId":"506","endLine":13,"endColumn":17},{"ruleId":"524","severity":1,"message":"525","line":182,"column":127,"nodeType":"526","messageId":"527","endLine":182,"endColumn":129},{"ruleId":"524","severity":1,"message":"525","line":385,"column":72,"nodeType":"526","messageId":"527","endLine":385,"endColumn":74},{"ruleId":"524","severity":1,"message":"552","line":414,"column":85,"nodeType":"526","messageId":"527","endLine":414,"endColumn":87},"no-native-reassign",["607"],"no-negated-in-lhs",["608"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'emailjs' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["609","610"],["611","612"],["613","614"],["615","616"],"'axios' is defined but never used.","'data' is assigned a value but never used.",["617","618"],["619","620"],"'statusConfirmPassword' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'DataGrid' is defined but never used.","'columns' is assigned a value but never used.","'rows' is assigned a value but never used.","'Page' is defined but never used.","'Label' is defined but never used.","'Scrollbar' is defined but never used.","'SearchNotFound' is defined but never used.","'sentenceCase' is defined but never used.","'EmployeeToolbar' is defined but never used.","'filterName' is assigned a value but never used.","'isVerified' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'SplitButton' is defined but never used.","'InputLabel' is defined but never used.","'Modal' is defined but never used.","'GoodImage' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","Expected '!==' and instead saw '!='.","no-dupe-keys","Duplicate key 'overflow'.","ObjectExpression","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'TextField' is defined but never used.","'BiPlusMedical' is defined but never used.","'AddTypeModal' is defined but never used.","'Divider' is defined but never used.","'Box' is defined but never used.","'CardContent' is defined but never used.","'BiEdit' is defined but never used.","'Stack' is defined but never used.","'GiCancel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'LocalizationProvider' is defined but never used.","'AdapterDateFns' is defined but never used.","'DatePicker' is defined but never used.","'DateTimePicker' is defined but never used.","'AiFillPlusCircle' is defined but never used.","'CancelIcon' is defined but never used.","'productTypes' is assigned a value but never used.","'typeSet' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'Alert' is defined but never used.","'GiVampireCape' is defined but never used.","'setValue' is assigned a value but never used.","'date' is assigned a value but never used.","'value1' is assigned a value but never used.","'visuallyHidden' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'RouterLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'inputProps'. Either include it or remove the dependency array.","ArrayExpression",["621"],["622"],["623"],["624"],"'data1' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"625","fix":"626","desc":"627"},{"messageId":"628","fix":"629","desc":"630"},{"messageId":"625","fix":"631","desc":"627"},{"messageId":"628","fix":"632","desc":"630"},{"messageId":"625","fix":"633","desc":"627"},{"messageId":"628","fix":"634","desc":"630"},{"messageId":"625","fix":"635","desc":"627"},{"messageId":"628","fix":"636","desc":"630"},{"messageId":"625","fix":"637","desc":"627"},{"messageId":"628","fix":"638","desc":"630"},{"messageId":"625","fix":"639","desc":"627"},{"messageId":"628","fix":"640","desc":"630"},{"desc":"641","fix":"642"},{"desc":"641","fix":"643"},{"desc":"641","fix":"644"},{"desc":"645","fix":"646"},"removeEscape",{"range":"647","text":"648"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"649","text":"650"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"651","text":"648"},{"range":"652","text":"650"},{"range":"653","text":"648"},{"range":"654","text":"650"},{"range":"655","text":"648"},{"range":"656","text":"650"},{"range":"657","text":"648"},{"range":"658","text":"650"},{"range":"659","text":"648"},{"range":"660","text":"650"},"Update the dependencies array to be: [inputProps]",{"range":"661","text":"662"},{"range":"663","text":"662"},{"range":"664","text":"662"},"Update the dependencies array to be: [cancelOnEscape, inputProps, handleRequestSearch, handleCancel]",{"range":"665","text":"666"},[4483,4484],"",[4483,4483],"\\",[4499,4500],[4499,4499],[3620,3621],[3620,3620],[3636,3637],[3636,3636],[6396,6397],[6396,6396],[6412,6413],[6412,6412],[1989,2009],"[inputProps]",[2200,2219],[2427,2448],[3164,3235],"[cancelOnEscape, inputProps, handleRequestSearch, handleCancel]"]
>>>>>>> cd65222cdfc5e8fb4e88595a47d0b4df838d1e75
