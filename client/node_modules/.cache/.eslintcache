[{"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\index.js":"1","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\App.js":"2","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Store.js":"3","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\LoginStatusReducer.js":"4","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ProvinceReducer.js":"5","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\TypeStatusReducer.js":"6","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\DistrictReducer.js":"7","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ObjectEditShiftReducer.js":"8","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\RoleReducer.js":"9","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ConfirmModalReducer.js":"10","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ListProductReducer.js":"11","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\typeProductReducer.js":"12","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\InfoUserReducer.js":"13","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ListShiftReducer.js":"14","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\chooseTypeProduct.js":"15","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\TypeProductValueReducer.js":"16","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\AlertReducer.js":"17","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\InfoUpdateProduct.js":"18","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Router\\DirectionURL.js":"19","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusEditShiftReducer.js":"20","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddShiftReducer.js":"21","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusDeleteConfirmReducer.js":"22","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusConfirmReducer.js":"23","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusUpdateGoodReducer.js":"24","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusIsAddTypeReducer.js":"25","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddTypeReducer.js":"26","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusModalConfirmPassword.js":"27","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusDarkModeReducer.js":"28","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusEditTypeReducer.js":"29","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusYesConfirmReducer.js":"30","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusPayMoneyStatus.js":"31","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusUpdateEmployeeReducer.js":"32","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\SellProduct\\StatusShowHistoryRecieptReducer.js":"33","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddEmployeeReducer.js":"34","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\SellProduct\\ListRecieptReducer.js":"35","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\SellProduct\\InfomationBillEdit.js":"36","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\SellProduct\\ShoppingBagsReducer.js":"37","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\employeeSackedListReducer.js":"38","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\employeeListReducer.js":"39","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\SellProduct\\StatusEditInfomationBill.js":"40","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\RecieptManager\\TypeByDate.js":"41","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\RecieptManager\\StatusSelectAll.js":"42","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\RecieptManager\\ListRecieptDelete.js":"43","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\RecieptManager\\TypeReciept.js":"44","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\currentEditEmployeeReducer.js":"45","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Body.js":"46","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\Login.js":"47","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\ForgotPassword.js":"48","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\LoginWithEmployee.js":"49","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\Register.js":"50","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Router\\DashboardURL.js":"51","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\ModalConfirmPassword.js":"52","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Partials\\SideNavBar.js":"53","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodManager.js":"54","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeeManager.js":"55","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\GoodImport.js":"56","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\DashBoard.js":"57","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\RecieptManager\\ReiceiptManager.js":"58","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\SellProduct.js":"59","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\Profile.js":"60","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\EditTypeModal.js":"61","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\Regulation.js":"62","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ModalAdd.js":"63","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ListShift.js":"64","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ChangePassword.js":"65","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileSetting.js":"66","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileDetail.js":"67","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\AddTypeModal.js":"68","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\DarkMode.js":"69","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileHeader.js":"70","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\HistoryReciept.js":"71","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\Print.js":"72","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\ShoppingBags.js":"73","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\Tabs.js":"74","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\RecieptManager\\DateReciept.js":"75","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\RecieptManager\\TableReciept.js":"76","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\RecieptManager\\ControlReciept.js":"77","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\RecieptManager\\StatusReceiptType.js":"78","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\GroupButton.js":"79","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\Calendar.js":"80","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\Statistic.js":"81","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\ConfirmModal.js":"82","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\TableReciept.js":"83","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\ComponentToPrint.js":"84","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\UnShiftEmployee.js":"85","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\FixedCalendar.js":"86","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\UpdateEmployeeModal.js":"87","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\AddEmployeeModal.js":"88","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\PayMoneyModal.js":"89","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\fakeData.js":"90","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\EmployeeTableHeader.js":"91","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\BaseOptionChart.js":"92","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\FixedCalendarCell.js":"93","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\EmployeeMoreMenu.js":"94","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\SackedEmployeeMenu.js":"95","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\EmployeeToolbar.js":"96","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\SearchNotFound.js":"97","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\Scrollbar.js":"98","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\Label.js":"99","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\Page.js":"100","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\SearchBar.js":"101","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\UpdateGoodModal.js":"102","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\GoodTable.js":"103","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\TableRow.js":"104","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\RecieptManager\\SearchReducer.js":"105","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\RecieptManager\\SearchReceipt.js":"106","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\addNextWeekTimeKeepingStatus.js":"107","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\nextWeekTimeKeepingReducer.js":"108","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\listShiftAssignReducer.js":"109","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\updateNextWeekTimeKeepingStatus.js":"110","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\addTimeKeepingStatus.js":"111","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\updateNextWeekTimeKeepingValue.js":"112","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\listTimeKeepingReducer.js":"113","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\updateTimeKeepingStatus.js":"114","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\updateTimeKeeperValue.js":"115","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\TimekeepingTable.js":"116","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\AddTimeKeeperModal.js":"117","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\NoJobEmployee.js":"118","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\UpdateTimeKeepingModal.js":"119","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\AddNextWeekTimeKeeping.js":"120","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\UpdateNextWeekTimeKeeping.js":"121"},{"size":309,"mtime":1634653035214,"results":"122","hashOfConfig":"123"},{"size":3417,"mtime":1637075276195,"results":"124","hashOfConfig":"123"},{"size":6097,"mtime":1637075276219,"results":"125","hashOfConfig":"123"},{"size":295,"mtime":1634653035195,"results":"126","hashOfConfig":"123"},{"size":384,"mtime":1634653035196,"results":"127","hashOfConfig":"123"},{"size":343,"mtime":1634653035200,"results":"128","hashOfConfig":"123"},{"size":376,"mtime":1634661219450,"results":"129","hashOfConfig":"123"},{"size":340,"mtime":1634653035196,"results":"130","hashOfConfig":"123"},{"size":316,"mtime":1634653035196,"results":"131","hashOfConfig":"123"},{"size":482,"mtime":1634653035193,"results":"132","hashOfConfig":"123"},{"size":715,"mtime":1637075276218,"results":"133","hashOfConfig":"123"},{"size":731,"mtime":1637075276219,"results":"134","hashOfConfig":"123"},{"size":2623,"mtime":1637078234606,"results":"135","hashOfConfig":"123"},{"size":1666,"mtime":1635820567487,"results":"136","hashOfConfig":"123"},{"size":360,"mtime":1635428539250,"results":"137","hashOfConfig":"123"},{"size":668,"mtime":1635260224145,"results":"138","hashOfConfig":"123"},{"size":670,"mtime":1635349470393,"results":"139","hashOfConfig":"123"},{"size":558,"mtime":1637075276217,"results":"140","hashOfConfig":"123"},{"size":2219,"mtime":1634653035202,"results":"141","hashOfConfig":"123"},{"size":312,"mtime":1634653035198,"results":"142","hashOfConfig":"123"},{"size":303,"mtime":1634653035196,"results":"143","hashOfConfig":"123"},{"size":390,"mtime":1634653035198,"results":"144","hashOfConfig":"123"},{"size":303,"mtime":1634653035197,"results":"145","hashOfConfig":"123"},{"size":323,"mtime":1635428539248,"results":"146","hashOfConfig":"123"},{"size":372,"mtime":1634653035198,"results":"147","hashOfConfig":"123"},{"size":304,"mtime":1634653035197,"results":"148","hashOfConfig":"123"},{"size":370,"mtime":1634653035199,"results":"149","hashOfConfig":"123"},{"size":302,"mtime":1634653035197,"results":"150","hashOfConfig":"123"},{"size":309,"mtime":1634653035198,"results":"151","hashOfConfig":"123"},{"size":350,"mtime":1634653035200,"results":"152","hashOfConfig":"123"},{"size":324,"mtime":1634653035199,"results":"153","hashOfConfig":"123"},{"size":339,"mtime":1634653035199,"results":"154","hashOfConfig":"123"},{"size":341,"mtime":1636018498899,"results":"155","hashOfConfig":"123"},{"size":324,"mtime":1634653035196,"results":"156","hashOfConfig":"123"},{"size":3266,"mtime":1637050661786,"results":"157","hashOfConfig":"123"},{"size":357,"mtime":1636272916157,"results":"158","hashOfConfig":"123"},{"size":1333,"mtime":1636811971103,"results":"159","hashOfConfig":"123"},{"size":1796,"mtime":1637075276213,"results":"160","hashOfConfig":"123"},{"size":2587,"mtime":1637075276212,"results":"161","hashOfConfig":"123"},{"size":341,"mtime":1636272406917,"results":"162","hashOfConfig":"123"},{"size":340,"mtime":1636611050856,"results":"163","hashOfConfig":"123"},{"size":382,"mtime":1637048575528,"results":"164","hashOfConfig":"123"},{"size":629,"mtime":1636694738193,"results":"165","hashOfConfig":"123"},{"size":541,"mtime":1636615262019,"results":"166","hashOfConfig":"123"},{"size":901,"mtime":1636472317541,"results":"167","hashOfConfig":"123"},{"size":1612,"mtime":1636637337399,"results":"168","hashOfConfig":"123"},{"size":13205,"mtime":1637075276209,"results":"169","hashOfConfig":"123"},{"size":12948,"mtime":1635355253856,"results":"170","hashOfConfig":"123"},{"size":8366,"mtime":1637076919113,"results":"171","hashOfConfig":"123"},{"size":15628,"mtime":1636527552475,"results":"172","hashOfConfig":"123"},{"size":1758,"mtime":1636533344072,"results":"173","hashOfConfig":"123"},{"size":1956,"mtime":1634653035172,"results":"174","hashOfConfig":"123"},{"size":10939,"mtime":1637075276209,"results":"175","hashOfConfig":"123"},{"size":5988,"mtime":1636472317532,"results":"176","hashOfConfig":"123"},{"size":31393,"mtime":1637075276196,"results":"177","hashOfConfig":"123"},{"size":31229,"mtime":1637075276207,"results":"178","hashOfConfig":"123"},{"size":5591,"mtime":1635354580147,"results":"179","hashOfConfig":"123"},{"size":1979,"mtime":1636904547766,"results":"180","hashOfConfig":"123"},{"size":13341,"mtime":1637050302794,"results":"181","hashOfConfig":"123"},{"size":3969,"mtime":1637078411114,"results":"182","hashOfConfig":"123"},{"size":7839,"mtime":1636472317534,"results":"183","hashOfConfig":"123"},{"size":7794,"mtime":1636638369417,"results":"184","hashOfConfig":"123"},{"size":14755,"mtime":1636638645344,"results":"185","hashOfConfig":"123"},{"size":7583,"mtime":1636638522337,"results":"186","hashOfConfig":"123"},{"size":8040,"mtime":1636638317394,"results":"187","hashOfConfig":"123"},{"size":1157,"mtime":1636638477062,"results":"188","hashOfConfig":"123"},{"size":20710,"mtime":1637078950613,"results":"189","hashOfConfig":"123"},{"size":8567,"mtime":1637075276206,"results":"190","hashOfConfig":"123"},{"size":3134,"mtime":1634653035174,"results":"191","hashOfConfig":"123"},{"size":4541,"mtime":1635355632563,"results":"192","hashOfConfig":"123"},{"size":1162,"mtime":1636640740329,"results":"193","hashOfConfig":"123"},{"size":8067,"mtime":1637050284332,"results":"194","hashOfConfig":"123"},{"size":3646,"mtime":1636728521023,"results":"195","hashOfConfig":"123"},{"size":1359,"mtime":1637050313449,"results":"196","hashOfConfig":"123"},{"size":9090,"mtime":1637068963318,"results":"197","hashOfConfig":"123"},{"size":26887,"mtime":1637068715797,"results":"198","hashOfConfig":"123"},{"size":12643,"mtime":1637069218116,"results":"199","hashOfConfig":"123"},{"size":4129,"mtime":1636639477504,"results":"200","hashOfConfig":"123"},{"size":2783,"mtime":1634653035157,"results":"201","hashOfConfig":"123"},{"size":1607,"mtime":1634653035155,"results":"202","hashOfConfig":"123"},{"size":1849,"mtime":1634653035157,"results":"203","hashOfConfig":"123"},{"size":3507,"mtime":1634653035163,"results":"204","hashOfConfig":"123"},{"size":17692,"mtime":1637050310185,"results":"205","hashOfConfig":"123"},{"size":6985,"mtime":1636562253245,"results":"206","hashOfConfig":"123"},{"size":10329,"mtime":1637075276203,"results":"207","hashOfConfig":"123"},{"size":4964,"mtime":1637075276199,"results":"208","hashOfConfig":"123"},{"size":21068,"mtime":1637075276204,"results":"209","hashOfConfig":"123"},{"size":21420,"mtime":1637075276197,"results":"210","hashOfConfig":"123"},{"size":10046,"mtime":1637075276201,"results":"211","hashOfConfig":"123"},{"size":698,"mtime":1636472317531,"results":"212","hashOfConfig":"123"},{"size":2923,"mtime":1636602355360,"results":"213","hashOfConfig":"123"},{"size":5649,"mtime":1634653035155,"results":"214","hashOfConfig":"123"},{"size":9566,"mtime":1637075276200,"results":"215","hashOfConfig":"123"},{"size":5041,"mtime":1637075276198,"results":"216","hashOfConfig":"123"},{"size":5021,"mtime":1637075276202,"results":"217","hashOfConfig":"123"},{"size":2489,"mtime":1634653035159,"results":"218","hashOfConfig":"123"},{"size":0,"mtime":1634653035161,"results":"219","hashOfConfig":"123"},{"size":1541,"mtime":1634653035161,"results":"220","hashOfConfig":"123"},{"size":2458,"mtime":1634653035160,"results":"221","hashOfConfig":"123"},{"size":482,"mtime":1634653035160,"results":"222","hashOfConfig":"123"},{"size":5541,"mtime":1634653035165,"results":"223","hashOfConfig":"123"},{"size":33701,"mtime":1636472317539,"results":"224","hashOfConfig":"123"},{"size":7657,"mtime":1637075276207,"results":"225","hashOfConfig":"123"},{"size":11400,"mtime":1637075276208,"results":"226","hashOfConfig":"123"},{"size":372,"mtime":1636795594837,"results":"227","hashOfConfig":"123"},{"size":967,"mtime":1636806231322,"results":"228","hashOfConfig":"123"},{"size":380,"mtime":1637075276210,"results":"229","hashOfConfig":"123"},{"size":2316,"mtime":1637075276214,"results":"230","hashOfConfig":"123"},{"size":2361,"mtime":1637075276213,"results":"231","hashOfConfig":"123"},{"size":395,"mtime":1637075276215,"results":"232","hashOfConfig":"123"},{"size":339,"mtime":1637075276211,"results":"233","hashOfConfig":"123"},{"size":996,"mtime":1637075276215,"results":"234","hashOfConfig":"123"},{"size":3068,"mtime":1637075276214,"results":"235","hashOfConfig":"123"},{"size":354,"mtime":1637075276216,"results":"236","hashOfConfig":"123"},{"size":921,"mtime":1637075276216,"results":"237","hashOfConfig":"123"},{"size":8366,"mtime":1637075276202,"results":"238","hashOfConfig":"123"},{"size":16319,"mtime":1637075276198,"results":"239","hashOfConfig":"123"},{"size":4224,"mtime":1637075276201,"results":"240","hashOfConfig":"123"},{"size":18605,"mtime":1637075276205,"results":"241","hashOfConfig":"123"},{"size":20141,"mtime":1637075276197,"results":"242","hashOfConfig":"123"},{"size":20024,"mtime":1637075276204,"results":"243","hashOfConfig":"123"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},"1ieljoc",{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"246"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"246"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"246"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"246"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"246"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"246"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"246"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"246"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"246"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"246"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"246"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"246"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"246"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"246"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"246"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"246"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"246"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"246"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"246"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"246"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"246"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"246"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"246"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\index.js",[],["510","511"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\App.js",["512","513"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Store.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\LoginStatusReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ProvinceReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\TypeStatusReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\DistrictReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ObjectEditShiftReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\RoleReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ConfirmModalReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ListProductReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\typeProductReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\InfoUserReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ListShiftReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\chooseTypeProduct.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\TypeProductValueReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\AlertReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\InfoUpdateProduct.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Router\\DirectionURL.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusEditShiftReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddShiftReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusDeleteConfirmReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusConfirmReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusUpdateGoodReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusIsAddTypeReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddTypeReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusModalConfirmPassword.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusDarkModeReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusEditTypeReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusYesConfirmReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusPayMoneyStatus.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusUpdateEmployeeReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\SellProduct\\StatusShowHistoryRecieptReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddEmployeeReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\SellProduct\\ListRecieptReducer.js",["514","515","516"],"const listRecieptInitialState = [],\r\n    listRecieptReducer = (state = listRecieptInitialState, action) => {\r\n        switch (action.type) {\r\n            case \"UPDATE_RECIEPT_USER\":\r\n                action.listReciept.map(value => {\r\n                    let data = {\r\n                        MAHD: value._id.receiptID,\r\n                        name: value.employeeID.name,\r\n                        idUser: value.employeeID._id.employeeID ? value.employeeID._id.employeeID : '',\r\n                        date: value.createAt,\r\n                        discount: value.discount,\r\n                        totalMoney: value.totalMoney,\r\n                        totalFinalMoney: value.totalFinalMoney,\r\n                        listProduct: value.listItem,\r\n                        time: value.timeCreate,\r\n                        isEdit: value.isEdit,\r\n                        oldBill: value.oldBill,\r\n                        deleted: value.deleted ? value.deleted : false,\r\n                    }\r\n                    state.push(data)\r\n                })\r\n                return state;\r\n            case \"ADD_RECIEPT\":\r\n                return [...state, action.newReciept]\r\n            case \"EDIT_SHOPPING_BAGS\":\r\n                return state.filter((value) => {\r\n                    if (value.MAHD === action.MAHD) {\r\n                        value.isEdit = true\r\n                    }\r\n                    return value;\r\n                })\r\n            case \"DELETE_RECIEPT\":\r\n                return state.filter((value) => {\r\n                    if (value.MAHD === action.MAHD) {\r\n                        value.deleted = true\r\n                    }\r\n                    return value;\r\n                })\r\n            case \"DELETE_ONE_RECIEPT\":\r\n                return state.filter((value) => {\r\n                    if (value.MAHD !== action.MAHD) {\r\n                        return value\r\n                    }\r\n                })\r\n            case \"DELETE_MAHD_SELECTED_RECIEPT\":\r\n                return state.filter(value => {\r\n                    action.listMAHD.map(value1 => {\r\n                        if (value.MAHD === value1) {\r\n                            value.deleted = true\r\n                        }\r\n                    })\r\n                    return value\r\n                })\r\n            case \"DELETE_MAHD_INVOICE_RECIEPT\":\r\n                return state.filter(value => {\r\n                    return !value.deleted\r\n                })\r\n            case \"RESTONE_ONE_RECIEPT\":\r\n                return state.filter(value => {\r\n                    if (value.MAHD === action.MAHD) {\r\n                        value.deleted = false;\r\n                    }\r\n                    return value\r\n                })\r\n            case \"RESTONE_ALL_RECIEPT\":\r\n                return state.filter(value => {\r\n                    value.deleted = false;\r\n                    return value\r\n                })\r\n            case \"DELETE_ALL_RECIEPT\":\r\n                return state.filter(value => {\r\n                    value.deleted = true\r\n                    return value;\r\n                })\r\n            case \"RESET_ALL_RECIEPT_USER\":\r\n                return [];\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\nexport default listRecieptReducer;","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\SellProduct\\InfomationBillEdit.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\SellProduct\\ShoppingBagsReducer.js",["517"],"const shoppingBagsInitialState = [],\r\n    shoppingBagsReducer = (state = shoppingBagsInitialState, action) => {\r\n        switch (action.type) {\r\n            case \"ADD_NEW_PRODUCT_SHOPPING_BAGS\": \r\n                return [...state, action.newProduct];\r\n            case \"RAISE_QUANTITY_SHOPPING_BAGS\":\r\n                return state.map(value => {\r\n                    if (value.product.name === action.name) {\r\n                        value.quantity += 1;\r\n                    }\r\n                    return value\r\n                })\r\n            case \"REDUCE_QUANTITY_SHOPPING_BAGS\":\r\n                return state.map(value => {\r\n                    if (value.product.name === action.name) {\r\n                        value.quantity -= 1;\r\n                    }\r\n                    return value\r\n                })\r\n            case \"DELETE_PRODUCT_SHOPPING_BAGS\":\r\n                return state.filter((value) => {\r\n                    if (value.product.name !== action.name) {\r\n                        return value;\r\n                    } \r\n                })\r\n            case \"RESET_SHOPPING_BAGS\":\r\n                return state = [];\r\n            case \"INFO_SHOPPING_BAGS_EDIT\":\r\n                return action.listProduct\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\nexport default shoppingBagsReducer;","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\employeeSackedListReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\employeeListReducer.js",["518","519","520"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\SellProduct\\StatusEditInfomationBill.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\RecieptManager\\TypeByDate.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\RecieptManager\\StatusSelectAll.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\RecieptManager\\ListRecieptDelete.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\RecieptManager\\TypeReciept.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\currentEditEmployeeReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Body.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\Login.js",["521","522","523"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\ForgotPassword.js",["524","525","526"],"import React, { Component } from 'react';\r\nimport Avatar from '@mui/material/Avatar'\r\nimport { IconContext } from \"react-icons\";\r\nimport { FiSend } from \"react-icons/fi\";\r\nimport { BsFillEnvelopeFill, BsLockFill, BsBoxArrowInLeft, BsCodeSlash } from \"react-icons/bs\";\r\nimport emailjs from 'emailjs-com';\r\nimport axios from 'axios';\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nvar bcrypt = require('bcryptjs');\r\n\r\n\r\nclass ForgotPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            code: \"\",\r\n            statusSendCode: true,\r\n        }\r\n    }\r\n\r\n\r\n    // Send code tới người dùng\r\n    sendCode = (a = this.makeCode(6)) => {\r\n        this.setState({\r\n            code: \"123456\"\r\n        })\r\n        // this.setState({\r\n        //     code: a,\r\n        // })\r\n        // emailjs.init(\"user_K1g5N5hUDI0rjsa1uRoI4\");\r\n        // emailjs.send(\"gmail_main\", \"template_plasdgf\", {\r\n        //     To_mail: `${document.querySelector('#email').value}`,\r\n        //     code: `${a}`,\r\n        // })\r\n        //     .then((response) => {\r\n        //         console.log('SUCCESS!', response.status, response.text);\r\n        //     }, (err) => {\r\n        //         console.log('FAILED...', err);\r\n        //     });\r\n    }\r\n\r\n    // Tạo code để xác nhận\r\n    makeCode = (length) => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() *\r\n                charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // Hashpassword\r\n    hash = (pass) => {\r\n        var hash = bcrypt.hashSync(pass, 12)\r\n        return hash;\r\n    }\r\n\r\n    //Check tìm lại mật khẩu\r\n    findPassword = (e) => {\r\n        if (this.blurEmail() && this.blurCode() && this.blurPassword() && this.blurRePassword()) {\r\n            const form = document.getElementById('findpass-form');\r\n            axios.post(`http://localhost:5000/find-password`, {\r\n                email: document.querySelector('#email').value,\r\n                password: this.hash(document.getElementById('password').value),\r\n            })\r\n                .then(res => {\r\n                    form.reset();\r\n                    console.log(res.data.status);\r\n                    switch (res.data.status) {\r\n                        case 1:\r\n                            this.props.hideAlert();\r\n                            this.props.showAlert(res.data.message, \"success\");\r\n                            break;\r\n                        case -1:\r\n                            this.props.hideAlert();\r\n                            this.props.showAlert(res.data.message, \"error\");\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.props.hideAlert();\r\n                    this.props.showAlert(\"Error system\", \"error\");\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    // Handle user blue change in input\r\n    blurEmail = () => {\r\n        var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        const event = document.querySelector('#email');\r\n        const elementValue = event.value;\r\n        const formGroup = event.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            this.setState({\r\n                statusSendCode: false,\r\n            })\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurPassword = () => {\r\n        const e = document.getElementById('password');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\r\n            return false;\r\n        } else if (e.value.length < 6) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurCode = () => {\r\n        const e = document.getElementById('code');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (this.state.code === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please press Send Code\"\r\n            return false\r\n        } else if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter code here\"\r\n            return false\r\n        } else if (elementValue !== this.state.code) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Code is incorrect\"\r\n            return false\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurRePassword = () => {\r\n        const e = document.getElementById('re-password')\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (document.getElementById('password').value !== elementValue) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Re-password not correct\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true\r\n        }\r\n    }\r\n\r\n    changeInput = (e) => {\r\n        const formGroup = e.target.parentElement.parentElement;\r\n        formGroup.classList.remove('invalid');\r\n        formGroup.querySelector('.form-message').innerText = \"\";\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'Find password'\r\n    }\r\n\r\n    render() {\r\n        const enterPress = this.findPassword;\r\n        document.onkeydown = function (e) {\r\n            switch (e.which) {\r\n                case 13:\r\n                    enterPress(e);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"form-findpass\">\r\n                    <div className=\"auth-form\">\r\n                        <Avatar className=\"auth-form__avatar\">\r\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\r\n                                <FiSend></FiSend>\r\n                            </IconContext.Provider>\r\n                        </Avatar>\r\n                        <div className=\"auth-form__container\">\r\n                            <div className=\"auth-form__header\">\r\n                                <div className=\"auth-form__heading\">Find password</div>\r\n                                <NavLink to=\"/login\" className=\"auth-form__switch-btn\"><BsBoxArrowInLeft className=\"arrow-return\"></BsBoxArrowInLeft></NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"auth-form__body\">\r\n                            <form action=\"/findpass-submit?_method=PUT\" method=\"POST\" id=\"findpass-form\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"Ex: abc@gmail.com\" type=\"text\" />\r\n                                        <button type=\"button\" disabled={this.state.statusSendCode} onClick={() => this.sendCode()} class=\"btn btn-primary disabel send-code\">SEND</button>\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"code\" className=\"form-label\">Code</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsCodeSlash className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurCode()} name=\"code\" rules=\"required|email\" id=\"code\" placeholder=\"Ex: ABC321\" type=\"text\" />\r\n\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\" className=\"form-label\">New password</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurPassword()} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\" className=\"form-label\">Re-password</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurRePassword()} name=\"password\" rules=\"required|min:6\" id=\"re-password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"auth-form__btn\">\r\n                                    <div onClick={(e) => this.findPassword(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Find Password</div>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        showAlert: (message, typeMessage) => {\r\n            dispatch({\r\n                type: \"SHOW_ALERT\",\r\n                message: message,\r\n                typeMessage: typeMessage,\r\n            })\r\n        },\r\n        hideAlert: () => {\r\n            dispatch({\r\n                type: \"HIDE_ALERT\",\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapDispatchToProps)(ForgotPassword);\r\n","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\LoginWithEmployee.js",["527","528"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\Register.js",["529","530","531"],"import React, { Component } from 'react';\r\nimport '../../css/Login.css'\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport Avatar from '@mui/material/Avatar'\r\nimport { IconContext } from \"react-icons\";\r\nimport { FiChevronLeft, FiUserPlus } from \"react-icons/fi\";\r\nimport { BsFillEnvelopeFill, BsLockFill, BsCodeSlash } from \"react-icons/bs\";\r\nimport { FaPhoneSquare } from \"react-icons/fa\";\r\nimport axios from 'axios';\r\nimport emailjs from 'emailjs-com';\r\nvar bcrypt = require('bcryptjs');\r\n\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n            code: \"\",\r\n            statusSendCode: true,\r\n        }\r\n    }\r\n\r\n\r\n    // Send code tới người dùng\r\n    sendCode = (a = this.makeCode(6)) => {\r\n        this.setState({\r\n            code: \"123456\"\r\n        })\r\n        // this.setState({\r\n        //     code: a,\r\n        // })\r\n        // emailjs.init(\"user_K1g5N5hUDI0rjsa1uRoI4\");\r\n        // emailjs.send(\"gmail_main\", \"template_plasdgf\", {\r\n        //     To_mail: `${document.getElementById('email').value}`,\r\n        //     code: `${a}`,\r\n        // })\r\n        //     .then((response) => {\r\n        //         console.log('SUCCESS!', response.status, response.text);\r\n        //     }, (err) => {\r\n        //         console.log('FAILED...', err);\r\n        //     });\r\n    }\r\n\r\n    // status SignUp \r\n    SignUp = (e) => {\r\n        if (this.blurEmail() && this.blurCode() && this.blurPassword() && this.blurRePassword() && this.blurTel()) {\r\n            axios.post(`http://localhost:5000/register-with-email`, {\r\n                email: document.getElementById('email').value,\r\n                password: this.hash(document.getElementById('password').value),\r\n                tel: document.getElementById('tel').value,\r\n            })\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    switch (res.data.status) {\r\n                        case 1:\r\n                            localStorage.setItem('token', res.data.token);\r\n                            this.props.updateProfile(res.data.data);\r\n                            this.props.updateAvatar(res.data.data.manager.imgUrl ? res.data.data.manager.imgUrl : \"https://res.cloudinary.com/databaseimg/image/upload/v1634091995/sample.jpg\");\r\n                            this.props.changeLoginStatus();\r\n                            this.props.hideAlert();\r\n                            this.props.showAlert(res.data.message, \"success\");\r\n\r\n                            break;\r\n                        case -1:\r\n                            this.props.hideAlert();\r\n                            this.props.showAlert(res.data.message, \"error\");\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.props.hideAlert();\r\n                    this.props.showAlert(\"Error system\", \"error\");\r\n                })\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // Tạo mã code cho người dùng xác nhận\r\n    makeCode = (length) => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() *\r\n                charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // Hashpassword\r\n    hash = (pass) => {\r\n        var hash = bcrypt.hashSync(pass, 12)\r\n        return hash;\r\n    }\r\n\r\n\r\n    // Handle user : blur, change in input\r\n    blurEmail = () => {\r\n        const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        const e = document.getElementById('email');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            this.setState({\r\n                statusSendCode: false,\r\n            })\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurCode = () => {\r\n        const e = document.getElementById('code');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (this.state.code === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please press Send Code\"\r\n            return false\r\n        } else if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter code here\"\r\n            return false\r\n        } else if (elementValue !== this.state.code) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Code is incorrect\"\r\n            return false\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurPassword = () => {\r\n        const e = document.getElementById('password');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\r\n            return false;\r\n        } else if (e.value.length < 6) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurRePassword = () => {\r\n        const e = document.getElementById('re-password')\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (document.getElementById('password').value !== elementValue) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Re-password not correct\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true\r\n        }\r\n    }\r\n\r\n    blurTel = () => {\r\n        const e = document.getElementById('tel');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        const regex = /^\\d+$/;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Phone is not in the correct format\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    changeInput = (e) => {\r\n        const formGroup = e.target.parentElement.parentElement;\r\n        formGroup.classList.remove('invalid');\r\n        formGroup.querySelector('.form-message').innerText = \"\";\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'Register'\r\n    }\r\n\r\n    render() {\r\n        const enterPress = this.SignUp;\r\n        document.onkeydown = function (e) {\r\n            switch (e.which) {\r\n                case 13:\r\n                    enterPress(e);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"form-register\">\r\n                    <div className=\"auth-form\">\r\n                        <Avatar className=\"auth-form__avatar\">\r\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\r\n                                <FiUserPlus></FiUserPlus>\r\n                            </IconContext.Provider>\r\n                        </Avatar>\r\n                        <div className=\"auth-form__container\">\r\n                            <div className=\"auth-form__header\">\r\n                                <div className=\"auth-form__heading\">Register</div>\r\n                                <NavLink to=\"/login\" className=\"auth-form__switch-btn\"> <FiChevronLeft className=\"auth-form__arrow-return\"></FiChevronLeft>Login</NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"auth-form__body\">\r\n                            <form action=\"/register-submit\" method=\"post\" id=\"register-form\">\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"VD: abc@gmail.com\" type=\"text\" />\r\n                                        <button type=\"button\" disabled={this.state.statusSendCode} onClick={() => this.sendCode()} class=\"btn btn-primary disabel send-code\">SEND CODE</button>\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsCodeSlash className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurCode()} name=\"code\" rules=\"required|email\" id=\"code\" placeholder=\"Ex: ABC321\" type=\"text\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurPassword()} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurRePassword()} name=\"re-password\" id=\"re-password\" placeholder=\"Emter re-password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <FaPhoneSquare className=\"input-custom-icon\" ></FaPhoneSquare>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onBlur={(e) => this.blurTel(e)} onChange={(e) => this.changeInput(e)} name=\"tel\" rules=\"required\" id=\"tel\" placeholder=\"Ex: 0303030303\" type=\"tel\" />\r\n\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"register-description\">Bằng cách ấn vào nút\r\n                                    <span className=\"register-description__keyword\">“ĐĂNG KÝ”</span>\r\n                                    , tôi đồng ý với\r\n                                    <span className=\"register-description__keyword\">Điều Khoản Sử Dụng</span> và\r\n                                    <div className=\"register-description__keyword\"> Chính Sách Bảo Mật</div>\r\n                                </div>\r\n                                <div className=\"auth-form__btn\">\r\n                                    <div onClick={(e) => this.SignUp(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign Up</div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isLogin: state.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            });\r\n        },\r\n        updateProfile: (data) => {\r\n            dispatch({\r\n                type: \"UPDATA_DATA_USER\",\r\n                data: data,\r\n            })\r\n        },\r\n        updateAvatar: (avatar) => {\r\n            dispatch({\r\n                type: \"UPDATE_AVATAR\",\r\n                avatar: avatar,\r\n            })\r\n        },\r\n        showAlert: (message, typeMessage) => {\r\n            dispatch({\r\n                type: \"SHOW_ALERT\",\r\n                message: message,\r\n                typeMessage: typeMessage,\r\n            })\r\n        },\r\n        hideAlert: () => {\r\n            dispatch({\r\n                type: \"HIDE_ALERT\",\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Router\\DashboardURL.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\ModalConfirmPassword.js",["532"],"import React from 'react';\r\nimport {Card,CardHeader,Divider,CardContent,Grid,TextField,Box,Button} from '@mui/material';\r\nimport {BiPlusMedical} from 'react-icons/bi'\r\nimport { GiCancel } from 'react-icons/gi'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction ModalConfirmPassword(props) {\r\n\r\n    const statusConfirmPassword = useSelector(state => state.statusConfirmPassword)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleCancel = () => {\r\n        dispatch({\r\n            type:\"CHANGE_MODAL_CONFIRM_PASSWORD_STATUS\",\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Card className=\"card-confirm-password\" style={{ minWidth: '500px', width: '600px', justifyContent: 'center', marginTop: '10%' }}>\r\n            <CardHeader style={{ color: 'blue', backgroundColor: '#efeeef' }} title=\"Confirm password\" />\r\n            <Divider />\r\n            <CardContent>\r\n                <Grid container spacing={2}>\r\n                    <Grid item md={12} xs={12}>\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"Your password\"\r\n                            required\r\n                            type=\"password\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-evenly', p: 2 }}>\r\n                <Button style={{ backgroundColor: 'yellowgreen' }} variant=\"contained\" startIcon={<BiPlusMedical />}>\r\n                    Xác nhận\r\n                </Button>\r\n                <Button style={{ backgroundColor: 'red' }} onClick={() => handleCancel()} variant=\"contained\" startIcon={<GiCancel />}>\r\n                    Hủy\r\n                </Button>\r\n            </Box>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ModalConfirmPassword;","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Partials\\SideNavBar.js",["533","534","535","536","537","538"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodManager.js",["539"],"import { Component } from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport GoodTable from './GoodPartials/GoodTable';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Button from '@mui/material/Button';\r\nimport SearchBar from './GoodPartials/SearchBar';\r\nimport {connect} from 'react-redux'\r\nimport AddTypeModal from './GoodPartials/AddTypeModal';\r\nimport '../css/GoodManager.css';\r\nimport ConfirmModal from './GoodPartials/ConfirmModal';\r\nimport UpdateGoodModal from './GoodPartials/UpdateGoodModal';\r\nimport EditTypeModal from './GoodPartials/EditTypeModal';\r\n\r\nclass GoodManager extends Component {\r\n    \r\n    handleAdd() {\r\n        this.props.changeAddTypeStatus();\r\n        this.props.setAddTypeStatus();\r\n    }\r\n    handleConfirm(){\r\n        this.props.changeConfirmStatus();\r\n        this.props.unsetDelete();\r\n    }\r\n    handleConfirmDelete(){\r\n        this.props.changeConfirmStatus();\r\n        this.props.setDeleteConfirm();\r\n    }\r\n    handleUpdateGood() {\r\n        this.props.changeUpdateGoodStatus();\r\n    }\r\n    handleEditType() {\r\n        this.props.changeEditTypeStatus();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{height: '100%', width: '100%', marginTop: '40px', marginBottom: '40px', paddingBottom: '40px' }}>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Button variant=\"contained\">\r\n                            <NavLink style={{color: '#fff', textDecoration: 'none'}} to=\"/goodmanager/import\">Import</NavLink>\r\n                        </Button>\r\n                        <SearchBar style={{height: '120px'}}/>\r\n                        <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.handleAdd()} variant=\"contained\">\r\n                            add type\r\n                        </Button>\r\n                        <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.handleEditType()} variant=\"contained\">\r\n                            edit type\r\n                        </Button>\r\n                        {/* <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.handleConfirmDelete()} variant=\"contained\">\r\n                            Delete\r\n                        </Button>\r\n                        <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.handleConfirm()} variant=\"contained\">\r\n                            Edit\r\n                        </Button>\r\n                        <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.handleUpdateGood()} variant=\"contained\">\r\n                            Update Good\r\n                        </Button> */}\r\n\r\n                     </div>\r\n\r\n                    <GoodTable />\r\n\r\n                    {/* Đây là phần modal */}\r\n                    {this.props.addTypeStatus ? (\r\n                        <div className=\"modal-add\">\r\n                            <div onClick={() => {this.props.changeAddTypeStatus();}} className=\"modal-overlay\"></div>\r\n                            <AddTypeModal></AddTypeModal>\r\n                        </div>\r\n                    ): null}\r\n                    {this.props.confirmStatus ? (\r\n                        <div className=\"modal-add\">\r\n                            <div onClick={() => {this.props.changeConfirmStatus();}} className=\"modal-overlay\"></div>\r\n                            <ConfirmModal></ConfirmModal>\r\n                        </div>\r\n                    ): null}\r\n                    {this.props.updateGoodStatus ? (\r\n                        <div \r\n                            className=\"modal-add\"\r\n                        >\r\n                            <div onClick={() => {this.props.changeUpdateGoodStatus();}} className=\"modal-overlay\"></div>\r\n                            <UpdateGoodModal\r\n                                style={{\r\n                                    marginTop: 0\r\n                                }}\r\n                            >\r\n                            </UpdateGoodModal>\r\n                        </div>\r\n                    ): null}\r\n                     {this.props.editTypeStatus ? (\r\n                        <div className=\"modal-add\">\r\n                            <div onClick={() => {this.props.changeEditTypeStatus();}} className=\"modal-overlay\"></div>\r\n                            <EditTypeModal></EditTypeModal>\r\n                        </div>\r\n                    ): null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        addTypeStatus: state.addTypeStatus,\r\n        confirmStatus: state.confirmStatus,\r\n        deleteStatus: state.deleteStatus,\r\n        updateGoodStatus: state.updateGoodStatus,\r\n        editTypeStatus: state.editTypeStatus,\r\n        isAddTypeStatus: state.isAddTypeStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeAddTypeStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_ADD_TYPE_STATUS\",\r\n            });\r\n        },\r\n        changeConfirmStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_CONFIRM_STATUS\",\r\n            });\r\n        },\r\n        unsetDelete: () => {\r\n            dispatch({\r\n                type: \"UNSET_DELETE_STATUS\",\r\n            })\r\n        },\r\n        changeUpdateGoodStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_UPDATE_GOOD_STATUS\",\r\n            })\r\n        },\r\n        changeEditTypeStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_EDIT_TYPE_STATUS\",\r\n            })\r\n        },\r\n        setAddTypeStatus: () => {\r\n            dispatch({\r\n                type: \"SET_ADD_TYPE_STATUS\",\r\n            });\r\n        },\r\n        setDeleteConfirm: () => {\r\n            dispatch({\r\n                type: \"SET_CONFIRM_DELETE_GOOD\",\r\n            }); \r\n        },\r\n        \r\n    }\r\n}\r\nexport default connect(mapStateToProps , mapDispatchToProps)(GoodManager);\r\n","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeeManager.js",["540","541","542","543","544","545","546","547","548","549","550","551","552","553"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\GoodImport.js",["554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\DashBoard.js",["573"],"import React, { Component } from 'react';\r\nimport '../../css/Dashboard.css'\r\nimport { Container, Grid } from '@mui/material';\r\nimport { Typography } from '@mui/material';\r\nimport { DiApple } from 'react-icons/di'\r\nimport StaticDateRangePickerDemo from './Calendar'\r\nimport AppWebsiteVisits from './Statistic';\r\nimport SplitButton from './GroupButton';\r\nimport FullCalendar from '@fullcalendar/react' // must go before plugins\r\nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\r\nimport interactionPlugin from \"@fullcalendar/interaction\" // needed for dayClick\r\n\r\n\r\nclass DashBoard extends Component {\r\n\r\n    renderEventContent = (eventInfo) => {\r\n        return (\r\n            <>\r\n                <b>{eventInfo.timeText}</b>\r\n                <i>{eventInfo.event.title}</i>\r\n            </>\r\n        )\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'DashBoard'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard\" style={{ overflow: 'scroll', overflowX: 'hidden', height: '100vh' }}>\r\n                <Container style={{ marginTop: '40px' }} maxWidth=\"xl\">\r\n                    <Grid container spacing={3}>\r\n                        <Grid className=\"dashboard-item\" item md={3} sm={12} >\r\n                            <div className=\"dashboard-css\">\r\n                                <div className=\"dashboard-item-img\" style={{ marginBottom: '30px' }}>\r\n                                    <DiApple className=\"dashboard-item-icon\"></DiApple>\r\n                                </div>\r\n                                <Typography style={{ marginBottom: '10px' }} variant=\"h4\">256</Typography>\r\n                                <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\r\n                                    Total money\r\n                                </Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid className=\"dashboard-item\" item md={3} sm={12} >\r\n                            <div className=\"dashboard-css sold-good\">\r\n                                <div className=\"dashboard-item-img sold-good\" style={{ marginBottom: '30px' }}>\r\n                                    <DiApple className=\"dashboard-item-icon sold-good\"></DiApple>\r\n                                </div>\r\n                                <Typography style={{ marginBottom: '10px' }} variant=\"h4\">256</Typography>\r\n                                <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\r\n                                    Sold good\r\n                                </Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid className=\"dashboard-item\" item md={3} sm={12} >\r\n                            <div className=\"dashboard-css imported-good\">\r\n                                <div className=\"dashboard-item-img imported-good\" style={{ marginBottom: '30px' }}>\r\n                                    <DiApple className=\"dashboard-item-icon imported-good\"></DiApple>\r\n                                </div>\r\n                                <Typography style={{ marginBottom: '10px' }} variant=\"h4\">256</Typography>\r\n                                <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\r\n                                    Imported good\r\n                                </Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid className=\"dashboard-item\" item md={3} sm={12} >\r\n                            <div className=\"dashboard-css error-receipt\">\r\n                                <div className=\"dashboard-item-img error-receipt\" style={{ marginBottom: '30px' }}>\r\n                                    <DiApple className=\"dashboard-item-icon error-receipt\"></DiApple>\r\n                                </div>\r\n                                <Typography style={{ marginBottom: '10px' }} variant=\"h4\">256</Typography>\r\n                                <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\r\n                                    Error receipt\r\n                                </Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid className=\"dashboard-item\" item md={12} sm={12} >\r\n                            <div style={{ borderRadius: '20px' }}>\r\n                                <StaticDateRangePickerDemo></StaticDateRangePickerDemo>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid className=\"dashboard-item\" item md={12} sm={12} >\r\n                            <div style={{ borderRadius: '20px' }}>\r\n                                <FullCalendar\r\n                                    plugins={[ dayGridPlugin, interactionPlugin ]}\r\n                                    initialView=\"dayGridMonth\"\r\n                                    weekends={true}\r\n                                    events={[\r\n                                        { title: 'event 1', date: '2021-10-18' },\r\n                                        { title: 'event 2', date: '2021-10-18' }\r\n                                    ]}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid className=\"dashboard-item\" item md={12} sm={12} >\r\n                            <AppWebsiteVisits></AppWebsiteVisits>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashBoard;","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\RecieptManager\\ReiceiptManager.js",["574"],"import React, { Component } from 'react';\r\nimport { Container, Grid, Button } from '@mui/material';\r\nimport CollapsibleTable from './TableReciept'\r\nimport StatusReceiptType from './StatusReceiptType';\r\nimport DateReciept from './DateReciept';\r\nimport ControlReciept from './ControlReciept';\r\nimport '../../css/RecieptManager.css'\r\nimport SearchReceipt from './SearchReceipt';\r\n\r\nclass ReceiptManager extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"profile\" style={{ overflow: 'scroll', overflowX: 'hidden', height: '100vh' }}>\r\n                <Container style={{ marginBottom: '20px', marginTop: '20px' }} maxWidth=\"xl\">\r\n                    <Grid className=\"profile-body\" container spacing={2}>\r\n                        <Grid item  lg={3} md={12} sm={12}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item md={12} sm={12}>\r\n                                    <DateReciept></DateReciept>\r\n                                </Grid>\r\n                                <Grid item md={12} sm={12}>\r\n                                    <StatusReceiptType></StatusReceiptType>\r\n                                </Grid>\r\n                                <Grid item md={12} sm={12}>\r\n                                    <ControlReciept></ControlReciept>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item  lg={9} md={12} sm={12}>\r\n                            <Grid>\r\n                                <Grid item md={12} sm={12}>\r\n                                    <SearchReceipt></SearchReceipt>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <CollapsibleTable></CollapsibleTable>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReceiptManager;","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\SellProduct.js",["575"],"import React, { Component } from 'react';\r\nimport { Container, Grid, Button, CardActionArea, CardActions, CardMedia } from '@mui/material';\r\nimport '../../css/SellProduct.css'\r\nimport Tabs from './Tabs'\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport exampleImg from '../../img/good-example.jpg'\r\nimport { BiPlusMedical } from 'react-icons/bi';\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios';\r\nimport ShoppingBags from './ShoppingBags';\r\nimport Printf from './Print'\r\nimport HistoryReciept from './HistoryReciept';\r\n\r\nclass SellProduct extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            change: false,\r\n            test1: true,\r\n        }\r\n        this.loadAllType();\r\n        this.loadAllGood();\r\n    }\r\n\r\n    bull = (\r\n        <Box\r\n            component=\"span\"\r\n            sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\r\n        >\r\n            •\r\n        </Box>\r\n    );\r\n\r\n    AddProduct = (value) => {\r\n        var isCheck = false;\r\n        var currentQuantity;\r\n        var maxQuantity;\r\n        this.props.shoppingBags.map(value1 => {\r\n            if (value1.product.name === value.name) {\r\n                isCheck = true;\r\n                currentQuantity = value1.quantity\r\n                maxQuantity = value.quantity\r\n            } \r\n            return value;\r\n        })\r\n        if (isCheck) {\r\n            if (currentQuantity < maxQuantity) {\r\n                this.props.raiseQuantity(value.name);\r\n            }\r\n        } else {\r\n            const newProduct = {\r\n                product: value,\r\n                quantity: 1,\r\n            }\r\n            this.props.addNewProductToShoppingBags(newProduct);\r\n        }\r\n\r\n    }\r\n\r\n    async loadAllType() {\r\n        var result = [];\r\n        const data = {\r\n            token: localStorage.getItem('token'),\r\n            filter: {\r\n                \"_id.storeID\": this.props.infoUser.email,\r\n            }\r\n        }\r\n\r\n        await axios.get(`http://localhost:5000/api/product/type`,\r\n            {\r\n                params: { ...data }\r\n            })\r\n            .then(res => {\r\n                result = res.data.data;\r\n                localStorage.getItem('token', res.data.token);\r\n            })\r\n            .catch(err => {\r\n                alert(err);\r\n            })\r\n        //Get data và lưu các tên Type vào bảng\r\n        var listTypeInfor = [];\r\n        for (var i = 0; i < result.length; i++) {\r\n            listTypeInfor.push(result[i]);\r\n        }\r\n        this.props.getTypeToReducer(listTypeInfor);\r\n        this.setState({ change: !this.state.change });\r\n    }\r\n\r\n    async loadAllGood() {\r\n        var resultProduct = [];\r\n        const data = {\r\n            token: localStorage.getItem('token'),\r\n            filter: {\r\n                \"_id.storeID\": this.props.infoUser.email,\r\n            }\r\n        }\r\n        await axios.get(`http://localhost:5000/api/product/`, {\r\n            params: { ...data }\r\n        })\r\n            .then(res => {\r\n                resultProduct = res.data.data;\r\n            })\r\n            .catch(err => {\r\n                alert(err)\r\n            })\r\n        // Get hết từ cái productjoinType\r\n        var result = [];\r\n        const data1 = {\r\n            token: localStorage.getItem('token'),\r\n            filter: {\r\n                \"_id.storeID\": this.props.infoUser.email,\r\n            }   \r\n        }\r\n        await axios.get(`http://localhost:5000/api/product/join`, {\r\n            params: { ...data1 }\r\n        })\r\n            .then(res => {\r\n                result = res.data.data;\r\n                localStorage.getItem('token', res.data.token);\r\n            })\r\n            .catch(err => {\r\n                alert(err)\r\n            })\r\n        // Lấy các cái jointype\r\n        var joinTypeInfor = [];\r\n        for (let i = 0; i < result.length; i++) {\r\n            joinTypeInfor.push(result[i]);\r\n        }\r\n\r\n        var listProductInfor = [];\r\n        for (let i = 0; i < resultProduct.length; i++) {\r\n            var typeIDList = [];\r\n            for (var j = 0; j < joinTypeInfor.length; j++) {\r\n                if (resultProduct[i]._id.productID && joinTypeInfor[j]._id.productID &&\r\n                    resultProduct[i]._id.productID === joinTypeInfor[j]._id.productID) {\r\n                    typeIDList.push(joinTypeInfor[j]._id.typeID);\r\n                }\r\n            }\r\n\r\n            listProductInfor.push(\r\n                {\r\n                    ...resultProduct[i],\r\n                    typeIDList: typeIDList\r\n                });\r\n        }\r\n        this.props.getProductToReducer(listProductInfor);\r\n        this.setState({ change: !this.state.change });\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sell-product\" >\r\n                <Container style={{marginBottom: '20px'}} maxWidth=\"xl\">\r\n                    <Grid container spacing={2}>\r\n                        <Grid item lg={8} md={12} sm={12}>\r\n                            <div style={{ boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px', borderRadius: '8px', marginTop: '20px', backgroundColor: '#ffffff', height: 'calc(100vh - 40px)', overflow: 'hidden' }}>\r\n                                <div style={{ overflow: 'hidden', marginBottom: '5px' }}>\r\n                                    <Tabs></Tabs>\r\n                                </div>\r\n                                <Container id=\"choses-product\" style={{ height: '94%', overflowY: 'scroll' }} maxWidth=\"xl\">\r\n                                    <Grid container spacing={2}>\r\n                                        {this.props.listProduct.state\r\n                                            ? this.props.listProduct.state.filter(value => {\r\n                                                if (this.props.chooseTypeProductID === 'all') {\r\n                                                    return value;\r\n                                                }\r\n                                                if (value.typeIDList.includes(this.props.chooseTypeProductID)) {\r\n                                                    return value;\r\n                                                }\r\n                                            }).map(value => (\r\n                                                <Grid item lg={3} md={4} sm={4} xs={4}>\r\n                                                    <Card onClick={() => this.AddProduct(value)}>\r\n                                                        <CardActionArea>\r\n                                                            {\r\n                                                                value.imgUrl === \"none\"\r\n                                                                    ? <CardMedia\r\n                                                                        component=\"img\"\r\n                                                                        height=\"140\"\r\n                                                                        image={exampleImg}\r\n                                                                        alt=\"green iguana\"\r\n                                                                    />\r\n\r\n                                                                    : <CardMedia\r\n                                                                        component=\"img\"\r\n                                                                        height=\"140\"\r\n                                                                        image={value.imgUrl}\r\n                                                                        alt=\"green iguana\"\r\n                                                                    />\r\n                                                            }\r\n                                                            <CardContent style={{ padding: '5px' }}>\r\n                                                                <Typography style={{ textAlign: 'center' }} gutterBottom variant=\"h6\" component=\"div\">\r\n                                                                    {value.name}\r\n                                                                </Typography>\r\n                                                            </CardContent>\r\n                                                        </CardActionArea>\r\n                                                        <CardActions style={{ justifyContent: 'center' }}>\r\n                                                            <Button style={{ color: 'green', fontWeight: '700' }} endIcon={<BiPlusMedical></BiPlusMedical>} size=\"medium\" color=\"primary\">\r\n                                                                {value.sellPrice}\r\n                                                            </Button>\r\n                                                        </CardActions>\r\n                                                    </Card>\r\n                                                </Grid>\r\n                                            )) : (null)}\r\n                                    </Grid>\r\n                                </Container>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item lg={4} md={12}>\r\n                            <div style={{ boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px', borderRadius: '8px', marginTop: '20px', backgroundColor: '#ffffff', height: 'calc(100vh - 40px)', overflow: 'hidden', overflowX: 'hidden' }}>\r\n                                <div id=\"choses-product\" style={{ backgroundColor: '#ebebeb', height: '60%', margin: '10px', overflowY: 'scroll', overflowX: 'hidden' }} >\r\n                                    <Grid sty container spacing={0}>\r\n                                        {/* Table */}\r\n                                        <Grid item className=\"customizeTable\" style={{ backgroundColor: 'rgba(20,20,20,0.4)', alignContent: 'center', justifyContent: 'center', borderBottom: '2px solic black' }} md={12} sm={12}>\r\n                                            <Grid style={{ textAlign: 'center', alignItems: 'center', justifyItems: 'center', fontWeight: 'bold' }} container spacing={0}>\r\n                                                <Grid item md={1} sm={1}>\r\n                                                    #\r\n                                                </Grid>\r\n                                                <Grid item md={1} sm={1}>\r\n\r\n                                                </Grid>\r\n                                                <Grid item md={4} sm={4}>\r\n                                                    Name\r\n                                                </Grid>\r\n                                                <Grid item md={3} sm={3}>\r\n                                                    Quantity\r\n                                                </Grid>\r\n                                                <Grid style={{ fontWeight: '700' }} item md={3} sm={3}>\r\n                                                    Giá\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        {/* Bắt đầu hóa đơn */}\r\n                                        <ShoppingBags></ShoppingBags>\r\n                                    </Grid>\r\n                                </div>\r\n                                <div style={{ height: '40%' }}>\r\n                                    <Printf ></Printf>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n                {this.props.statusShowHistoryReciept ? (\r\n                    <HistoryReciept></HistoryReciept>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        listProduct: state.listProduct,\r\n        chooseTypeProductID: state.chooseTypeProduct,\r\n        infoUser: state.infoUser,\r\n        shoppingBags: state.shoppingBags,\r\n        statusShowHistoryReciept: state.statusShowHistoryReciept,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeAddStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_ADD_STATUS\",\r\n            });\r\n        },\r\n        getTypeToReducer: (data) => {\r\n            dispatch({\r\n                type: \"GET_PRODUCT_TYPE\",\r\n                data: data\r\n            });\r\n        },\r\n        getProductToReducer: (data) => {\r\n            dispatch({\r\n                type: \"GET_PRODUCT_AND_TYPE\",\r\n                data: data\r\n            });\r\n        },\r\n        addNewProductToShoppingBags: (newProduct) => {\r\n            dispatch({\r\n                type: \"ADD_NEW_PRODUCT_SHOPPING_BAGS\",\r\n                newProduct: newProduct,\r\n            })\r\n        },\r\n        raiseQuantity: (name) => {\r\n            dispatch({\r\n                type: \"RAISE_QUANTITY_SHOPPING_BAGS\",\r\n                name: name,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SellProduct);","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\Profile.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\EditTypeModal.js",["576","577","578","579"],"import React, { Component } from 'react';\r\nimport { Card, CardHeader, Divider, Grid, TextField, Box, CardContent, Button } from '@mui/material';\r\nimport { connect } from 'react-redux'\r\nimport { BiPlusMedical, BiEdit} from 'react-icons/bi';\r\nimport { TiDelete } from \"react-icons/ti\";\r\nimport Stack from '@mui/material/Stack';\r\nimport { GiCancel } from 'react-icons/gi'\r\nimport axios from 'axios';\r\nimport AddTypeModal from './AddTypeModal';\r\n\r\nvar productTypes =[];\r\nvar listTypeInfor = [];\r\n\r\nclass EditTypeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.loadAllType();\r\n        this.state = {\r\n            change: false\r\n        }\r\n    }\r\n    confirm = () => {\r\n        // Thực hiện các lệnh xử lý tại đây\r\n        this.props.changeConfirmStatus();\r\n    }\r\n    cancel = () => {\r\n        // this.props.changeConfirmStatus();\r\n        this.props.changeEditTypeStatus();\r\n    }\r\n    edit = (type) => {\r\n        this.props.changeAddTypeStatus();\r\n        this.props.setEditTypeStatus();\r\n        this.props.typeToUpdate(type);\r\n        this.props.changeEditTypeStatus();\r\n    }\r\n    async delete(type){\r\n        const data = {\r\n            token: localStorage.getItem('token'),\r\n            productTypes:\r\n            [\r\n                {\r\n                    typeID: type._id.typeID,\r\n                    storeID: type._id.storeID\r\n                }\r\n            ]\r\n                \r\n        }\r\n        await axios.delete(`http://localhost:5000/api/product/type`,{data: data})\r\n            .then(res => {\r\n                console.log(\"delete success\");\r\n            })\r\n            .catch(err => {\r\n                alert(err);\r\n                // alert(\"Lỗi gì cmnr\")\r\n            })\r\n        // Ở đây mình phải cập nhật join nữa\r\n        // Phải get tất cả cái join mà có cái type là type hiện tại\r\n        var allJoinMatch = [];\r\n        const data1 = {\r\n            token: localStorage.getItem('token'),\r\n            filter: {\r\n                \"_id.storeID\": this.props.infoUser.email,\r\n                \"_id.typeID\": type._id.typeID,\r\n            }   \r\n        }\r\n        await axios.get(`http://localhost:5000/api/product/join`, \r\n        {\r\n            params: {...data1}\r\n        })\r\n            .then(res => {\r\n                allJoinMatch = res.data.data;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                alert(err);\r\n            })\r\n\r\n        var allProductJoin = [];\r\n        for(var i = 0 ; i < allJoinMatch.length; i++)\r\n        {\r\n            allProductJoin.push({\r\n                productID: allJoinMatch[i]._id.productID,\r\n                typeID: type._id.typeID,\r\n                importDate: allJoinMatch[i]._id.importDate,\r\n                storeID: this.props.infoUser.email,\r\n                \r\n            });\r\n        }\r\n        \r\n        const dataJoin = {\r\n            token: localStorage.getItem('token'),\r\n            productJoinTypes: allProductJoin,      \r\n        }\r\n\r\n        console.log(dataJoin);\r\n\r\n        await axios.delete(`http://localhost:5000/api/product/join`,{data: dataJoin})\r\n            .then(res => {\r\n                console.log(\"delete join success\");\r\n            })\r\n            .catch(err => {\r\n                alert(err);\r\n            })\r\n\r\n        this.loadAllType();\r\n        this.setState({change: !this.state.change})\r\n    }\r\n    \r\n\r\n\r\n    async loadAllType() {\r\n        var result = [];\r\n        const data = {\r\n            token: localStorage.getItem('token'),\r\n            filter: {\r\n                \"_id.storeID\": this.props.infoUser.email,\r\n            }   \r\n        }\r\n        await axios.get(`http://localhost:5000/api/product/type`, \r\n        {\r\n            params: {...data}\r\n        })\r\n            .then(res => {\r\n                result = res.data.data;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                alert(err); // 401 ở đây\r\n            })\r\n        //Get data và lưu các tên Type vào bảng\r\n        listTypeInfor=[];\r\n        for(var i=0; i < result.length ; i++)\r\n        {\r\n            listTypeInfor.push(result[i]);\r\n        }\r\n        productTypes=[];\r\n        for(var i=0 ; i< listTypeInfor.length ; i ++)\r\n        {\r\n            productTypes.push(listTypeInfor[i].name);\r\n        }\r\n        this.setState({change: true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form style={{ zIndex: '10', minWidth: '500px', width: '600px', justifyContent: 'center', marginTop: '10%' }} autoComplete=\"off\" noValidate>\r\n                <Card>\r\n                    <CardHeader style={{ color: 'blue', backgroundColor: '#efeeef' }} title=\"All Good Type\" />\r\n                    <Divider />\r\n                    <CardContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid container item md={12} xs={12} spacing={0}>\r\n                                { listTypeInfor.map((type) => (\r\n                                    <Grid item md={3} style={{border:'1px solid #333', padding: 4}}>\r\n                                        <span>{type.name}</span>\r\n                                        <BiEdit onClick={() => this.edit(type)}/>\r\n                                        <TiDelete onClick={() => this.delete(type)}/>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                            <Grid item md={12} xs={12}>\r\n                                <Stack spacing={3}>\r\n                                   \r\n                                </Stack>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                    <Divider />\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-evenly', p: 2 }}>\r\n                        <Button style={{ backgroundColor: 'red' }} onClick={(e) => this.cancel(e)} variant=\"contained\" startIcon={<GiCancel />}>\r\n                            Thoát\r\n                        </Button>\r\n                    </Box>\r\n                </Card>\r\n                {/* {this.props.addTypeStatus ? (\r\n                        <div className=\"modal-add\">\r\n                            <div onClick={() => {this.props.changeAddTypeStatus();}} className=\"modal-overlay\"></div>\r\n                            <AddTypeModal></AddTypeModal>\r\n                        </div>\r\n                    ): null} */}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        editTypeStatus: state.editTypeStatus,\r\n        addTypeStatus: state.addTypeStatus,\r\n        isAddTypeStatus: state.isAddTypeStatus,\r\n        infoUser: state.infoUser,\r\n        typeProductValue: state.typeProductValue,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeEditTypeStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_EDIT_TYPE_STATUS\",\r\n            });\r\n        },\r\n        changeAddTypeStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_ADD_TYPE_STATUS\",\r\n            });\r\n        },\r\n        setEditTypeStatus: () => {\r\n            dispatch({\r\n                type: \"SET_EDIT_TYPE_STATUS\",\r\n            })\r\n        },\r\n        changeConfirmStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_CONFIRM_STATUS\",\r\n            });\r\n        },\r\n        typeToUpdate: (data) => {\r\n            dispatch({\r\n                type: \"UPDATE_PRODUCT_TYPE\",\r\n                _id: {\r\n                    typeID: data._id.typeID,\r\n                    storeID: data._id.storeID,\r\n                },\r\n                name: data.name\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTypeModal);","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\Regulation.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ModalAdd.js",["580","581","582","583"],"import React, { Component } from 'react';\r\nimport { Card, CardHeader, Divider, Grid, TextField, Box, CardContent, Button } from '@mui/material';\r\nimport { connect } from 'react-redux'\r\nimport { BiPlusMedical, BiEdit } from 'react-icons/bi';\r\nimport Stack from '@mui/material/Stack';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport TimePicker from '@mui/lab/TimePicker';\r\nimport { GiCancel } from 'react-icons/gi'\r\nimport axios from 'axios';\r\n\r\nclass ModalAdd extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (this.props.editShiftStatus) {\r\n            var _timeFrom = new Date();\r\n            if (this.props.objectEditShift.from.includes(\"PM\")) {\r\n                var fromHour =  parseInt(this.props.objectEditShift.from.slice(0, this.props.objectEditShift.from.indexOf(':')));\r\n                var fromMin = parseInt(this.props.objectEditShift.from.slice(this.props.objectEditShift.from.indexOf(':') + 1));\r\n                _timeFrom.setHours(fromHour + 12, fromMin);\r\n            } else {\r\n                var fromHour =  parseInt(this.props.objectEditShift.from.slice(0, this.props.objectEditShift.from.indexOf(':')));\r\n                var fromMin = parseInt(this.props.objectEditShift.from.slice(this.props.objectEditShift.from.indexOf(':') + 1));\r\n                _timeFrom.setHours(fromHour , fromMin);\r\n            }\r\n           \r\n            var _timeTo = new Date();\r\n            if (this.props.objectEditShift.to.includes(\"PM\")) {\r\n                var toHour = parseInt(this.props.objectEditShift.to.slice(0, this.props.objectEditShift.to.indexOf(':')));\r\n                var toMin = parseInt(this.props.objectEditShift.to.slice(this.props.objectEditShift.to.indexOf(':') + 1));\r\n                _timeTo.setHours(toHour + 12, toMin);\r\n            } else {\r\n                var toHour = parseInt(this.props.objectEditShift.to.slice(0, this.props.objectEditShift.to.indexOf(':')));\r\n                var toMin = parseInt(this.props.objectEditShift.to.slice(this.props.objectEditShift.to.indexOf(':') + 1));\r\n                _timeTo.setHours(toHour, toMin);\r\n            }\r\n            \r\n        }\r\n\r\n        this.state = {\r\n            timeFrom: this.props.editShiftStatus ? _timeFrom : new Date(2018, 5, 35, 0, 0, 0),\r\n            timeTo: this.props.editShiftStatus ? _timeTo : new Date(2018, 5, 35, 0, 0, 0),\r\n            isSalary: false,\r\n            isDescription: false,\r\n            isTimeTo: false,\r\n            valueTime: this.props.editShiftStatus ? 1 : null,\r\n        }\r\n    }\r\n\r\n    descriptionShift = this.props.editShiftStatus ? this.props.objectEditShift.description : \"Ex : abc\"\r\n    timeFrom = this.props.editShiftStatus ? this.props.objectEditShift.from : \"00:00 AM\"\r\n    timeTo = this.props.editShiftStatus ? this.props.objectEditShift.to : \"00:00 AM\"\r\n    salary = this.props.editShiftStatus ? this.props.objectEditShift.salary : 10000\r\n\r\n    // Handle user\r\n    hanhleCancel = (e) => {\r\n        this.props.changeAddStatus();\r\n        if (this.props.editShiftStatus) {\r\n            this.props.changeEditShiftStatus();\r\n        }\r\n    }\r\n\r\n    changeTimeFrom = (e) => {\r\n        var hourse = e.getHours()\r\n        const minutes = e.getMinutes()\r\n        if (hourse >= 12) {\r\n            hourse = hourse - 12;\r\n            this.timeFrom = hourse.toString() + \":\" + minutes.toString() + \" PM\"\r\n        } else {\r\n            this.timeFrom = hourse.toString() + \":\" + minutes.toString() + \" AM\"\r\n        }\r\n        console.log(this.timeFrom);\r\n        this.setState({\r\n            timeFrom: e,\r\n        })\r\n    }\r\n\r\n    changeTimeTo = (e) => {\r\n        var hourse = e.getHours()\r\n        const minutes = e.getMinutes()\r\n        if (hourse >= 12) {\r\n            hourse = hourse - 12;\r\n            this.timeTo = hourse.toString() + \":\" + minutes.toString() + \" PM\"\r\n        } else {\r\n            this.timeTo = hourse.toString() + \":\" + minutes.toString() + \" AM\"\r\n        }\r\n        console.log(this.timeTo);\r\n        this.setState({\r\n            timeTo: e,\r\n        })\r\n    }\r\n\r\n    blurDiscription = (e) => {\r\n        this.descriptionShift = e.target.value;\r\n        if (e.target.value === \"\") {\r\n            this.setState({\r\n                isDescription: true,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isDescription: false,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    // Tạo code để xác nhận\r\n    makeCode = (length) => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() *\r\n                charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    editShift = async () => {\r\n        if (this.state.timeTo - this.state.timeFrom < 1) {\r\n            this.props.hideAlert();\r\n            this.props.showAlert('The time end must be greater than the time start', 'error')\r\n        }\r\n        if (!this.state.isSalary && !this.state.isDescription && (this.state.timeTo - this.state.timeFrom > 0)) {\r\n            var data = {\r\n                token: localStorage.getItem('token'),\r\n                idUser: this.props.infoUser.email,\r\n                id: this.props.objectEditShift.id,\r\n                salary: this.salary,\r\n                description: this.descriptionShift,\r\n                from: this.timeFrom,\r\n                to: this.timeTo,\r\n            }\r\n            await axios.post(`http://localhost:5000/api/profile/update-shift`, data)\r\n                .then(res => {\r\n                    if (res.data.token) {\r\n                        localStorage.setItem('token', res.data.token);\r\n                        this.props.hideAlert();\r\n                        this.props.showAlert(\"Edit shift success\", \"success\");\r\n                        this.props.updateShift(data);\r\n                    }\r\n                    this.props.changeEditShiftStatus();\r\n                    this.props.changeAddStatus();\r\n                })\r\n                .catch(err => {\r\n                    this.props.changeLoginStatus();\r\n                    this.props.hideAlert();\r\n                    this.props.showAlert(\"Login timeout, signin again\", \"warning\");\r\n                })\r\n\r\n        }\r\n    }\r\n\r\n    blurSalary = (e) => {\r\n        if (e.target.value <= -1) {\r\n            this.setState({\r\n                isSalary: true,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isSalary: false,\r\n            })\r\n        }\r\n        this.salary = e.target.value;\r\n    }\r\n\r\n    // Call API\r\n    addShift = () => {\r\n        if (this.state.timeTo - this.state.timeFrom < 1) {\r\n            this.props.hideAlert();\r\n            this.props.showAlert('The time end must be greater than the time start', 'error')\r\n        }\r\n        if (!this.state.isSalary && !this.state.isDescription && (this.state.timeTo - this.state.timeFrom > 0)) {\r\n            const code = this.makeCode(6);\r\n            const data = {\r\n                idUser: this.props.infoUser.email,\r\n                id: code,\r\n                salary: this.salary,\r\n                description: this.descriptionShift,\r\n                from: this.timeFrom,\r\n                to: this.timeTo,\r\n            }\r\n            const data1 = {\r\n                name: this.descriptionShift,\r\n                salary: this.salary,\r\n                timeFrom: this.timeFrom,\r\n                timeEnd: this.timeTo,\r\n                _id: { shiftID: code }\r\n            }\r\n            if (data) {\r\n                axios.post(`http://localhost:5000/api/profile/add-shift`, {\r\n                    email: this.props.infoUser.email,\r\n                    token: localStorage.getItem('token'),\r\n                    data: data,\r\n                })\r\n                    .then(res => {\r\n                        if (res.data.token) {\r\n                            this.props.addShift(data1);\r\n                            localStorage.setItem('token', res.data.token);\r\n                            this.props.hideAlert();\r\n                            this.props.showAlert(\"Add shift success\", \"success\");\r\n                        }\r\n                        this.props.changeAddStatus();\r\n                    })\r\n                    .catch(err => {\r\n                        this.props.changeLoginStatus();\r\n                        this.props.hideAlert();\r\n                        this.props.showAlert(\"Login timeout, signin again\", \"warning\");\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"modal-add-shift\" style={{ zIndex: '10', minWidth: '500px', width: '600px', justifyContent: 'center', marginTop: '10%' }} autoComplete=\"off\" noValidate>\r\n                <Card>\r\n                    <CardHeader style={{ color: !this.props.statusDarkmode? '#0091ea' :'white', backgroundColor: !this.props.statusDarkmode? '#efeeef' :'#455a64'}} title=\"Create shift\" />\r\n                    <Divider />\r\n                    <CardContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item md={12} xs={12}>\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    defaultValue={(this.props.editShiftStatus ? this.props.objectEditShift.description : this.descriptionShift)}\r\n                                    onBlur={(e) => this.blurDiscription(e)}\r\n                                    label=\"Shift description\"\r\n                                    error={this.state.isDescription}\r\n                                    helperText={this.state.isDescription ? \"Enter something\" : \"\"}\r\n                                    required\r\n                                    type=\"text\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item md={12} xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    onBlur={(e) => this.blurSalary(e)}\r\n                                    label=\"Salary\"\r\n                                    defaultValue={this.props.editShiftStatus ? this.props.objectEditShift.salary : this.salary}\r\n                                    error={this.state.isSalary}\r\n                                    helperText={this.state.isSalary ? \"Greater than 0\" : \"\"}\r\n                                    type=\"number\"\r\n                                    id=\"outlined-error-helper-text\"\r\n                                    name=\"salary\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item md={12} xs={12}>\r\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                    <Stack spacing={3}>\r\n                                        <TimePicker\r\n                                            label=\"From\"\r\n                                            value={this.state.timeFrom}\r\n                                            onChange={(newValue) => this.changeTimeFrom(newValue)}\r\n                                            renderInput={(params) => <TextField {...params} />}\r\n                                        />\r\n                                        <TimePicker\r\n                                            label=\"To\"\r\n                                            value={this.state.timeTo}\r\n                                            onChange={(newValue) => this.changeTimeTo(newValue)}\r\n                                            renderInput={(params) => <TextField {...params} />}\r\n                                        />\r\n                                    </Stack>\r\n                                </LocalizationProvider>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                    <Divider />\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-evenly', p: 2 }}>\r\n                        {this.props.editShiftStatus ? (\r\n                            <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.editShift()} variant=\"contained\" startIcon={<BiEdit />}>\r\n                                Save\r\n                            </Button>) : (\r\n                            <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.addShift()} variant=\"contained\" startIcon={<BiPlusMedical />}>\r\n                                Add\r\n                            </Button>\r\n                        )}\r\n                        <Button style={{ backgroundColor: 'red' }} onClick={(e) => this.hanhleCancel(e)} variant=\"contained\" startIcon={<GiCancel />}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Box>\r\n                </Card>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        addStatus: state.addStatus,\r\n        infoUser: state.infoUser,\r\n        editShiftStatus: state.editShiftStatus,\r\n        objectEditShift: state.objectEditShift,\r\n        statusDarkmode: state.statusDarkmode\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeAddStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_ADD_STATUS\",\r\n            });\r\n        },\r\n        addShift: (data) => {\r\n            dispatch({\r\n                type: \"ADD_SHIFT\",\r\n                newShift: data,\r\n            })\r\n        },\r\n        changeEditShiftStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_EDIT_SHIFT_STATUS\",\r\n            })\r\n        },\r\n        updateShift: (data) => {\r\n            dispatch({\r\n                type: \"OBJECT_UPDATE_SHIFT\",\r\n                data: data,\r\n            })\r\n        },\r\n        showAlert: (message, typeMessage) => {\r\n            dispatch({\r\n                type: \"SHOW_ALERT\",\r\n                message: message,\r\n                typeMessage: typeMessage,\r\n            })\r\n        },\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            });\r\n        },\r\n        hideAlert: () => {\r\n            dispatch({\r\n                type: \"HIDE_ALERT\",\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalAdd);","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ListShift.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ChangePassword.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileSetting.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileDetail.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\AddTypeModal.js",["584","585","586","587","588","589","590","591"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\DarkMode.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileHeader.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\HistoryReciept.js",["592","593"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CollapsibleTable from './TableReciept'\r\nimport { Grid, Card, CardHeader, Divider, CardContent } from '@mui/material';\r\n\r\nfunction HistoryReciept(props) {\r\n\r\n    const darkmode = useSelector(state => state.statusDarkmode)\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div style={{ overflow: 'hidden' }} className=\"modal-history-reciept\">\r\n            <div onClick={() => { dispatch({ type: \"CHANGE_HISTORY_RECIEPT_STATUS\" }) }} className=\"modal-overlay\"></div>\r\n            <div className=\"history-list-receipt\">\r\n                <Card>\r\n                    <CardHeader style={{ color: !darkmode ? '#0091ea' : 'white', backgroundColor: !darkmode ? '#efeeef' : '#455a64' }} title=\"History Reciept\" />\r\n                    <Divider></Divider>\r\n                </Card>\r\n                <div id=\"choses-product\" style={{ margin: '30px', height: '82%', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                    <CollapsibleTable></CollapsibleTable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HistoryReciept;","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\Print.js",["594","595","596"],"import React from 'react';\r\nimport ReactToPrint from 'react-to-print';\r\nimport { connect } from 'react-redux';\r\nimport ComponentToPrint from './ComponentToPrint';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Printf extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      percentDiscount: 0,\r\n      infoReciept: [],\r\n      date: new Date(),\r\n      MAHD: \"HD\" + this.makeCode(6),\r\n    }\r\n  }\r\n\r\n  blurDiscount = (e) => {\r\n    if (e.target.value <= 100 && e.target.value >= 0) {\r\n      this.setState({\r\n        percentDiscount: e.target.value,\r\n      })\r\n    } else if (e.target.value < 0) {\r\n      this.setState({\r\n        percentDiscount: 0,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        percentDiscount: 100,\r\n      })\r\n    }\r\n  }\r\n\r\n  changeDiscount = (e) => {\r\n    this.setState({\r\n      percentDiscount: e.target.value,\r\n    })\r\n  }\r\n\r\n  totalMoney = () => {\r\n    let total = 0;\r\n    this.props.shoppingBags.map(value => {\r\n      total += value.quantity * value.product.sellPrice;\r\n    })\r\n    return total;\r\n  }\r\n\r\n  reduceMoney = () => {\r\n    let total = 0;\r\n    this.props.shoppingBags.map(value => {\r\n      total += value.quantity * value.product.sellPrice;\r\n    })\r\n    if (total !== 0) {\r\n      total = total * this.state.percentDiscount / 100\r\n      return total;\r\n    }\r\n    return total;\r\n  }\r\n\r\n  totalFinalMoney = () => {\r\n    let total = 0;\r\n    this.props.shoppingBags.map(value => {\r\n      total += value.quantity * value.product.sellPrice;\r\n    })\r\n    if (total !== 0) {\r\n      total -= total * this.state.percentDiscount / 100\r\n      return total;\r\n    }\r\n    return total;\r\n  }\r\n\r\n  makeCode = (length) => {\r\n    var result = '';\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() *\r\n        charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  code = ''\r\n\r\n  addReciept = async () => {\r\n    if (this.props.shoppingBags.length === 0) {\r\n      this.props.hideAlert()\r\n      this.props.showAlert(\"Cart empty \", \"warning\")\r\n    } else {\r\n      this.code = this.makeCode(8)\r\n      const data = {\r\n        MAHD: this.code,\r\n        idUser: this.props.infoUser._id,\r\n        name: this.props.infoUser.lastName + \" \" + this.props.infoUser.firstName,\r\n        date: this.dateFunction(),\r\n        discount: this.state.percentDiscount,\r\n        totalMoney: this.totalMoney(),\r\n        totalFinalMoney: this.totalFinalMoney(),\r\n        listProduct: this.props.shoppingBags,\r\n        time: this.state.date.getHours() + \":\" + this.state.date.getMinutes(),\r\n        isEdit: false,\r\n        oldBill: this.props.statusEditInfoBill ? this.props.InfomationBillEdit : null,\r\n      }\r\n      axios.post('http://localhost:5000/api/sell-product/add-reciept', {\r\n        email: this.props.infoUser.email,\r\n        token: localStorage.getItem('token'),\r\n        data: data,\r\n      })\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            localStorage.setItem('token', res.data.token)\r\n            if (this.props.statusEditInfoBill) {\r\n              this.props.changeStatusEditRecipt()\r\n            }\r\n            this.setState({\r\n              infoReciept: this.props.shoppingBags,\r\n            })\r\n            this.props.hideAlert()\r\n            this.props.showAlert(\"Print bill success\", \"success\")\r\n            this.props.resetShoppingBag();\r\n            this.props.addRecieptToHistory(data);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          this.props.changeLoginStatus();\r\n          this.props.hideAlert();\r\n          this.props.showAlert(\"Login timeout, signin again\", \"warning\");\r\n        })\r\n\r\n    }\r\n\r\n  }\r\n\r\n  dateFunction = () => {\r\n    let month = this.state.date.getMonth() + 1;\r\n    return \"  \" + this.state.date.getDate() + \" / \" + month + \" / \" + this.state.date.getFullYear()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={{ margin: '0px' }} className=\"row\">\r\n          <div className=\"col-10 offset-1\">\r\n            <div className=\"row\">\r\n              <div style={{ fontSize: '1.2rem' }} className=\"col-7\">\r\n                <p style={{}}>Total</p>\r\n              </div>\r\n              <div className=\"col-5\">\r\n                <p style={{ textAlign: 'end', marginBottom: '0', fontSize: '1.2rem' }}>{this.totalMoney().toLocaleString()}</p>\r\n              </div>\r\n              <div style={{ fontSize: '1.2rem' }} className=\"col-7\">\r\n                <p>Discount (%)</p>\r\n              </div>\r\n              <div style={{ marginBottom: '10px' }} className=\"col-5\">\r\n                <input value={this.state.percentDiscount} onChange={(e) => this.changeDiscount(e)} onBlur={(e) => this.blurDiscount(e)} style={{ fontSize: '1.2rem', border: 'none', outline: 'none', textAlign: 'end', width: '100%', borderBottom: '1px solid black' }} min={0} max={100} type=\"number\"></input>\r\n              </div>\r\n              <div style={{ fontSize: '1.2rem' }} className=\"col-7\">\r\n                <p style={{}}>Reduce</p>\r\n              </div>\r\n              <div className=\"col-5\">\r\n                <p style={{ textAlign: 'end', marginBottom: '0', fontSize: '1.2rem' }}>-{this.reduceMoney().toLocaleString()}</p>\r\n              </div>\r\n              <div className=\"col-7\">\r\n                <p style={{ margin: '0', fontSize: '1.2rem', fontWeight: '700' }}>TOTAL FINAL</p>\r\n              </div>\r\n              <div className=\"col-5\">\r\n                <p style={{ margin: '0', fontSize: '1.2rem', textAlign: 'end', color: 'green', fontWeight: '700' }}>{this.totalFinalMoney().toLocaleString()}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div onClick={() => this.addReciept()} style={{ cursor: 'pointer' }} className=\"col-12\">\r\n            <ReactToPrint\r\n              trigger={() => {\r\n\r\n                return <div style={{ marginTop: '10px', borderRadius: '4px', fontWeight: '600', backgroundColor: '#37c737', textAlign: 'center', alignContent: 'center', padding: '15px 0', fontSize: '1.4rem' }}>\r\n                  PAY (F9)\r\n                </div>;\r\n              }}\r\n              content={this.props.shoppingBags.length !== 0 ? () => this.componentRef : null}\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <p onClick={() => this.props.changeStatusHistoryReciept()} style={{ cursor: 'pointer' }}>(*) Receipt history</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Ẩn đi */}\r\n        <div style={{ display: 'none' }}>\r\n          <ComponentToPrint MAHD={this.code} percentDiscount={this.state.percentDiscount} infoUser={this.props.infoUser} shoppingBags={this.state.infoReciept} ref={el => (this.componentRef = el)} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    infoUser: state.infoUser,\r\n    shoppingBags: state.shoppingBags,\r\n    statusEditInfoBill: state.statusEditInfoBill,\r\n    InfomationBillEdit: state.InfomationBillEdit,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    changeStatusHistoryReciept: () => {\r\n      dispatch({\r\n        type: \"CHANGE_HISTORY_RECIEPT_STATUS\",\r\n      });\r\n    },\r\n    addRecieptToHistory: (data) => {\r\n      dispatch({\r\n        type: \"ADD_RECIEPT\",\r\n        newReciept: data,\r\n      });\r\n    },\r\n    showAlert: (message, typeMessage) => {\r\n      dispatch({\r\n        type: \"SHOW_ALERT\",\r\n        message: message,\r\n        typeMessage: typeMessage,\r\n      })\r\n    },\r\n    hideAlert: () => {\r\n      dispatch({\r\n        type: \"HIDE_ALERT\",\r\n      })\r\n    },\r\n    resetShoppingBag: () => {\r\n      dispatch({\r\n        type: \"RESET_SHOPPING_BAGS\"\r\n      })\r\n    },\r\n    changeStatusEditRecipt: () => {\r\n      dispatch({\r\n        type: \"CHANGE_EDIT_INFOMATION_STATUS\"\r\n      })\r\n    },\r\n    changeLoginStatus: () => {\r\n      dispatch({\r\n          type: \"CHANGE_LOGIN_STATUS\",\r\n      });\r\n  },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Printf)","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\ShoppingBags.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\Tabs.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\RecieptManager\\DateReciept.js",["597"],"import React from 'react';\r\nimport { Grid, Card, CardHeader, Divider, CardContent } from '@mui/material';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\n\r\nfunction DataReciept(props) {\r\n    const dispatch = useDispatch()\r\n    const typeByDate = useSelector(state => state.typeByDate)\r\n    const [value, setValue] = React.useState(new Date());\r\n    const [value1, setValue1] = React.useState('all');\r\n    const darkmode = useSelector(state => state.statusDarkmode)\r\n\r\n    const selectDate = () => {\r\n        const data = {\r\n            type: \"typeByDate\",\r\n            day: value.getDate(),\r\n            month: value.getMonth() + 1,\r\n            year: value.getFullYear(),\r\n        }\r\n        dispatch({\r\n            type: \"TYPE_BY_DATE\",\r\n            typeByDate: data,\r\n        })\r\n    }\r\n\r\n    const changeTime = (newValue) => {\r\n        if (newValue) {\r\n            setValue(newValue);\r\n        }\r\n        if (typeByDate.type === 'typeByDate') {\r\n            const data = {\r\n                type: \"typeByDate\",\r\n                day: newValue.getDate(),\r\n                month: newValue.getMonth() + 1,\r\n                year: newValue.getFullYear(),\r\n            }\r\n            dispatch({\r\n                type: \"TYPE_BY_DATE\",\r\n                typeByDate: data,\r\n            })\r\n        }\r\n    }\r\n\r\n    const selectType = () => {\r\n        if (value1 === 'all') {\r\n            dispatch({\r\n                type: \"TYPE_BY_DATE\",\r\n                typeByDate: { type: 'all' },\r\n            })\r\n        } else if (value1 === 'yesterday') {\r\n            let yesterday = new Date()\r\n            const data = {\r\n                type: \"yesterday\",\r\n                day: yesterday.getDate() - 1,\r\n                month: yesterday.getMonth() + 1,\r\n                year: yesterday.getFullYear(),\r\n            }\r\n            dispatch({\r\n                type: \"TYPE_BY_DATE\",\r\n                typeByDate: data,\r\n            })\r\n        } else if (value1 === 'today') {\r\n            let today = new Date()\r\n            const data = {\r\n                type: \"today\",\r\n                day: today.getDate(),\r\n                month: today.getMonth() + 1,\r\n                year: today.getFullYear(),\r\n            }\r\n            dispatch({\r\n                type: \"TYPE_BY_DATE\",\r\n                typeByDate: data,\r\n            })\r\n        } else if (value1 === 'lastmonth') {\r\n            let today = new Date()\r\n            const data = {\r\n                type: \"lastmonth\",\r\n                month: today.getMonth(),\r\n                year: today.getFullYear(),\r\n            }\r\n            dispatch({\r\n                type: \"TYPE_BY_DATE\",\r\n                typeByDate: data,\r\n            })\r\n        } else if (value1 === 'lastyear') {\r\n            let today = new Date()\r\n            const data = {\r\n                type: \"lastyear\",\r\n                year: today.getFullYear() - 1,\r\n            }\r\n            dispatch({\r\n                type: \"TYPE_BY_DATE\",\r\n                typeByDate: data,\r\n            })\r\n        }\r\n    }\r\n\r\n    const changeType = (e) => {\r\n        setValue1(e.target.value)\r\n        if (typeByDate.type === 'all' || typeByDate.type === 'yesterday' || typeByDate.type === 'today' || typeByDate.type === 'lastmonth' || typeByDate.type === 'lastyear') {\r\n            if (e.target.value === 'all') {\r\n                dispatch({\r\n                    type: \"TYPE_BY_DATE\",\r\n                    typeByDate: { type: 'all' },\r\n                })\r\n            }\r\n            if (e.target.value === 'yesterday') {\r\n                let yesterday = new Date()\r\n                let data = {\r\n                    type: \"yesterday\",\r\n                    day: yesterday.getDate() - 1,\r\n                    month: yesterday.getMonth() + 1,\r\n                    year: yesterday.getFullYear(),\r\n                }\r\n                dispatch({\r\n                    type: \"TYPE_BY_DATE\",\r\n                    typeByDate: data,\r\n                })\r\n            }\r\n            if (e.target.value === 'today') {\r\n                let today = new Date()\r\n                const data = {\r\n                    type: \"today\",\r\n                    day: today.getDate(),\r\n                    month: today.getMonth() + 1,\r\n                    year: today.getFullYear(),\r\n                }\r\n                dispatch({\r\n                    type: \"TYPE_BY_DATE\",\r\n                    typeByDate: data,\r\n                })\r\n            }\r\n            if (e.target.value === 'lastmonth') {\r\n                let today = new Date()\r\n                const data = {\r\n                    type: \"lastmonth\",\r\n                    month: today.getMonth(),\r\n                    year: today.getFullYear(),\r\n                }\r\n                dispatch({\r\n                    type: \"TYPE_BY_DATE\",\r\n                    typeByDate: data,\r\n                })\r\n            }\r\n            if (e.target.value === 'lastyear') {\r\n                let today = new Date()\r\n                const data = {\r\n                    type: \"lastyear\",\r\n                    year: today.getFullYear() - 1,\r\n                }\r\n                dispatch({\r\n                    type: \"TYPE_BY_DATE\",\r\n                    typeByDate: data,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        dispatch({\r\n            type: \"TYPE_BY_DATE\",\r\n            typeByDate: { type: 'all' },\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item md={12} sm={12}  >\r\n                <Card>\r\n                    <CardHeader style={{ color: !darkmode ? '#0091ea' :'white', backgroundColor: !darkmode ? '#efeeef' :'#455a64'}} title=\"Date\" />\r\n                    <Divider></Divider>\r\n                    <CardContent>\r\n                        <Grid container spacing={2}>\r\n                            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                <Grid item md={12} sm={12}>\r\n                                    <div className=\"form-check\">\r\n                                        <input onClick={() => selectType()} style={{ transform: 'translateY(70%)' }} className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" defaultChecked />\r\n                                        <FormControl fullWidth>\r\n                                            <InputLabel id=\"demo-simple-select-label\">Group by</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-label\"\r\n                                                id=\"demo-simple-select\"\r\n                                                value={value1}\r\n                                                label=\"Option\"\r\n                                                onChange={(e) => changeType(e)}\r\n                                            >\r\n                                                <MenuItem value='all'>All</MenuItem>\r\n                                                <MenuItem value='today'>Today</MenuItem>\r\n                                                <MenuItem value='yesterday'>Yesterday</MenuItem>\r\n                                                <MenuItem value='lastmonth'>Last month</MenuItem>\r\n                                                <MenuItem value='lastyear'>Last year</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item md={12} sm={12}>\r\n                                    <div className=\"form-check\">\r\n                                        <input onClick={() => selectDate()} style={{ transform: 'translateY(70%)' }} className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" />\r\n                                        <DesktopDatePicker\r\n                                            label=\"Ngày\"\r\n                                            value={value}\r\n                                            minDate={new Date('2017-01-01')}\r\n                                            onChange={(newValue) => changeTime(newValue)}\r\n                                            renderInput={(params) => <TextField {...params} />}\r\n                                        />\r\n                                    </div>\r\n                                </Grid>\r\n                            </LocalizationProvider>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default DataReciept;","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\RecieptManager\\TableReciept.js",["598","599","600","601","602","603","604","605","606","607","608","609","610","611"],"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport { Grid, Box, Button, Checkbox, Modal } from '@mui/material';\r\nimport { red, lightBlue } from '@mui/material/colors';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios';\r\nimport { FiXSquare } from 'react-icons/fi'\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n\r\nfunction Row(props) {\r\n    const { row } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openModal, setOpenModal] = React.useState(false);\r\n    const statusSelectAll = useSelector(state => state.statusSelectAll)\r\n    const infoUser = useSelector(state => state.infoUser)\r\n    const dispatch = useDispatch();\r\n    const [statusSelectReplace, setStatusSelectReplace] = React.useState(false);\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        border: '1px solid #000',\r\n        borderRadius: '5px',\r\n        boxShadow: 24,\r\n        pt: 2,\r\n        px: 4,\r\n        pb: 3,\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        setStatusSelectReplace(statusSelectAll)\r\n    }, [statusSelectAll])\r\n\r\n    const countQuantity = () => {\r\n        let count = 0;\r\n        row.listProduct.map(value => {\r\n            count += value.quantity;\r\n        })\r\n        return count;\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    //Xoa mềm\r\n    const DeleteReciept = (MAHD, isDelete) => {\r\n        if (isDelete) {\r\n            setOpenModal(true)\r\n        } else {\r\n            axios.post('http://localhost:5000/api/sell-product/soft-delete', {\r\n                token: localStorage.getItem('token'),\r\n                email: infoUser.email,\r\n                MAHD: MAHD\r\n            })\r\n                .then(res => {\r\n                    if (res.data.status === 1) {\r\n                        localStorage.setItem('token', res.data.token)\r\n                        dispatch({\r\n                            type: \"DELETE_RECIEPT\",\r\n                            MAHD: MAHD,\r\n                        })\r\n                        dispatch({\r\n                            type: \"HIDE_ALERT\",\r\n                        })\r\n                        dispatch({\r\n                            type: \"SHOW_ALERT\",\r\n                            message: 'Delete success',\r\n                            typeMessage: 'success',\r\n                        })\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    dispatch({\r\n                        type: \"CHANGE_LOGIN_STATUS\",\r\n                    });\r\n                    dispatch({\r\n                        type: \"HIDE_ALERT\",\r\n                    })\r\n                    dispatch({\r\n                        type: \"SHOW_ALERT\",\r\n                        message: 'Login timeout, signin again',\r\n                        typeMessage: 'warning',\r\n                    })\r\n                })\r\n            setOpen(!open)\r\n        }\r\n    }\r\n\r\n    // Xóa vĩnh viễn\r\n    const PermanentlyDelete = async (MAHD) => {\r\n        axios.post('http://localhost:5000/api/sell-product/permanently-delete', {\r\n            token: localStorage.getItem('token'),\r\n            email: infoUser.email,\r\n            MAHD: MAHD\r\n        })\r\n            .then(res => {\r\n                if (res.data.status === 1) {\r\n                    localStorage.setItem('token', res.data.token)\r\n                    dispatch({\r\n                        type: \"DELETE_ONE_RECIEPT\",\r\n                        MAHD: MAHD,\r\n                    })\r\n                    dispatch({\r\n                        type: \"HIDE_ALERT\",\r\n                    })\r\n                    dispatch({\r\n                        type: \"SHOW_ALERT\",\r\n                        message: 'Delete success',\r\n                        typeMessage: 'success',\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: \"CHANGE_LOGIN_STATUS\",\r\n                });\r\n                dispatch({\r\n                    type: \"HIDE_ALERT\",\r\n                })\r\n                dispatch({\r\n                    type: \"SHOW_ALERT\",\r\n                    message: 'Login timeout, signin again',\r\n                    typeMessage: 'warning',\r\n                })\r\n            })\r\n        setOpenModal(false)\r\n    }\r\n\r\n    const TypeReciept = (isEdit, isDelete, oldBill) => {\r\n        if (isDelete) {\r\n            return red[400]\r\n        } else if (isEdit) {\r\n            return '#f4f492'\r\n        } else if (oldBill){\r\n            return '#00897b'\r\n        } else {\r\n            return '#a6ffa6'\r\n        }\r\n    }\r\n\r\n    const StatusTypeReciept = (isEdit, isDelete) => {\r\n        if (isDelete) {\r\n            return 'Đã xóa'\r\n        } else if (isEdit) {\r\n            return 'Đổi trả'\r\n        } else {\r\n            return 'Thành công'\r\n        }\r\n    }\r\n\r\n    const RestoneReciept =  async (MAHD) => {\r\n        await axios.post('http://localhost:5000/api/sell-product/restone-receipt', {\r\n            token: localStorage.getItem('token'),\r\n            email: infoUser.email,\r\n            MAHD: MAHD\r\n        })\r\n            .then(res => {\r\n                localStorage.setItem('token', res.data.token)\r\n                if(res.data.status === 1) {\r\n                    dispatch({\r\n                        type: 'RESTONE_ONE_RECIEPT',\r\n                        MAHD: MAHD\r\n                    })\r\n                    dispatch({\r\n                        type: \"HIDE_ALERT\",\r\n                    })\r\n                    dispatch({\r\n                        type: \"SHOW_ALERT\",\r\n                        message: 'Restone success',\r\n                        typeMessage: 'success',\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: \"CHANGE_LOGIN_STATUS\",\r\n                });\r\n                dispatch({\r\n                    type: \"HIDE_ALERT\",\r\n                })\r\n                dispatch({\r\n                    type: \"SHOW_ALERT\",\r\n                    message: 'Login timeout, signin again',\r\n                    typeMessage: 'warning',\r\n                })\r\n            })\r\n        setOpen(false);\r\n    }\r\n\r\n    const label = { inputProps: { 'aria-label': 'Checkbox demo' } };\r\n\r\n    const ChangeCheckbox = (e, MAHD) => {\r\n        setStatusSelectReplace(!statusSelectReplace);\r\n        if (e.target.checked) {\r\n            dispatch({\r\n                type: \"ADD_MAHD_RECIEPT\",\r\n                MAHD: MAHD,\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: \"DELETE_MAHD_RECIEPT\",\r\n                MAHD: MAHD,\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow style={{ backgroundColor: TypeReciept(row.isEdit, row.deleted, row.oldBill), borderWidth: open ? '2px' : null, borderStyle: 'solid', borderColor: '#90a4ae #90a4ae transparent #90a4ae' }} sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n                <TableCell>\r\n                    <Checkbox {...label} checked={statusSelectReplace} onChange={(e) => ChangeCheckbox(e, row.MAHD)} color=\"default\" />\r\n                </TableCell>\r\n                <TableCell>\r\n                    <IconButton\r\n                        aria-label=\"expand row\"\r\n                        size=\"small\"\r\n                        onClick={() => setOpen(!open)}\r\n                    >\r\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    {row.MAHD}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.date}</TableCell>\r\n                <TableCell align=\"right\">{row.totalMoney.toLocaleString()}</TableCell>\r\n                <TableCell align=\"right\">{row.discount}</TableCell>\r\n                <TableCell align=\"right\">{row.totalFinalMoney.toLocaleString()}</TableCell>\r\n            </TableRow>\r\n            <TableRow style={{ borderWidth: open ? '2px' : null, borderStyle: 'solid', borderColor: 'transparent #90a4ae #90a4ae #90a4ae' }}>\r\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={12}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Box sx={{ margin: 1 }}>\r\n                            <Typography style={{ fontWeight: '600' }} variant=\"h6\" gutterBottom component=\"div\">\r\n                                Detail Recipet\r\n                            </Typography>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item lg={6} md={12} sm={12} xs={12}>\r\n                                    <Table size=\"small\" aria-label=\"purchases\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n\r\n                                                <TableCell>#</TableCell>\r\n                                                <TableCell>Name</TableCell>\r\n                                                <TableCell>Quantity</TableCell>\r\n                                                <TableCell align=\"right\">Price</TableCell>\r\n                                                <TableCell align=\"right\">Total Price</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {row.listProduct.map((value, key) => (\r\n                                                <TableRow key={value.name}>\r\n                                                    <TableCell>\r\n                                                        {key + 1}\r\n                                                    </TableCell>\r\n                                                    <TableCell>{value.product.name}</TableCell>\r\n                                                    <TableCell>{value.quantity}</TableCell>\r\n                                                    <TableCell align=\"right\">{value.product.sellPrice.toLocaleString()}</TableCell>\r\n                                                    <TableCell align=\"right\">\r\n                                                        {(value.quantity * value.product.sellPrice).toLocaleString()}\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </Grid>\r\n                                <Grid style={{ borderLeft: '1px solid black', marginTop: '15px' }} item lg={6} md={12} sm={12} xs={12}>\r\n                                    <Grid container spacing={3}>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Mã hóa đơn:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{row.MAHD}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Trạng thái:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{StatusTypeReciept(row.isEdit, row.deleted)}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Thời gian:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{row.date}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Giờ:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{row.time}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Mã HD củ:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{row.oldBill ? row.oldBill.MAHD : \"Không có\"}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Người bán:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{row.name}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Tổng số lượng:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{countQuantity()}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Tổng tiền hàng:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{row.totalMoney.toLocaleString()}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Giảm giá (%):</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{row.discount}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0', fontWeight: '600' }}>TỔNG:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0', fontWeight: '600' }}>{row.totalFinalMoney.toLocaleString()}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid style={{ marginBottom: '10px' }} item md={12} xs={12}>\r\n                                    <Grid style={{ justifyContent: 'end' }} container>\r\n                                        {row.deleted ? (\r\n                                            <Grid style={{ justifyContent: 'end' }} item md={2} xs={2}>\r\n                                                <Button onClick={() => RestoneReciept(row.MAHD)} style={{ fontWeight: '700', fontSize: '0.6rem', backgroundColor: '#00bfa5', color: 'white' }}>\r\n                                                    <TiArrowBack style={{ marginRight: '5px', fontSize: '1rem', transform: 'translateY(-5%)' }}></TiArrowBack>\r\n                                                    Restone\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        ) : null}\r\n                                        <Grid style={{ justifyContent: 'end' }} item md={2} xs={2}>\r\n                                            <Button onClick={() => DeleteReciept(row.MAHD, row.deleted)} style={{ fontWeight: '700', fontSize: '0.6rem', backgroundColor: red[400], color: 'white' }}>\r\n                                                <FiXSquare style={{ marginRight: '5px', fontSize: '1rem', transform: 'translateY(-5%)' }}></FiXSquare>\r\n                                                Xóa bỏ\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n            <Modal\r\n                open={openModal}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"parent-modal-title\"\r\n                aria-describedby=\"parent-modal-description\"\r\n            >\r\n                <Box sx={{ ...style, width: 400 }}>\r\n                    <h2 style={{ textAlign: 'center' }} id=\"parent-modal-title\">Are you sure to delete?</h2>\r\n                    <Grid container spacing={2}>\r\n                        <Grid style={{ justifyContent: 'center', display: 'flex' }} item md={6} sm={6}  >\r\n                            <Button onClick={() => PermanentlyDelete(row.MAHD)} style={{ color: 'white', backgroundColor: red[500] }}>DELETE</Button>\r\n                        </Grid>\r\n                        <Grid style={{ justifyContent: 'center', display: 'flex' }} item md={6} sm={6}  >\r\n                            <Button onClick={() => setOpenModal(false)} style={{ backgroundColor: lightBlue[100] }}>CANCEL</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nRow.propTypes = {\r\n    row: PropTypes.shape({\r\n        calories: PropTypes.number.isRequired,\r\n        carbs: PropTypes.number.isRequired,\r\n        fat: PropTypes.number.isRequired,\r\n        history: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                amount: PropTypes.number.isRequired,\r\n                customerId: PropTypes.string.isRequired,\r\n                date: PropTypes.string.isRequired,\r\n            }),\r\n        ).isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        price: PropTypes.number.isRequired,\r\n        protein: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\n\r\nexport default function CollapsibleTable() {\r\n    const typeReciept = useSelector(state => state.typeReciept)\r\n    const listReciept = useSelector(state => state.listReciept)\r\n    const typeByDate = useSelector(state => state.typeByDate)\r\n    const [listRecieptReplace, setListRecieptReplace] = React.useState(listReciept);\r\n    const statusSelectAll = useSelector(state => state.statusSelectAll)\r\n    const search = useSelector(state => state.search)\r\n    const dispatch = useDispatch()\r\n    let listMAHD = []\r\n    React.useEffect(() => {\r\n        var list = typeReciept.length === 0 ? listReciept : listReciept.filter(value => {\r\n            for (var i = 0; i < typeReciept.length; i++) {\r\n                if (typeReciept[i] === 'delete') {\r\n                    if (value.deleted) {\r\n                        return value;\r\n                    }\r\n                } else if (typeReciept[i] === 'return') {\r\n                    if (!value.deleted && value.isEdit) {\r\n                        return value;\r\n                    }\r\n                } else {\r\n                    if (!value.deleted && !value.isEdit) {\r\n                        return value;\r\n                    }\r\n                }\r\n            }\r\n        })\r\n\r\n        if (typeByDate.type === 'typeByDate' || typeByDate.type === 'yesterday' || typeByDate.type === 'today') {\r\n            list = list.filter(value => {\r\n                let timeMau = value.date;\r\n                timeMau = timeMau.replace(/\\s/g, \"\");\r\n                timeMau = timeMau.split(\"/\");\r\n                if (typeByDate.day == timeMau[0] && typeByDate.month == timeMau[1] && typeByDate.year == timeMau[2]) {\r\n                    return value;\r\n                }\r\n            })\r\n        }\r\n\r\n        if (typeByDate.type === 'lastmonth') {\r\n            list = list.filter(value => {\r\n                let timeMau = value.date;\r\n                timeMau = timeMau.replace(/\\s/g, \"\");\r\n                timeMau = timeMau.split(\"/\");\r\n                if (typeByDate.month == timeMau[1] && typeByDate.year == timeMau[2]) {\r\n                    return value;\r\n                }\r\n            })\r\n        }\r\n\r\n        if (typeByDate.type === 'lastyear') {\r\n            list = list.filter(value => {\r\n                let timeMau = value.date;\r\n                timeMau = timeMau.replace(/\\s/g, \"\");\r\n                timeMau = timeMau.split(\"/\");\r\n                if (typeByDate.year == timeMau[2]) {\r\n                    return value;\r\n                }\r\n            })\r\n        }\r\n\r\n        if (search.length !== 0) {\r\n            list = list.filter(value => {\r\n                let isCheck = true\r\n                for (let i = 0; i < search.length; i++) {\r\n                    if (search[0] !== value.MAHD[0]) {\r\n                        isCheck = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (isCheck) {\r\n                    return value;\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n        list.map(value => {\r\n            listMAHD.push(value.MAHD)\r\n        })\r\n\r\n        statusSelectAll ? dispatch({\r\n            type: \"SELECTED_ALL_RECIEPT\",\r\n            listMAHD: listMAHD,\r\n        }) : dispatch({\r\n            type: \"RESET_MAHD_RECIEPT\"\r\n        })\r\n\r\n\r\n        setListRecieptReplace(list)\r\n    }, [typeReciept, typeByDate, listReciept, statusSelectAll, search])\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"collapsible table\">\r\n                <TableHead>\r\n                    <TableRow style={{ backgroundColor: 'black', color: 'white' }}>\r\n                        <TableCell>\r\n                        </TableCell>\r\n                        <TableCell />\r\n                        <TableCell >Mã HĐ</TableCell>\r\n                        <TableCell align=\"right\">Ngày hóa đơn</TableCell>\r\n                        <TableCell align=\"right\">Tổng hóa đơn</TableCell>\r\n                        <TableCell align=\"right\">Giảm giá</TableCell>\r\n                        <TableCell align=\"right\">Khách hàng trả</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {listRecieptReplace ?\r\n                        listRecieptReplace.map((row) => (\r\n                            <Row key={row.MAHD} row={row} />\r\n                        )) : null\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\RecieptManager\\ControlReciept.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\RecieptManager\\StatusReceiptType.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\GroupButton.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\Calendar.js",["612","613","614"],"import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport StaticDateRangePicker from '@mui/lab/StaticDateRangePicker';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport default function StaticDateRangePickerDemo() {\r\n    const [value, setValue] = React.useState([new Date(2021, 2, 2), new Date(2021, 2, 5)]);\r\n    const [date, setDate] = React.useState(new Date(2021, 4, 2))\r\n\r\n    const value1 = [\r\n        { date: '2021/01/11', count:2 },\r\n        { date: '2021/04/12', count:2 },\r\n        { date: '2021/05/01', count:5 },\r\n        { date: '2021/05/02', count:5 },\r\n        { date: '2021/05/03', count:1 },\r\n        { date: '2021/05/04', count:11 },\r\n        { date: '2021/05/08', count:32 },\r\n      ];\r\n\r\n    return (\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <StaticDateRangePicker\r\n                displayStaticWrapperAs=\"desktop\"\r\n                value={value}\r\n                onChange={(date) => {\r\n                    setDate(date);\r\n                }}\r\n                renderInput={(startProps, endProps) => (\r\n                    <React.Fragment>\r\n                        <TextField {...startProps} />\r\n                        <Box sx={{ mx: 2 }}> to </Box>\r\n                        <TextField {...endProps} />\r\n                    </React.Fragment>\r\n                )}\r\n                calendars={4}\r\n                disableAutoMonthSwitching={true}\r\n            />\r\n        </LocalizationProvider>\r\n    );\r\n}\r\n","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\Statistic.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\ConfirmModal.js",["615","616","617","618","619","620"],"import React, { Component } from 'react';\r\nimport { Card, CardHeader, Divider, Grid, TextField, Box, CardContent, Button } from '@mui/material';\r\nimport { connect } from 'react-redux'\r\nimport { BiPlusMedical, BiEdit } from 'react-icons/bi';\r\nimport Stack from '@mui/material/Stack';\r\nimport { GiCancel } from 'react-icons/gi'\r\nimport axios from 'axios';\r\n\r\nclass ConfirmModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    confirm = () => {\r\n        // Thực hiện các lệnh xử lý tại đây\r\n        this.props.changeConfirmStatus();\r\n        this.props.setConfirm();\r\n    }\r\n\r\n    cancel = () => {\r\n        this.props.changeConfirmStatus();\r\n        this.props.setQuit();\r\n    }\r\n\r\n    getMessage = ()  => {\r\n        var message = \"Cái này chưa code\";\r\n        switch(this.props.confirmCode)\r\n        {\r\n            case 'confirm-delete-good':\r\n                message = \"Are you sure to delete this product ?\";\r\n            case 'confirm-import-good':\r\n                message = \"Are you sure to import this product ?\";\r\n        }\r\n        return (\r\n            <div>\r\n                {message}\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        console.log(this.props.objectEditShift);\r\n        return (\r\n            <form style={{ zIndex: '10', minWidth: '500px', width: '600px', justifyContent: 'center', marginTop: '10%' }} autoComplete=\"off\" noValidate>\r\n                <Card>\r\n                    <CardHeader style={{ color: 'blue', backgroundColor: '#efeeef' }} title=\"Confirm\" />\r\n                    <Divider />\r\n                    <CardContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item md={12} xs={12}>\r\n                                {this.getMessage()}\r\n                            </Grid>\r\n                            <Grid item md={12} xs={12}>\r\n                                <Stack spacing={3}>\r\n                                   \r\n                                </Stack>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                    <Divider />\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-evenly', p: 2 }}>\r\n                        <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.confirm()} variant=\"contained\" startIcon={<BiPlusMedical />}>\r\n                            Xác nhận\r\n                        </Button>\r\n                        <Button style={{ backgroundColor: 'red' }} onClick={(e) => this.cancel(e)} variant=\"contained\" startIcon={<GiCancel />}>\r\n                            Hủy\r\n                        </Button>\r\n                    </Box>\r\n                </Card>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        confirmStatus: state.confirmStatus,\r\n        deleteStatus: state.deleteStatus,\r\n        confirmCode: state.confirmCode,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeConfirmStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_CONFIRM_STATUS\",\r\n            });\r\n        },\r\n        setConfirm: () => {\r\n            dispatch({\r\n                type: \"CONFIRM\",\r\n            });\r\n        },\r\n        setQuit: () => {\r\n            dispatch({\r\n                type: \"QUIT\",\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmModal);","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\TableReciept.js",["621"],"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport { Grid, Box } from '@mui/material';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport {red} from '@mui/material/colors'\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { FiEdit } from 'react-icons/fi'\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Row(props) {\r\n    const { row } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const dispatch = useDispatch();\r\n    const listReciept = useSelector(state => state.listReciept)\r\n    const infoUser = useSelector(state => state.infoUser)\r\n    const statusEditInfoBill = useSelector(state => state.statusEditInfoBill)\r\n    const editReciept = (MAHD) => {\r\n        let objectInfoBill = [];\r\n        listReciept.map(value => {\r\n            if (value.MAHD === MAHD) {\r\n                objectInfoBill = value\r\n            }\r\n            return value;\r\n        })\r\n        if (!statusEditInfoBill) {\r\n            axios.post('http://localhost:5000/api/sell-product/edit-reciept',{\r\n                MAHD: MAHD,\r\n                token: localStorage.getItem('token'),\r\n                email: infoUser.email,\r\n            }).then(res => {\r\n                if (res.status === 200) {\r\n                    localStorage.setItem('token', res.data.token)\r\n                    dispatch({\r\n                        type: \"EDIT_SHOPPING_BAGS\",\r\n                        MAHD: MAHD,\r\n                    })\r\n                    dispatch({\r\n                        type: \"INFO_SHOPPING_BAGS_EDIT\",\r\n                        listProduct: objectInfoBill.listProduct,\r\n                    })\r\n                    dispatch({\r\n                        type: \"ADD_INFO_BILL_EDIT\",\r\n                        InfoBill: objectInfoBill,\r\n                    })\r\n                    dispatch({\r\n                        type: \"CHANGE_EDIT_INFOMATION_STATUS\",\r\n                    })\r\n                    dispatch({\r\n                        type: \"CHANGE_HISTORY_RECIEPT_STATUS\"\r\n                    })\r\n                }\r\n            }).catch(err => {\r\n                dispatch({\r\n                    type: \"CHANGE_LOGIN_STATUS\",\r\n                })\r\n                dispatch({\r\n                    type: \"HIDE_ALERT\",\r\n                })\r\n                dispatch({\r\n                    type: \"SHOW_ALERT\",\r\n                    message: 'Login timeout, signin again',\r\n                    typeMessage: 'warning',\r\n                })\r\n            })\r\n            \r\n        } else {\r\n            dispatch({\r\n                type: \"HIDE_ALERT\",\r\n            })\r\n            dispatch({\r\n                type: \"SHOW_ALERT\",\r\n                message: \"Con` don hang` cho` !\",\r\n                typeMessage: \"warning\"\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const TypeReciept = (isEdit, isDelete) => {\r\n        if (isDelete) {\r\n            return red[400]\r\n        } else if (isEdit) {\r\n            return '#f4f492'\r\n        } else {\r\n            return '#a6ffa6'\r\n        }\r\n    }\r\n\r\n    const StatusTypeReciept = (isEdit, isDelete) => {\r\n        if (isDelete) {\r\n            return 'Đã xóa'\r\n        } else if (isEdit) {\r\n            return 'Đổi trả'\r\n        } else {\r\n            return 'Thành công'\r\n        }\r\n    }\r\n\r\n    const showEdit = (isEdit, isDelete) => {\r\n        if (isEdit || isDelete) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const countQuantity = () => {\r\n        let count = 0;\r\n        row.listProduct.map(value => {\r\n            count += value.quantity;\r\n        })\r\n        return count;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow style={{ backgroundColor: TypeReciept(row.isEdit, row.deleted), borderWidth: open ? '2px' : null, borderStyle:'solid', borderColor: '#90a4ae #90a4ae transparent #90a4ae'  }} sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n                <TableCell>\r\n                    <IconButton\r\n                        aria-label=\"expand row\"\r\n                        size=\"small\"\r\n                        onClick={() => setOpen(!open)}\r\n                    >\r\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    {row.MAHD}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.date}</TableCell>\r\n                <TableCell align=\"right\">{row.totalMoney}</TableCell>\r\n                <TableCell align=\"right\">{row.discount}</TableCell>\r\n                <TableCell align=\"right\">{row.totalFinalMoney}</TableCell>\r\n                <TableCell>\r\n                    {!showEdit(row.isEdit, row.deleted) ? (\r\n                        <IconButton onClick={() => editReciept(row.MAHD)} color=\"secondary\" aria-label=\"fingerprint\">\r\n                            <FiEdit />\r\n                        </IconButton>\r\n                    ) : null}\r\n                </TableCell>\r\n            </TableRow>\r\n            <TableRow style={{borderWidth: open ? '2px' : null, borderStyle:'solid', borderColor: 'transparent #90a4ae #90a4ae #90a4ae'  }}>\r\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={12}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Box sx={{ margin: 1 }}>\r\n                            <Typography style={{ fontWeight: '600' }} variant=\"h6\" gutterBottom component=\"div\">\r\n                                Detail Recipet\r\n                            </Typography>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item  lg={6} md={12} xs={12}>\r\n                                    <Table size=\"small\" aria-label=\"purchases\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell>#</TableCell>\r\n                                                <TableCell>Name</TableCell>\r\n                                                <TableCell>Quantity</TableCell>\r\n                                                <TableCell align=\"right\">Price</TableCell>\r\n                                                <TableCell align=\"right\">Total Price</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {row.listProduct.map((value, key) => (\r\n                                                <TableRow key={value.name}>\r\n                                                    <TableCell>\r\n                                                        {key + 1}\r\n                                                    </TableCell>\r\n                                                    <TableCell>{value.product.name}</TableCell>\r\n                                                    <TableCell>{value.quantity}</TableCell>\r\n                                                    <TableCell align=\"right\">{value.product.sellPrice.toLocaleString()}</TableCell>\r\n                                                    <TableCell align=\"right\">\r\n                                                        {(value.quantity * value.product.sellPrice).toLocaleString()}\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </Grid>\r\n                                <Grid style={{borderLeft: '1px solid black', marginTop: '15px'}} item lg={6} md={12} xs={12}>\r\n                                    <Grid container spacing={3}>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Mã hóa đơn:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{row.MAHD}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Trạng thái:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{StatusTypeReciept(row.isEdit, row.isDelete)}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Thời gian:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{row.date}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Giờ:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{row.time}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Mã HD củ:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{row.oldBill ? row.oldBill.MAHD : \"Không có\"}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Người bán:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{row.name}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Tổng số lượng:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{countQuantity()}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Tổng tiền hàng:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{row.totalMoney.toLocaleString()}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>Giảm giá (%):</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0' }}>{row.discount}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item md={6} xs={6}>\r\n                                            <Grid container>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0', fontWeight: '600' }}>TỔNG:</p>\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={6}>\r\n                                                    <p style={{ marginBottom: '0', fontWeight: '600' }}>{row.totalFinalMoney.toLocaleString()}</p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nRow.propTypes = {\r\n    row: PropTypes.shape({\r\n        calories: PropTypes.number.isRequired,\r\n        carbs: PropTypes.number.isRequired,\r\n        fat: PropTypes.number.isRequired,\r\n        history: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                amount: PropTypes.number.isRequired,\r\n                customerId: PropTypes.string.isRequired,\r\n                date: PropTypes.string.isRequired,\r\n            }),\r\n        ).isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        price: PropTypes.number.isRequired,\r\n        protein: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\n\r\nexport default function CollapsibleTable() {\r\n\r\n    const listReciept = useSelector(state => state.listReciept)\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"collapsible table\">\r\n                <TableHead>\r\n                    <TableRow style={{ backgroundColor: 'black', color: 'white' }}>\r\n                        <TableCell />\r\n                        <TableCell >Mã HĐ</TableCell>\r\n                        <TableCell align=\"right\">Ngày hóa đơn</TableCell>\r\n                        <TableCell align=\"right\">Tổng hóa đơn</TableCell>\r\n                        <TableCell align=\"right\">Giảm giá</TableCell>\r\n                        <TableCell align=\"right\">Khách hàng trả</TableCell>\r\n                        <TableCell />\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {listReciept ?\r\n                        listReciept.map((row) => (\r\n                            <Row key={row.MAHD} row={row} />\r\n                        )) : null\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\SellProduct\\ComponentToPrint.js",["622","623","624"],"import React from 'react';\r\n\r\n\r\n\r\nclass ComponentToPrint extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date(),\r\n        }\r\n    }\r\n\r\n    minute = 1000 * 60;\r\n    hour = this.minute * 60;\r\n    day = this.hour * 24;\r\n    year = this.day * 365;\r\n\r\n    makeCode = (length) => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() *\r\n                charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    totalMoney = () => {\r\n        let total = 0;\r\n        this.props.shoppingBags.map(value => {\r\n            total += value.quantity * value.product.sellPrice;\r\n        })\r\n        return total.toLocaleString();\r\n    }\r\n\r\n    reduceTotalMoney = () => {\r\n        let total = 0;\r\n        this.props.shoppingBags.map(value => {\r\n            total += value.quantity * value.product.sellPrice;\r\n        })\r\n        if (total !== 0) {\r\n            total = total*this.props.percentDiscount/100\r\n        }\r\n        return total.toLocaleString()\r\n    }\r\n\r\n    finalTotalMoney = () => {\r\n        let total = 0;\r\n        this.props.shoppingBags.map(value => {\r\n            total += value.quantity * value.product.sellPrice;\r\n        })\r\n        if (total !== 0 && this.props.percentDiscount !== 0) {\r\n            total -= total*this.props.percentDiscount/100\r\n        }\r\n        return total.toLocaleString();\r\n    }\r\n\r\n    dateFunction = () => {\r\n        let month = this.state.date.getMonth()+1;\r\n        return \"  \" + this.state.date.getDate() + \" / \" + month + \" / \" + this.state.date.getFullYear()\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"row\">\r\n                {this.reduceTotalMoney()}\r\n                <div className=\"col-12\">\r\n                    <h1 style={{ textAlign: 'center' }}>{this.props.infoUser.storeName}</h1>\r\n                </div>\r\n                <div style={{ borderBottom: '1px solid #00000059' }} className=\"col-12\">\r\n                    <p style={{ textAlign: 'center', marginBottom: '0' }}>{this.props.infoUser.address}</p>\r\n                    <p style={{ textAlign: 'center' }}>{this.props.infoUser.district + ' ' + this.props.infoUser.province}</p>\r\n                    <p style={{ textAlign: 'center' }}>{\"SĐT: \" + this.props.infoUser.tel}</p>\r\n                </div>\r\n                <div style={{ marginTop: '30px' }} className=\"col-12\">\r\n                    <h4 style={{ textAlign: 'center' }}>HÓA ĐƠN THANH TOÁN</h4>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <p style={{ textAlign: 'center', fontWeight: '400' }}>Số HĐ: {this.props.MAHD}</p>\r\n                    <div style={{ margin: '0 5px' }} className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <p style={{ fontWeight: '700' }}>Date:\r\n                                <span style={{ fontWeight: '400' }}>\r\n                                    {this.dateFunction()}\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <p style={{ fontWeight: '700' }}>Time:\r\n                                <span style={{ fontWeight: '400' }}>\r\n                                    {\"  \" + this.state.date.getHours() + \":\" + this.state.date.getMinutes()}\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <p style={{ fontWeight: '700', margin: '0 17px' }}>\r\n                        Cashier:\r\n                        <span style={{ fontWeight: '400' }}>\r\n                            {\"  Admin\"}\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n                <table style={{ margin: '0 10px' }} class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Name</th>\r\n                            <th scope=\"col\">Quantity</th>\r\n                            <th scope=\"col\">Price</th>\r\n                            <th scope=\"col\">Total money</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.shoppingBags ? this.props.shoppingBags.map((value, key) => (\r\n                            <tr>\r\n                                <td>{key + 1}</td>\r\n                                <td>{value.product.name}</td>\r\n                                <td>{value.quantity}</td>\r\n                                <td>{value.product.sellPrice}</td>\r\n                                <td>{value.quantity * value.product.sellPrice}</td>\r\n                            </tr>\r\n                        ))\r\n                            : 'Không có gì'}\r\n\r\n                    </tbody>\r\n                </table>\r\n                <div style={{marginTop: '20px'}} className=\"col-12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <h6 style={{ textAlign: 'end' }}>Total :</h6>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style={{ textAlign: 'start' }}>{this.totalMoney()}đ</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <h6 style={{ textAlign: 'end' }}>Discount :</h6>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style={{ textAlign: 'start' }}>-{this.reduceTotalMoney()}đ</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <h5 style={{ textAlign: 'end' }}>TOTAL FINAL :</h5>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h5 style={{ textAlign: 'start' }}>{this.finalTotalMoney()}đ</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ marginTop: '30px' }} className=\"col-12\">\r\n                    <h6 style={{ textAlign: 'center',fontStyle: 'italic ' }}>Xin cảm ơn quý khách</h6>\r\n                    <h6 style={{ textAlign: 'center',fontStyle: 'italic ' }}>hẹn gặp lại!</h6>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ComponentToPrint;","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\UnShiftEmployee.js",["625","626","627","628","629","630","631","632"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\FixedCalendar.js",["633"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\UpdateEmployeeModal.js",["634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\AddEmployeeModal.js",["651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\PayMoneyModal.js",["673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\fakeData.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\EmployeeTableHeader.js",["694","695","696","697","698","699","700","701"],"import PropTypes from 'prop-types';\r\n// material\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@mui/material';\r\nimport { withStyles } from '@material-ui/styles';\r\n// ----------------------------------------------------------------------\r\n\r\nEmployeeTableHeader.propTypes = {\r\n  order: PropTypes.oneOf(['asc', 'desc']),\r\n  orderBy: PropTypes.string,\r\n  rowCount: PropTypes.number,\r\n  headLabel: PropTypes.array,\r\n  numSelected: PropTypes.number,\r\n  onRequestSort: PropTypes.func,\r\n  onSelectAllClick: PropTypes.func\r\n};\r\nconst styles = theme =>  ({\r\n  goodTable: {                                     \r\n      borderWidth: '1px',\r\n      borderColor: '#ccc',\r\n      borderStyle: 'solid'\r\n  },\r\n  goodTable_Cell_Header: {                                     \r\n      borderWidth: '1px',\r\n      borderColor: '#ccc',\r\n      borderStyle: 'solid',\r\n      height: '40px',\r\n  },\r\n  goodTable_Cell: {                                     \r\n      borderWidth: '1px',\r\n      borderColor: '#ccc',\r\n      borderStyle: 'solid',\r\n      height: '80px',\r\n  } \r\n})\r\n\r\nfunction EmployeeTableHeader( props){\r\n  const {\r\n    order,\r\n    orderBy,\r\n    rowCount,\r\n    headLabel,\r\n    numSelected,\r\n    onRequestSort,\r\n    onSelectAllClick} = props;\r\n  // const createSortHandler = (property) => (event) => {\r\n  //   onRequestSort(event, property);\r\n  // };\r\n  const {classes} =  props;\r\n  // console.log(\"headLabel\", headLabel);\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\" className = {classes.goodTable_Cell_Header}>\r\n          <Checkbox\r\n            // indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            // checked={rowCount > 0 && numSelected === rowCount}\r\n            // onChange={onSelectAllClick}\r\n          />\r\n        </TableCell>\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            className = {classes.goodTable_Cell_Header}\r\n            // key={headCell.id}\r\n            // align={headCell.alignRight ? 'right' : 'left'}\r\n            // sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              // hideSortIcon\r\n              // active={orderBy === headCell.id}\r\n              // direction={orderBy === headCell.id ? order : 'asc'}\r\n              // onClick={createSortHandler(headCell.id)}\r\n              style={{\r\n                color: '#333'\r\n              }}\r\n            >\r\n              {headCell.label}\r\n              {/* {orderBy === headCell.id ? (\r\n                <Box sx={{ ...visuallyHidden }}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null} */}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nexport default withStyles( styles )( EmployeeTableHeader );","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Dashboard\\BaseOptionChart.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\FixedCalendarCell.js",["702","703","704","705","706","707","708","709"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\EmployeeMoreMenu.js",["710"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\SackedEmployeeMenu.js",["711","712"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\EmployeeToolbar.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\SearchNotFound.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\Scrollbar.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\Label.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\Page.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\SearchBar.js",["713","714","715","716"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { MdClear} from \"react-icons/md\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport { withStyles } from '@material-ui/styles';\r\nimport classNames from \"classnames\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    // height: theme.spacing(6),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    height: \"80px\",\r\n  },\r\n//   iconButton: {\r\n//     color: theme.palette.action.active,\r\n//     transform: \"scale(1, 1)\",\r\n//     transition: theme.transitions.create([\"transform\", \"color\"], {\r\n//       duration: theme.transitions.duration.shorter,\r\n//       easing: theme.transitions.easing.easeInOut,\r\n//     }),\r\n//   },\r\n  iconButtonHidden: {\r\n    transform: \"scale(0, 0)\",\r\n    \"& > $icon\": {\r\n      opacity: 0,\r\n    },\r\n  },\r\n  searchIconButton: {\r\n    // marginRight: theme.spacing(-6),\r\n  },\r\n//   icon: {\r\n//     transition: theme.transitions.create([\"opacity\"], {\r\n//       duration: theme.transitions.duration.shorter,\r\n//       easing: theme.transitions.easing.easeInOut,\r\n//     }),\r\n//   },\r\n  input: {\r\n    width: \"100%\",\r\n  },\r\n  searchContainer: {\r\n    margin: \"4px 8px 4px 8px\",\r\n    height: \"40px\",\r\n    // width: `calc(100% - ${theme.spacing(6 + 4)}px)`, // 6 button + 4 margin\r\n  },\r\n});\r\nconst SearchBar = React.forwardRef(\r\n  (\r\n    {\r\n      cancelOnEscape,\r\n      className,\r\n      classes,\r\n      closeIcon,\r\n      disabled,\r\n      onCancelSearch,\r\n      onRequestSearch,\r\n      searchIcon,\r\n      style,\r\n      ...inputProps\r\n    },\r\n    ref\r\n  ) => {\r\n    const inputRef = React.useRef();\r\n    const [value, setValue] = React.useState(inputProps.value);\r\n\r\n    React.useEffect(() => {\r\n      setValue(inputProps.value);\r\n    }, [inputProps.value]);\r\n\r\n    const handleFocus = React.useCallback(\r\n      (e) => {\r\n        if (inputProps.onFocus) {\r\n          inputProps.onFocus(e);\r\n        }\r\n      },\r\n      [inputProps.onFocus]\r\n    );\r\n\r\n    const handleBlur = React.useCallback(\r\n      (e) => {\r\n        setValue((v) => v.trim());\r\n        if (inputProps.onBlur) {\r\n          inputProps.onBlur(e);\r\n        }\r\n      },\r\n      [inputProps.onBlur]\r\n    );\r\n\r\n    const handleInput = React.useCallback(\r\n      (e) => {\r\n        setValue(e.target.value);\r\n        if (inputProps.onChange) {\r\n          inputProps.onChange(e.target.value);\r\n        }\r\n      },\r\n      [inputProps.onChange]\r\n    );\r\n\r\n    const handleCancel = React.useCallback(() => {\r\n      setValue(\"\");\r\n      if (onCancelSearch) {\r\n        onCancelSearch();\r\n      }\r\n    }, [onCancelSearch]);\r\n\r\n    const handleRequestSearch = React.useCallback(() => {\r\n      if (onRequestSearch) {\r\n        onRequestSearch(value);\r\n      }\r\n    }, [onRequestSearch, value]);\r\n\r\n    const handleKeyUp = React.useCallback(\r\n      (e) => {\r\n        if (e.charCode === 13 || e.key === \"Enter\") {\r\n          handleRequestSearch();\r\n        } else if (\r\n          cancelOnEscape &&\r\n          (e.charCode === 27 || e.key === \"Escape\")\r\n        ) {\r\n          handleCancel();\r\n        }\r\n        if (inputProps.onKeyUp) {\r\n          inputProps.onKeyUp(e);\r\n        }\r\n      },\r\n      [handleRequestSearch, cancelOnEscape, handleCancel, inputProps.onKeyUp]\r\n    );\r\n\r\n    React.useImperativeHandle(ref, () => ({\r\n      focus: () => {\r\n        inputRef.current.focus();\r\n      },\r\n      blur: () => {\r\n        inputRef.current.blur();\r\n      },\r\n    }));\r\n\r\n    return (\r\n      <Paper className={classNames(classes.root, className)} style={{height: '40px'}}>\r\n        <div className={classes.searchContainer}>\r\n          <Input\r\n            {...inputProps}\r\n            inputRef={inputRef}\r\n            onBlur={handleBlur}\r\n            value={value}\r\n            onChange={handleInput}\r\n            onKeyUp={handleKeyUp}\r\n            onFocus={handleFocus}\r\n            fullWidth\r\n            className={classes.input}\r\n            disableUnderline\r\n            disabled={disabled}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          onClick={handleRequestSearch}\r\n          className={classNames(classes.iconButton, classes.searchIconButton, {\r\n            [classes.iconButtonHidden]: value !== \"\",\r\n          })}\r\n          disabled={disabled}\r\n        >\r\n          {React.cloneElement(searchIcon, {\r\n            classes: { root: classes.icon },\r\n          })}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleCancel}\r\n          className={classNames(classes.iconButton, {\r\n            [classes.iconButtonHidden]: value === \"\",\r\n          })}\r\n          disabled={disabled}\r\n        >\r\n          {React.cloneElement(closeIcon, {\r\n            classes: { root: classes.icon },\r\n          })}\r\n        </IconButton>\r\n      </Paper>\r\n    );\r\n  }\r\n);\r\n\r\nSearchBar.defaultProps = {\r\n  className: \"\",\r\n  closeIcon: <MdClear/>,\r\n  disabled: false,\r\n  placeholder: \"Search\",\r\n  searchIcon: <AiOutlineSearch />,\r\n  style: null,\r\n  value: \"\",\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  cancelOnEscape: PropTypes.bool,\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  closeIcon: PropTypes.node,\r\n  disabled: PropTypes.bool,\r\n  onCancelSearch: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  onRequestSearch: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n  searchIcon: PropTypes.node,\r\n  style: PropTypes.object,\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(SearchBar);","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\UpdateGoodModal.js",["717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743"],"import React, { Component } from 'react';\r\nimport { Card, CardHeader, Divider, Grid, TextField, Box, CardContent, Button, InputLabel } from '@mui/material';\r\nimport { connect } from 'react-redux'\r\nimport { BiPlusMedical, BiEdit } from 'react-icons/bi';\r\nimport Stack from '@mui/material/Stack';\r\nimport { GiCancel } from 'react-icons/gi'\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { Image } from 'cloudinary-react';\r\nimport axios from 'axios';\r\nimport '../../css/GoodManager.css';\r\nimport GoodImage from './goodExample.jpg';\r\nimport AddTypeModal from './AddTypeModal';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport { AiFillPlusCircle} from \"react-icons/ai\";\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport ConfirmModal from './ConfirmModal';\r\n\r\nvar productTypes =[];\r\nvar listTypeInfor=[];\r\n// typeSet chứa id của các cái type\r\nvar typeSet = [];\r\n\r\nconst StyledTextField = withStyles((theme) => ({\r\n    root: {\r\n      \"& .MuiInputBase-root\": {\r\n        height: 36,\r\n        \"& input\": {\r\n          textAlign: \"right\",\r\n          marginLeft: '4px',\r\n        }\r\n      }\r\n    }\r\n  }))(TextField);\r\n\r\nclass UpdateGoodModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            goodID : \"\",\r\n            change: false,\r\n            imageSelect: \"null\",\r\n            type:'none',\r\n            url: 'http://res.cloudinary.com/databaseimg/image/upload/v1634117795/ubvxisehhpvnu2lbqmeg.png',\r\n        }; \r\n        typeSet = [];\r\n        this.loadInitialData();\r\n        this.loadAllType();\r\n        this.loadCurrentTypes();\r\n        \r\n    }\r\n    imgUrl='none';\r\n    goodID='';\r\n    importDate='';\r\n    name='';\r\n    imgUrl='';\r\n    quantity = 0;\r\n    remain = 0;\r\n    unit = \"\";\r\n    importPrice = \"\";\r\n    sellPrice = \"\";\r\n    expire =\"\";\r\n    finishUpImage = true;\r\n\r\n    async loadAllType() {\r\n        var result = [];\r\n        const data = {\r\n            token: localStorage.getItem('token'),\r\n            filter: {\r\n                \"_id.storeID\": this.props.infoUser.email,\r\n            }   \r\n        }\r\n\r\n        await axios.get(`http://localhost:5000/api/product/type`, \r\n        {\r\n            params: {...data}\r\n        })\r\n            .then(res => {\r\n                result = res.data.data;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                alert(err);\r\n            })\r\n        //Get data và lưu các tên Type vào bảng\r\n        listTypeInfor=[];\r\n        for(var i=0; i < result.length ; i++)\r\n        {\r\n            listTypeInfor.push(result[i]);\r\n        }\r\n        productTypes=[];\r\n        for(var i=0 ; i< listTypeInfor.length ; i ++)\r\n        {\r\n            productTypes.push(listTypeInfor[i].name);\r\n        }\r\n        this.setState({change: true});\r\n    }\r\n\r\n    async loadCurrentTypes() {\r\n        // Get hết các cái join của sản phẩm\r\n        var allJoinMatch = [];\r\n        const data1 = {\r\n            token: localStorage.getItem('token'),\r\n            filter: {\r\n                \"_id.storeID\": this.props.infoUser.email,\r\n                \"_id.productID\": this.goodID,\r\n            }   \r\n        }\r\n        await axios.get(`http://localhost:5000/api/product/join`, \r\n        {\r\n            params: {...data1}\r\n        })\r\n            .then(res => {\r\n                allJoinMatch = res.data.data;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                alert(err);\r\n            })\r\n        console.log(\"Các join\",allJoinMatch);\r\n        // Thêm vào trên cái bảng typeSet\r\n        for(var i = 0 ; i < allJoinMatch.length ; i ++)\r\n        {\r\n            typeSet.push(allJoinMatch[i]._id.typeID);\r\n        }\r\n        this.setState({change: !this.state.change});\r\n    }\r\n    getTypeNamebyTypeID (typeID) {\r\n        var typeName='';\r\n        for(var i = 0; i<listTypeInfor.length;i++)\r\n        {   \r\n            if(listTypeInfor[i]._id.typeID == typeID)\r\n            {\r\n                typeName = listTypeInfor[i].name;\r\n                break;\r\n            }\r\n        }\r\n        return typeName;\r\n    }\r\n\r\n    checkConstraint = () => {\r\n        // Kiểm tra các constraint ở đây coi thử ổn chưa\r\n        // Constraint 1: Check name\r\n        var productName =  document.querySelector('input[name=\"goodName\"]').value;\r\n        if(productName.length == 0)\r\n        {\r\n            alert(\"Tên sản phẩm không được trống\");\r\n            return false;\r\n        }\r\n        // Constraint 2: Check quantity\r\n        if(document.querySelector('input[name=\"goodQuantity\"]').value.length == 0)\r\n        {\r\n            alert(\"Số lượng sản phẩm không được trống\");\r\n            return false;\r\n        }\r\n        else if(parseInt(document.querySelector('input[name=\"goodQuantity\"]').value) <= 0) \r\n        {\r\n            alert('Số lượng sản phẩm phải lớn hơn 0');\r\n            return false;\r\n        }\r\n        // Constraint 3: check Unit\r\n        if(document.querySelector('input[name=\"unit\"]').value.length == 0)\r\n        {\r\n            alert('Đơn vị của sản phẩm không được trống');\r\n            return false;\r\n        }\r\n        // Constraint 4: Check import Price\r\n        if(document.querySelector('input[name=\"originalPrice\"]').value.length == 0)\r\n        {\r\n            alert(\"Giá nhập không được trống\");\r\n            return false;\r\n        }\r\n        else if(parseInt(document.querySelector('input[name=\"originalPrice\"]').value) <= 0) \r\n        {\r\n            alert('Giá nhập phải lớn hơn 0');\r\n            return false;\r\n        }\r\n        // Constraint 5: check sell Price\r\n        if(document.querySelector('input[name=\"sellPrice\"]').value.length == 0)\r\n        {\r\n            alert(\"Giá bán không được trống\");\r\n            return false;\r\n        }\r\n        else if(parseInt(document.querySelector('input[name=\"sellPrice\"]').value) <= 0) \r\n        {\r\n            alert('Giá bán phải lớn hơn 0');\r\n            return false;\r\n        }\r\n        // Constraint 6: Ngày nhập phải nhỏ  hơn ngày hết hạn và ngày hết hạn, ngày nhập phải khác null\r\n        if (\r\n            (\r\n                new Date(document.querySelector('input[name=\"importDate\"]').value).getTime()\r\n                - \r\n                new Date(document.querySelector('input[name=\"expiredDate\"]').value).getTime()\r\n            ) >= 0\r\n        )\r\n        {\r\n            alert('Không thể nhập hàng hết hạn');\r\n            return false;\r\n        }\r\n        // Constraint 7: Check giá gốc nhỏ hơn giá bán\r\n        if(\r\n            parseInt(document.querySelector('input[name=\"sellPrice\"]').value) \r\n            - \r\n            parseInt(document.querySelector('input[name=\"originalPrice\"]').value) <=0\r\n            ) \r\n        {\r\n            alert('Giá bán phải lớn hơn giá gốc');\r\n            return false;\r\n        }\r\n        // Constraint 8: check xem đã  up ảnh lên xong chưa\r\n        if(this.finishUpImage == false)\r\n        {\r\n            alert('Ảnh chưa được upload xong');\r\n            return false;\r\n        }\r\n        alert('Constraint đã check đầy đủ');\r\n        return true;\r\n    }\r\n    async updateGood() {\r\n        var isContinue = this.checkConstraint();\r\n        if(!isContinue)\r\n        {\r\n            return;\r\n        }\r\n        this.props.changeUpdateGoodStatus();\r\n        var productInfo = this.props.infoUpdate;\r\n        const data = {\r\n            token: localStorage.getItem('token'),\r\n            product: {\r\n                _id: {\r\n                    productID: document.querySelector('input[name=\"goodID\"]').value,\r\n                    importDate: productInfo._id.importDate,\r\n                    storeID: this.props.infoUser.email,\r\n                },\r\n                name: this.name,\r\n                quantity: this.quantity,\r\n                // remain: document.querySelector('input[name=\"goodQuantity\"]').value,\r\n                importPrice: document.querySelector('input[name=\"originalPrice\"]').value,\r\n                sellPrice: document.querySelector('input[name=\"sellPrice\"]').value,\r\n                expires: document.querySelector('input[name=\"expiredDate\"]').value,\r\n                imgUrl: this.imgUrl,\r\n                unit: document.querySelector('input[name=\"unit\"]').value,\r\n            }\r\n        }\r\n        console.log(\"Updategood\",data);\r\n        axios.put(`http://localhost:5000/api/product`, data)\r\n            .then(res => {\r\n                console.log(\"Update success\");\r\n                alert('Đã update thành công sản phẩm')\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n        // Get hết các cái join của sản phẩm\r\n        var allJoinMatch = [];\r\n        const data1 = {\r\n            token: localStorage.getItem('token'),\r\n            filter: {\r\n                \"_id.storeID\": this.props.infoUser.email,\r\n                \"_id.productID\": this.goodID,\r\n            }   \r\n        }\r\n        await axios.get(`http://localhost:5000/api/product/join`, \r\n        {\r\n            params: {...data1}\r\n        })\r\n            .then(res => {\r\n                allJoinMatch = res.data.data;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                alert(err);\r\n            })\r\n        console.log(allJoinMatch);\r\n        // Xoá các join liên quan đến sản phẩm\r\n        var allProductJoin = [];\r\n        for(var i = 0 ; i < allJoinMatch.length; i++)\r\n        {\r\n            allProductJoin.push({\r\n                productID: this.goodID,\r\n                typeID: allJoinMatch[i]._id.typeID,\r\n                importDate: allJoinMatch[i]._id.importDate,\r\n                storeID: this.props.infoUser.email,\r\n            });\r\n        }\r\n        const dataJoin = {\r\n            token: localStorage.getItem('token'),\r\n            productJoinTypes: allProductJoin,      \r\n        }\r\n\r\n        console.log(dataJoin);\r\n\r\n        await axios.delete(`http://localhost:5000/api/product/join`,{data: dataJoin})\r\n            .then(res => {\r\n                console.log(\"delete join success\");\r\n            })\r\n            .catch(err => {\r\n                alert(err);\r\n            })\r\n        // Thêm các cái hiện tại\r\n        // Giờ thêm nhiều type thì phải làm cái này nhiều lần\r\n        for(var i = 0 ; i < typeSet.length ; i++)\r\n        {\r\n            const data1 = {\r\n                token: localStorage.getItem('token'),\r\n                productJoinType: {\r\n                    _id : {\r\n                        productID: this.goodID,\r\n                        typeID: typeSet[i], \r\n                        importDate: productInfo._id.importDate,\r\n                        storeID: this.props.infoUser.email,\r\n                    }\r\n                }\r\n            }\r\n            axios.post(`http://localhost:5000/api/product/join`, data1)\r\n                .then(res => {\r\n                    console.log(\"lưu vô bảng join thành công\");\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    cancel = () => {\r\n        this.props.changeUpdateGoodStatus();\r\n    }\r\n\r\n    loadInitialData = () => {\r\n        // Load các dữ liệu ban đầu của form ở đây để mà update nhưng mà bị lỗi 401 mẹ\r\n        //Xử lý sampleData\r\n        var productInfo = this.props.infoUpdate;\r\n        console.log(this.props.infoUpdate);\r\n\r\n        this.goodID = (productInfo._id.productID == null) ? '' : productInfo._id.productID;\r\n        this.importDate = productInfo._id.importDate;\r\n        this.importDate = this.importDate == null ? '' :this.importDate.substring(0, this.importDate.indexOf('T'));\r\n        this.name = productInfo.name == null ? '' : productInfo.name;\r\n        this.imgUrl = productInfo.imgUrl == null ? '' : productInfo.imgUrl;\r\n        this.quantity = productInfo.quantity == null ? '' : productInfo.quantity;\r\n        // this.remain = productInfo.remain;\r\n        this.unit = productInfo.unit == null ? '' : productInfo.unit;\r\n        this.importPrice = productInfo.importPrice == null ? '' : productInfo.importPrice;\r\n        this.sellPrice = productInfo.sellPrice == null ? '' : productInfo.sellPrice;\r\n        this.expire = productInfo.expires; //substring(0,productInfo.expire.indexOf('T'));\r\n        this.expire = this.expire == null ? '' :this.expire.substring(0, this.expire.indexOf('T'));\r\n        console.log(\"this.expire\",this.expire );\r\n        this.setState({change: !this.state.change});\r\n    }\r\n\r\n    profileImageChange = (fileChangeEvent) => {\r\n        this.setState({\r\n            imageSelect: fileChangeEvent.target.files[0],\r\n        })\r\n        this.finishUpImage = false;\r\n        const file = fileChangeEvent.target.files[0];\r\n        const { type } = file;\r\n        if (!(type.endsWith('jpeg') || type.endsWith('png') || type.endsWith('jpg') || type.endsWith('gif'))) {\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append(\"file\", fileChangeEvent.target.files[0])\r\n            formData.append(\"upload_preset\", \"qqqhcaa3\");\r\n            axios.post(`https://api.cloudinary.com/v1_1/databaseimg/image/upload`, formData)\r\n                .then(res => {\r\n                    this.imgUrl=res.data.url;\r\n                    this.setState({\r\n                        change: 'true'\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    console.log(\"Thất bại\");\r\n                })\r\n        }\r\n        this.finishUpImage = true;\r\n    }\r\n\r\n    changeName = (e) => {\r\n        this.name = e.target.value;\r\n    }\r\n\r\n    changeValue = (e, variable) =>\r\n    {\r\n        if(variable=='quantity')\r\n        {\r\n            this.quantity = e.target.value;\r\n        }\r\n    }\r\n\r\n    foundTypeInSet(typeID) {\r\n        for(var i = 0 ; i < typeSet.length; i++)\r\n        {\r\n            if(typeSet[i]==typeID._id.typeID) return true;\r\n        }\r\n        return false;\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <form style={{ zIndex: '10', width: '60%', justifyContent: 'center', marginTop: '80px'}} autoComplete=\"off\" noValidate>\r\n                <Card>\r\n                    <CardHeader style={{ color: 'blue', backgroundColor: '#efeeef' , textAlign: 'center'}} title=\"UPDATE GOOD\" />\r\n                        <div \r\n                        style={{ \r\n                            width: '100%', backgroundColor: 'rgb(221,235,255)'   \r\n                        }}\r\n                    >   \r\n                    <Grid className=\"import-container\" container >\r\n                        <Grid item md={12}  \r\n                            style={{\r\n                                display: 'flex', \r\n                                justifyContent:'center', \r\n                                flexDirection:'column',\r\n                                alignItems:'center',\r\n                                marginTop: '0px'\r\n                            }}\r\n                        >   \r\n                            <label className=\"profile-header__avatar\" for=\"profile-header-update-avatar\" style={{ overflow: 'hidden' }}>\r\n                                <Image style={{width: '150px',height: '150px' }} cloudName=\"databaseimg\" publicId={this.imgUrl=='none' ? 'http://res.cloudinary.com/databaseimg/image/upload/v1634358564/b9wj5lcklxitjglymxqh.png' : this.imgUrl}></Image>\r\n                            </label>\r\n                            {/* Ẩn đi */}\r\n                            <input id=\"profile-header-update-avatar\" type=\"file\" style={{ display: 'none' }} accept=\"image/png, image/jpeg\" onChange={(e) => this.profileImageChange(e)}></input>\r\n                        </Grid>\r\n                        <Grid item md={12}>\r\n\r\n                            <Card \r\n                            >\r\n                                \r\n                                <Grid container md={12}>\r\n                                    <Grid item md={6} \r\n                                        className='input-item'\r\n                                    >\r\n                                        <div \r\n                                            className=\"input-label\"\r\n                                            style={{\r\n                                                width: '116px'\r\n                                            }}\r\n                                        >\r\n                                            ID\r\n                                        </div>\r\n                                        <StyledTextField\r\n                                            classname='input-box' \r\n                                            type=\"text\" \r\n                                            // class=\"input-val\" \r\n                                            style = {{width: '100%'}} \r\n                                            fullWidth \r\n                                            size=\"small\" \r\n                                            name=\"goodID\" \r\n                                            variant=\"outlined\" \r\n                                            value={this.goodID}\r\n                                            readOnly={true}\r\n                                            disabled={true}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={6} \r\n                                        className='input-item'\r\n                                        style={{\r\n                                            marginLeft: 0,\r\n                                            paddingLeft: 0\r\n                                        }}\r\n                                    >\r\n                                        <div className=\"input-label\" style={{width: 128}}>Import Date</div>\r\n                                        <StyledTextField\r\n                                            classname='input-box'   \r\n                                            type=\"date\" \r\n                                            style = {{width: '68%'}} \r\n                                            fullWidth\r\n                                            name=\"importDate\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            defaultValue={this.importDate}\r\n                                            readOnly={true}\r\n                                            disabled={true}\r\n                                        />\r\n                                    </Grid>\r\n                                    \r\n                                    <Grid item md={6} \r\n                                        className='input-item'\r\n                                    >\r\n                                        <div className=\"input-label\"style={{width: '114px'}}>Name</div>\r\n                                        <StyledTextField\r\n                                            classname='input-box'   \r\n                                            type=\"text\" \r\n                                            // class=\"input-val\" \r\n                                            style = {{width: '100%'}} \r\n                                            fullWidth\r\n                                            size=\"small\"\r\n                                            name=\"goodName\" \r\n                                            variant=\"outlined\"\r\n                                            defaultValue={this.name}\r\n                                            onChange={(e) => this.changeName(e)} \r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={3}\r\n                                        className='input-item'\r\n                                        style={{padding: '0px', marginLeft: '0px'}}\r\n                                    >\r\n                                        <div \r\n                                            className=\"input-label\" \r\n                                            style={{width: '100px'}}\r\n                                        >\r\n                                            Quantity\r\n                                        </div>\r\n                                        <StyledTextField\r\n                                            style = {{width: '60%'}} \r\n                                            fullWidth\r\n                                            name=\"goodQuantity\" \r\n                                            variant=\"outlined\"\r\n                                            type=\"number\" \r\n                                            defaultValue={this.quantity}\r\n                                            onChange={(e) => this.changeValue(e, 'quantity')}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={3}\r\n                                        className='input-item'\r\n                                        style={{\r\n                                            paddingRight: 24\r\n                                        }}\r\n                                    >\r\n                                        <div \r\n                                            className=\"input-label\"\r\n                                            style={{\r\n                                                marginLeft: 0,\r\n                                                paddingLeft: 4\r\n                                            }}\r\n                                        >\r\n                                            Unit\r\n                                        </div>\r\n                                        <StyledTextField\r\n                                            classname='input-box'\r\n                                            style = {{width: '100%', marginLeft: '4px'}} \r\n                                            fullWidth\r\n                                            variant=\"outlined\"\r\n                                            type=\"text\" \r\n                                            name=\"unit\" \r\n                                            defaultValue={this.unit}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={6}\r\n                                        className='input-item'\r\n                                    >\r\n                                        <div className=\"input-label\" style={{width: 128}}>Original Price</div>\r\n                                        <StyledTextField\r\n                                            classname='input-box'\r\n                                            style = {{width: '60%', marginLeft: '4px', marginRight:'8px'}} \r\n                                            fullWidth\r\n                                            name=\"originalPrice\" \r\n                                            variant=\"outlined\"\r\n                                            type=\"number\"\r\n                                            defaultValue={this.importPrice}\r\n                                        />\r\n                                        đ\r\n                                    </Grid>\r\n                                    <Grid item md={6}\r\n                                        className='input-item'\r\n                                        style={{padding: '0px', marginLeft: '0px', paddingRight: 24}}\r\n                                    >\r\n                                        <div \r\n                                            className=\"input-label\"\r\n                                            style={{width: '96px'}}\r\n                                        >\r\n                                            Sell Price\r\n                                        </div>\r\n                                        <StyledTextField\r\n                                            classname='input-box'\r\n                                            style = {{width: '80%', marginLeft: '4px',marginRight:'8px'}} \r\n                                            fullWidth\r\n                                            name=\"sellPrice\" \r\n                                            variant=\"outlined\"\r\n                                            type=\"number\" \r\n                                            defaultValue={this.sellPrice}\r\n                                        />\r\n                                        đ\r\n                                    </Grid>\r\n                                    <Grid item md={7} \r\n                                        className='input-item'\r\n                                    >\r\n                                        <div className=\"input-label\" style={{width: 132}}>Expired Date</div>\r\n                                        <StyledTextField\r\n                                            classname='input-box'   \r\n                                            type=\"date\" \r\n                                            style = {{width: '70%'}} \r\n                                            fullWidth\r\n                                            size=\"small\"\r\n                                            name=\"expiredDate\" \r\n                                            variant=\"outlined\"\r\n                                            defaultValue={this.expire} \r\n                                        />\r\n                                        {/* <StyledTextField\r\n                                            classname='input-box'\r\n                                            style = {{width: '80%', marginLeft: '4px',marginRight:'8px'}} \r\n                                            fullWidth\r\n                                            name=\"sellPrice\" \r\n                                            variant=\"outlined\"\r\n                                            value={this.expire}\r\n                                        /> */}\r\n                                    </Grid>\r\n                                    <Grid item md={10}\r\n                                        className='input-item'\r\n                                    >\r\n                                        <div \r\n                                            className=\"input-label\"\r\n                                            style={{width:132}}\r\n                                        >\r\n                                            Product Type\r\n                                        </div>\r\n                                        <FormControl sx={{ minWidth: 120 }}>\r\n                                        {/* <InputLabel id=\"select-filled-label\">Type</InputLabel> */}\r\n                                        <Select\r\n                                            value={this.state.type}\r\n                                            onChange={(event) => {\r\n                                                this.setState({type: event.target.value});\r\n                                                if(!typeSet.includes(event.target.value))\r\n                                                {\r\n                                                    typeSet.push(event.target.value);\r\n                                                }\r\n                                            }}\r\n                                            style={{\r\n                                                height: 36,\r\n                                            }}\r\n                                        >\r\n                                            {\r\n                                                listTypeInfor.length== 0 ? <MenuItem value={'none'}>None</MenuItem>\r\n                                                : listTypeInfor.map((type) =>\r\n                                                    ! this.foundTypeInSet(type) \r\n                                                    ? <MenuItem value={type._id.typeID}>{type.name}</MenuItem>\r\n                                                    : null\r\n                                                )\r\n                                            }   \r\n                                        </Select> \r\n                                    </FormControl>\r\n                                        <Button onClick={() => this.handleAdd()}>\r\n                                            <AiFillPlusCircle\r\n                                                size={28}\r\n                                                style={{\r\n                                                    fontSize: 28,\r\n                                                    margin: 0,\r\n                                                    padding: 0,\r\n                                                    width: 28,\r\n                                                    height: 28\r\n                                                }}    \r\n                                            />\r\n                                        </Button>\r\n                                        <div className='all-type-container'>\r\n                                            {\r\n                                                Array.from(typeSet).map((type) =>\r\n                                                    <div item md={7} className='type-container'>\r\n                                                        <CancelIcon\r\n                                                            className='close-icon'\r\n                                                            size={10}\r\n                                                            onClick={() => {\r\n                                                                typeSet = typeSet.filter(function(item) {\r\n                                                                    return item != type;\r\n                                                                })\r\n                                                                console.log(typeSet);\r\n                                                                this.setState({type: 'none'});\r\n                                                            }}\r\n                                                \r\n                                                        />\r\n                                                        <span className='type-title'>\r\n                                                            {this.getTypeNamebyTypeID(type)}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                    \r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </Grid>\r\n                                    {/* <Grid item md={10}\r\n                                        className='input-item'\r\n                                    >\r\n\r\n                                    </Grid> */}\r\n                                    <Grid item md={2}\r\n                                        className='input-item'\r\n                                    >\r\n                                        <Button variant=\"contained\" onClick={() => this.updateGood()}>\r\n                                            UPDATE\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item sm={12} md={12} >\r\n                            \r\n                        </Grid>\r\n                    </Grid> \r\n                        \r\n                    {this.props.addTypeStatus ? (\r\n                        <div className=\"modal-add\">\r\n                            <div onClick={() => {this.props.changeAddTypeStatus();}} className=\"modal-overlay\"></div>\r\n                            <AddTypeModal></AddTypeModal>\r\n                        </div>\r\n                    ): null}\r\n                    {this.props.confirmStatus ? (\r\n                        <div className=\"modal-add\">\r\n                            <div onClick={() => {this.props.changeConfirmStatus();}} className=\"modal-overlay\"></div>\r\n                            <ConfirmModal></ConfirmModal>\r\n                        </div>\r\n                    ): null}\r\n                </div>\r\n                </Card>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        updateGoodStatus: state.updateGoodStatus,\r\n        confirmStatus: state.confirmStatus,\r\n        infoUpdate: state.infoUpdate,\r\n        infoUser: state.infoUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeUpdateGoodStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_UPDATE_GOOD_STATUS\",\r\n            });\r\n        },\r\n        changeConfirmStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_CONFIRM_STATUS\",\r\n            });\r\n        },\r\n        setUpdateConfirm: () => {\r\n            dispatch({\r\n                type: \"SET_CONFIRM_UPDATE_GOOD\",\r\n            }); \r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateGoodModal);\r\n\r\n               ","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\GoodTable.js",["744","745","746","747"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodPartials\\TableRow.js",["748","749","750","751","752"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\RecieptManager\\SearchReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\RecieptManager\\SearchReceipt.js",["753","754","755"],"import React, { useState } from 'react';\r\nimport { BiSearchAlt } from 'react-icons/bi'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\n\r\nfunction SearchReceipt(props) {\r\n    const search = useSelector(state => state.search)\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    React.useEffect(() => {\r\n        dispatch({\r\n            type: \"RESET_SEARCH\",\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"search-customize\" style={{ borderRadius: '6px', backgroundColor: 'white', justifyContent: 'center', display: 'flex', marginBottom: '10px', padding: '10px' }}>\r\n            <BiSearchAlt style={{ fontSize: '1.6rem', marginRight: '10px', marginLeft: '10px' }}></BiSearchAlt>\r\n            <input onChange={(e) => {dispatch({type:\"CHANGE_SEARCH\", object: e.target.value })}} type=\"text\" style={{ width: '100%', outline: 'none', border: 'none' }} placeholder=\"Theo mã hóa đơn\"></input>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchReceipt;","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\addNextWeekTimeKeepingStatus.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\nextWeekTimeKeepingReducer.js",["756"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\listShiftAssignReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\updateNextWeekTimeKeepingStatus.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\addTimeKeepingStatus.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\updateNextWeekTimeKeepingValue.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\listTimeKeepingReducer.js",["757","758","759"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\updateTimeKeepingStatus.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Employee\\updateTimeKeeperValue.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\TimekeepingTable.js",["760","761","762","763","764","765","766"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\AddTimeKeeperModal.js",["767","768","769","770","771","772","773","774","775","776","777","778","779","780"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\NoJobEmployee.js",["781","782","783","784","785","786"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\UpdateTimeKeepingModal.js",["787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\AddNextWeekTimeKeeping.js",["804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeePartials\\UpdateNextWeekTimeKeeping.js",["821","822","823","824","825","826","827","828","829","830","831","832","833"],{"ruleId":"834","replacedBy":"835"},{"ruleId":"836","replacedBy":"837"},{"ruleId":"838","severity":1,"message":"839","line":10,"column":10,"nodeType":"840","messageId":"841","endLine":10,"endColumn":24},{"ruleId":"842","severity":1,"message":"843","line":13,"column":3,"nodeType":"844","messageId":"845","endLine":15,"endColumn":4},{"ruleId":"846","severity":1,"message":"847","line":5,"column":46,"nodeType":"848","messageId":"849","endLine":5,"endColumn":48},{"ruleId":"846","severity":1,"message":"850","line":40,"column":45,"nodeType":"848","messageId":"851","endLine":40,"endColumn":47},{"ruleId":"846","severity":1,"message":"847","line":47,"column":48,"nodeType":"848","messageId":"849","endLine":47,"endColumn":50},{"ruleId":"846","severity":1,"message":"850","line":21,"column":45,"nodeType":"848","messageId":"851","endLine":21,"endColumn":47},{"ruleId":"852","severity":1,"message":"853","line":38,"column":30,"nodeType":"854","messageId":"855","endLine":38,"endColumn":32},{"ruleId":"856","severity":1,"message":"857","line":56,"column":25,"nodeType":"840","messageId":"858","endLine":56,"endColumn":33},{"ruleId":"856","severity":1,"message":"859","line":57,"column":29,"nodeType":"840","messageId":"858","endLine":57,"endColumn":30},{"ruleId":"860","severity":1,"message":"861","line":97,"column":28,"nodeType":"862","messageId":"863","endLine":97,"endColumn":29,"suggestions":"864"},{"ruleId":"860","severity":1,"message":"861","line":97,"column":44,"nodeType":"862","messageId":"863","endLine":97,"endColumn":45,"suggestions":"865"},{"ruleId":"866","severity":1,"message":"867","line":282,"column":9,"nodeType":"868","messageId":"855","endLine":282,"endColumn":25},{"ruleId":"838","severity":1,"message":"869","line":6,"column":8,"nodeType":"840","messageId":"841","endLine":6,"endColumn":15},{"ruleId":"860","severity":1,"message":"861","line":97,"column":28,"nodeType":"862","messageId":"863","endLine":97,"endColumn":29,"suggestions":"870"},{"ruleId":"860","severity":1,"message":"861","line":97,"column":44,"nodeType":"862","messageId":"863","endLine":97,"endColumn":45,"suggestions":"871"},{"ruleId":"838","severity":1,"message":"872","line":9,"column":10,"nodeType":"840","messageId":"841","endLine":9,"endColumn":19},{"ruleId":"838","severity":1,"message":"873","line":14,"column":8,"nodeType":"840","messageId":"841","endLine":14,"endColumn":13},{"ruleId":"838","severity":1,"message":"869","line":13,"column":8,"nodeType":"840","messageId":"841","endLine":13,"endColumn":15},{"ruleId":"860","severity":1,"message":"861","line":106,"column":30,"nodeType":"862","messageId":"863","endLine":106,"endColumn":31,"suggestions":"874"},{"ruleId":"860","severity":1,"message":"861","line":106,"column":46,"nodeType":"862","messageId":"863","endLine":106,"endColumn":47,"suggestions":"875"},{"ruleId":"838","severity":1,"message":"876","line":9,"column":11,"nodeType":"840","messageId":"841","endLine":9,"endColumn":32},{"ruleId":"838","severity":1,"message":"877","line":95,"column":15,"nodeType":"840","messageId":"841","endLine":95,"endColumn":30},{"ruleId":"878","severity":1,"message":"879","line":111,"column":29,"nodeType":"880","endLine":111,"endColumn":161},{"ruleId":"852","severity":1,"message":"881","line":117,"column":45,"nodeType":"854","messageId":"855","endLine":117,"endColumn":47},{"ruleId":"852","severity":1,"message":"881","line":130,"column":45,"nodeType":"854","messageId":"855","endLine":130,"endColumn":47},{"ruleId":"882","severity":1,"message":"883","line":196,"column":25,"nodeType":"880","endLine":201,"endColumn":26},{"ruleId":"882","severity":1,"message":"884","line":205,"column":25,"nodeType":"880","endLine":205,"endColumn":136},{"ruleId":"838","severity":1,"message":"885","line":2,"column":10,"nodeType":"840","messageId":"841","endLine":2,"endColumn":18},{"ruleId":"838","severity":1,"message":"886","line":2,"column":8,"nodeType":"840","messageId":"841","endLine":2,"endColumn":12},{"ruleId":"838","severity":1,"message":"887","line":3,"column":8,"nodeType":"840","messageId":"841","endLine":3,"endColumn":13},{"ruleId":"838","severity":1,"message":"888","line":4,"column":8,"nodeType":"840","messageId":"841","endLine":4,"endColumn":17},{"ruleId":"838","severity":1,"message":"889","line":5,"column":8,"nodeType":"840","messageId":"841","endLine":5,"endColumn":22},{"ruleId":"838","severity":1,"message":"890","line":7,"column":10,"nodeType":"840","messageId":"841","endLine":7,"endColumn":22},{"ruleId":"838","severity":1,"message":"891","line":14,"column":5,"nodeType":"840","messageId":"841","endLine":14,"endColumn":11},{"ruleId":"838","severity":1,"message":"892","line":23,"column":5,"nodeType":"840","messageId":"841","endLine":23,"endColumn":20},{"ruleId":"838","severity":1,"message":"893","line":25,"column":8,"nodeType":"840","messageId":"841","endLine":25,"endColumn":23},{"ruleId":"838","severity":1,"message":"894","line":45,"column":10,"nodeType":"840","messageId":"841","endLine":45,"endColumn":21},{"ruleId":"838","severity":1,"message":"895","line":97,"column":5,"nodeType":"840","messageId":"841","endLine":97,"endColumn":15},{"ruleId":"838","severity":1,"message":"896","line":98,"column":5,"nodeType":"840","messageId":"841","endLine":98,"endColumn":18},{"ruleId":"838","severity":1,"message":"897","line":100,"column":5,"nodeType":"840","messageId":"841","endLine":100,"endColumn":9},{"ruleId":"838","severity":1,"message":"898","line":101,"column":5,"nodeType":"840","messageId":"841","endLine":101,"endColumn":16},{"ruleId":"852","severity":1,"message":"853","line":466,"column":75,"nodeType":"854","messageId":"855","endLine":466,"endColumn":77},{"ruleId":"838","severity":1,"message":"899","line":6,"column":10,"nodeType":"840","messageId":"841","endLine":6,"endColumn":20},{"ruleId":"838","severity":1,"message":"900","line":6,"column":30,"nodeType":"840","messageId":"841","endLine":6,"endColumn":35},{"ruleId":"838","severity":1,"message":"901","line":11,"column":8,"nodeType":"840","messageId":"841","endLine":11,"endColumn":17},{"ruleId":"838","severity":1,"message":"902","line":15,"column":8,"nodeType":"840","messageId":"841","endLine":15,"endColumn":22},{"ruleId":"838","severity":1,"message":"903","line":16,"column":8,"nodeType":"840","messageId":"841","endLine":16,"endColumn":22},{"ruleId":"838","severity":1,"message":"904","line":17,"column":8,"nodeType":"840","messageId":"841","endLine":17,"endColumn":28},{"ruleId":"838","severity":1,"message":"905","line":20,"column":10,"nodeType":"840","messageId":"841","endLine":20,"endColumn":29},{"ruleId":"852","severity":1,"message":"881","line":185,"column":31,"nodeType":"854","messageId":"855","endLine":185,"endColumn":33},{"ruleId":"852","severity":1,"message":"881","line":192,"column":78,"nodeType":"854","messageId":"855","endLine":192,"endColumn":80},{"ruleId":"852","severity":1,"message":"881","line":206,"column":70,"nodeType":"854","messageId":"855","endLine":206,"endColumn":72},{"ruleId":"852","severity":1,"message":"881","line":214,"column":79,"nodeType":"854","messageId":"855","endLine":214,"endColumn":81},{"ruleId":"852","severity":1,"message":"881","line":227,"column":75,"nodeType":"854","messageId":"855","endLine":227,"endColumn":77},{"ruleId":"852","severity":1,"message":"881","line":263,"column":31,"nodeType":"854","messageId":"855","endLine":263,"endColumn":33},{"ruleId":"856","severity":1,"message":"859","line":299,"column":17,"nodeType":"840","messageId":"858","endLine":299,"endColumn":18},{"ruleId":"852","severity":1,"message":"881","line":351,"column":44,"nodeType":"854","messageId":"855","endLine":351,"endColumn":46},{"ruleId":"852","severity":1,"message":"881","line":363,"column":26,"nodeType":"854","messageId":"855","endLine":363,"endColumn":28},{"ruleId":"852","severity":1,"message":"881","line":387,"column":140,"nodeType":"854","messageId":"855","endLine":387,"endColumn":142},{"ruleId":"852","severity":1,"message":"881","line":579,"column":84,"nodeType":"854","messageId":"855","endLine":579,"endColumn":86},{"ruleId":"852","severity":1,"message":"853","line":610,"column":77,"nodeType":"854","messageId":"855","endLine":610,"endColumn":79},{"ruleId":"838","severity":1,"message":"906","line":8,"column":8,"nodeType":"840","messageId":"841","endLine":8,"endColumn":19},{"ruleId":"838","severity":1,"message":"907","line":2,"column":27,"nodeType":"840","messageId":"841","endLine":2,"endColumn":33},{"ruleId":"846","severity":1,"message":"850","line":169,"column":89,"nodeType":"848","messageId":"851","endLine":169,"endColumn":91},{"ruleId":"838","severity":1,"message":"908","line":2,"column":43,"nodeType":"840","messageId":"841","endLine":2,"endColumn":52},{"ruleId":"838","severity":1,"message":"909","line":4,"column":10,"nodeType":"840","messageId":"841","endLine":4,"endColumn":23},{"ruleId":"838","severity":1,"message":"910","line":9,"column":8,"nodeType":"840","messageId":"841","endLine":9,"endColumn":20},{"ruleId":"856","severity":1,"message":"859","line":137,"column":17,"nodeType":"840","messageId":"858","endLine":137,"endColumn":18},{"ruleId":"856","severity":1,"message":"911","line":23,"column":21,"nodeType":"840","messageId":"858","endLine":23,"endColumn":29},{"ruleId":"856","severity":1,"message":"912","line":24,"column":21,"nodeType":"840","messageId":"858","endLine":24,"endColumn":28},{"ruleId":"856","severity":1,"message":"913","line":34,"column":21,"nodeType":"840","messageId":"858","endLine":34,"endColumn":27},{"ruleId":"856","severity":1,"message":"914","line":35,"column":21,"nodeType":"840","messageId":"858","endLine":35,"endColumn":26},{"ruleId":"838","severity":1,"message":"873","line":2,"column":80,"nodeType":"840","messageId":"841","endLine":2,"endColumn":85},{"ruleId":"838","severity":1,"message":"915","line":4,"column":25,"nodeType":"840","messageId":"841","endLine":4,"endColumn":31},{"ruleId":"838","severity":1,"message":"916","line":6,"column":20,"nodeType":"840","messageId":"841","endLine":6,"endColumn":33},{"ruleId":"852","severity":1,"message":"881","line":52,"column":45,"nodeType":"854","messageId":"855","endLine":52,"endColumn":47},{"ruleId":"852","severity":1,"message":"881","line":83,"column":37,"nodeType":"854","messageId":"855","endLine":83,"endColumn":39},{"ruleId":"852","severity":1,"message":"881","line":85,"column":66,"nodeType":"854","messageId":"855","endLine":85,"endColumn":68},{"ruleId":"852","severity":1,"message":"881","line":96,"column":27,"nodeType":"854","messageId":"855","endLine":96,"endColumn":29},{"ruleId":"852","severity":1,"message":"881","line":117,"column":45,"nodeType":"854","messageId":"855","endLine":117,"endColumn":47},{"ruleId":"838","severity":1,"message":"917","line":4,"column":10,"nodeType":"840","messageId":"841","endLine":4,"endColumn":14},{"ruleId":"838","severity":1,"message":"918","line":4,"column":43,"nodeType":"840","messageId":"841","endLine":4,"endColumn":54},{"ruleId":"846","severity":1,"message":"847","line":43,"column":39,"nodeType":"848","messageId":"849","endLine":43,"endColumn":41},{"ruleId":"846","severity":1,"message":"847","line":51,"column":39,"nodeType":"848","messageId":"849","endLine":51,"endColumn":41},{"ruleId":"846","severity":1,"message":"847","line":63,"column":39,"nodeType":"848","messageId":"849","endLine":63,"endColumn":41},{"ruleId":"919","severity":1,"message":"920","line":172,"column":8,"nodeType":"921","endLine":172,"endColumn":10,"suggestions":"922"},{"ruleId":"846","severity":1,"message":"847","line":52,"column":35,"nodeType":"848","messageId":"849","endLine":52,"endColumn":37},{"ruleId":"846","severity":1,"message":"850","line":462,"column":86,"nodeType":"848","messageId":"851","endLine":462,"endColumn":88},{"ruleId":"846","severity":1,"message":"850","line":481,"column":38,"nodeType":"848","messageId":"851","endLine":481,"endColumn":40},{"ruleId":"852","severity":1,"message":"881","line":485,"column":36,"nodeType":"854","messageId":"855","endLine":485,"endColumn":38},{"ruleId":"852","severity":1,"message":"881","line":485,"column":70,"nodeType":"854","messageId":"855","endLine":485,"endColumn":72},{"ruleId":"852","severity":1,"message":"881","line":485,"column":103,"nodeType":"854","messageId":"855","endLine":485,"endColumn":105},{"ruleId":"846","severity":1,"message":"850","line":492,"column":38,"nodeType":"848","messageId":"851","endLine":492,"endColumn":40},{"ruleId":"852","severity":1,"message":"881","line":496,"column":38,"nodeType":"854","messageId":"855","endLine":496,"endColumn":40},{"ruleId":"852","severity":1,"message":"881","line":496,"column":71,"nodeType":"854","messageId":"855","endLine":496,"endColumn":73},{"ruleId":"846","severity":1,"message":"850","line":503,"column":38,"nodeType":"848","messageId":"851","endLine":503,"endColumn":40},{"ruleId":"852","severity":1,"message":"881","line":507,"column":37,"nodeType":"854","messageId":"855","endLine":507,"endColumn":39},{"ruleId":"846","severity":1,"message":"850","line":514,"column":38,"nodeType":"848","messageId":"851","endLine":514,"endColumn":40},{"ruleId":"846","severity":1,"message":"847","line":529,"column":24,"nodeType":"848","messageId":"849","endLine":529,"endColumn":26},{"ruleId":"919","severity":1,"message":"923","line":542,"column":8,"nodeType":"921","endLine":542,"endColumn":71,"suggestions":"924"},{"ruleId":"838","severity":1,"message":"925","line":9,"column":19,"nodeType":"840","messageId":"841","endLine":9,"endColumn":27},{"ruleId":"838","severity":1,"message":"926","line":10,"column":12,"nodeType":"840","messageId":"841","endLine":10,"endColumn":16},{"ruleId":"838","severity":1,"message":"927","line":12,"column":11,"nodeType":"840","messageId":"841","endLine":12,"endColumn":17},{"ruleId":"838","severity":1,"message":"908","line":2,"column":43,"nodeType":"840","messageId":"841","endLine":2,"endColumn":52},{"ruleId":"838","severity":1,"message":"915","line":4,"column":25,"nodeType":"840","messageId":"841","endLine":4,"endColumn":31},{"ruleId":"838","severity":1,"message":"928","line":7,"column":8,"nodeType":"840","messageId":"841","endLine":7,"endColumn":13},{"ruleId":"842","severity":1,"message":"843","line":10,"column":5,"nodeType":"844","messageId":"845","endLine":12,"endColumn":6},{"ruleId":"929","severity":1,"message":"930","line":26,"column":9,"nodeType":"931","messageId":"932","endLine":32,"endColumn":10},{"ruleId":"933","severity":1,"message":"934","line":30,"column":13,"nodeType":"935","messageId":"936","endLine":31,"endColumn":67},{"ruleId":"846","severity":1,"message":"847","line":119,"column":35,"nodeType":"848","messageId":"849","endLine":119,"endColumn":37},{"ruleId":"846","severity":1,"message":"847","line":31,"column":43,"nodeType":"848","messageId":"849","endLine":31,"endColumn":45},{"ruleId":"846","severity":1,"message":"847","line":39,"column":43,"nodeType":"848","messageId":"849","endLine":39,"endColumn":45},{"ruleId":"846","severity":1,"message":"847","line":50,"column":43,"nodeType":"848","messageId":"849","endLine":50,"endColumn":45},{"ruleId":"838","severity":1,"message":"937","line":4,"column":10,"nodeType":"840","messageId":"841","endLine":4,"endColumn":14},{"ruleId":"838","severity":1,"message":"938","line":5,"column":8,"nodeType":"840","messageId":"841","endLine":5,"endColumn":24},{"ruleId":"838","severity":1,"message":"939","line":11,"column":3,"nodeType":"840","messageId":"841","endLine":11,"endColumn":7},{"ruleId":"838","severity":1,"message":"940","line":11,"column":9,"nodeType":"840","messageId":"841","endLine":11,"endColumn":17},{"ruleId":"838","severity":1,"message":"917","line":11,"column":19,"nodeType":"840","messageId":"841","endLine":11,"endColumn":23},{"ruleId":"852","severity":1,"message":"881","line":73,"column":36,"nodeType":"854","messageId":"855","endLine":73,"endColumn":38},{"ruleId":"852","severity":1,"message":"881","line":86,"column":44,"nodeType":"854","messageId":"855","endLine":86,"endColumn":46},{"ruleId":"852","severity":1,"message":"853","line":151,"column":87,"nodeType":"854","messageId":"855","endLine":151,"endColumn":89},{"ruleId":"838","severity":1,"message":"907","line":6,"column":72,"nodeType":"840","messageId":"841","endLine":6,"endColumn":78},{"ruleId":"838","severity":1,"message":"941","line":2,"column":28,"nodeType":"840","messageId":"841","endLine":2,"endColumn":35},{"ruleId":"838","severity":1,"message":"942","line":2,"column":54,"nodeType":"840","messageId":"841","endLine":2,"endColumn":57},{"ruleId":"838","severity":1,"message":"918","line":2,"column":59,"nodeType":"840","messageId":"841","endLine":2,"endColumn":70},{"ruleId":"838","severity":1,"message":"899","line":2,"column":80,"nodeType":"840","messageId":"841","endLine":2,"endColumn":90},{"ruleId":"852","severity":1,"message":"881","line":39,"column":68,"nodeType":"854","messageId":"855","endLine":39,"endColumn":70},{"ruleId":"852","severity":1,"message":"881","line":50,"column":28,"nodeType":"854","messageId":"855","endLine":50,"endColumn":30},{"ruleId":"852","severity":1,"message":"881","line":62,"column":29,"nodeType":"854","messageId":"855","endLine":62,"endColumn":31},{"ruleId":"852","severity":1,"message":"881","line":69,"column":28,"nodeType":"854","messageId":"855","endLine":69,"endColumn":30},{"ruleId":"852","severity":1,"message":"881","line":76,"column":26,"nodeType":"854","messageId":"855","endLine":76,"endColumn":28},{"ruleId":"852","severity":1,"message":"881","line":83,"column":31,"nodeType":"854","messageId":"855","endLine":83,"endColumn":33},{"ruleId":"852","severity":1,"message":"881","line":95,"column":26,"nodeType":"854","messageId":"855","endLine":95,"endColumn":28},{"ruleId":"852","severity":1,"message":"881","line":102,"column":28,"nodeType":"854","messageId":"855","endLine":102,"endColumn":30},{"ruleId":"852","severity":1,"message":"881","line":109,"column":25,"nodeType":"854","messageId":"855","endLine":109,"endColumn":27},{"ruleId":"852","severity":1,"message":"881","line":114,"column":30,"nodeType":"854","messageId":"855","endLine":114,"endColumn":32},{"ruleId":"852","severity":1,"message":"881","line":114,"column":56,"nodeType":"854","messageId":"855","endLine":114,"endColumn":58},{"ruleId":"852","severity":1,"message":"881","line":137,"column":35,"nodeType":"854","messageId":"855","endLine":137,"endColumn":37},{"ruleId":"852","severity":1,"message":"881","line":228,"column":127,"nodeType":"854","messageId":"855","endLine":228,"endColumn":129},{"ruleId":"838","severity":1,"message":"941","line":2,"column":28,"nodeType":"840","messageId":"841","endLine":2,"endColumn":35},{"ruleId":"838","severity":1,"message":"942","line":2,"column":54,"nodeType":"840","messageId":"841","endLine":2,"endColumn":57},{"ruleId":"838","severity":1,"message":"918","line":2,"column":59,"nodeType":"840","messageId":"841","endLine":2,"endColumn":70},{"ruleId":"838","severity":1,"message":"899","line":2,"column":80,"nodeType":"840","messageId":"841","endLine":2,"endColumn":90},{"ruleId":"838","severity":1,"message":"943","line":4,"column":10,"nodeType":"840","messageId":"841","endLine":4,"endColumn":15},{"ruleId":"838","severity":1,"message":"944","line":9,"column":5,"nodeType":"840","messageId":"841","endLine":9,"endColumn":17},{"ruleId":"838","severity":1,"message":"945","line":13,"column":5,"nodeType":"840","messageId":"841","endLine":13,"endColumn":12},{"ruleId":"852","severity":1,"message":"881","line":98,"column":23,"nodeType":"854","messageId":"855","endLine":98,"endColumn":25},{"ruleId":"852","severity":1,"message":"881","line":105,"column":68,"nodeType":"854","messageId":"855","endLine":105,"endColumn":70},{"ruleId":"856","severity":1,"message":"859","line":112,"column":17,"nodeType":"840","messageId":"858","endLine":112,"endColumn":18},{"ruleId":"852","severity":1,"message":"881","line":114,"column":74,"nodeType":"854","messageId":"855","endLine":114,"endColumn":76},{"ruleId":"852","severity":1,"message":"881","line":123,"column":28,"nodeType":"854","messageId":"855","endLine":123,"endColumn":30},{"ruleId":"852","severity":1,"message":"881","line":135,"column":29,"nodeType":"854","messageId":"855","endLine":135,"endColumn":31},{"ruleId":"852","severity":1,"message":"881","line":142,"column":28,"nodeType":"854","messageId":"855","endLine":142,"endColumn":30},{"ruleId":"852","severity":1,"message":"881","line":149,"column":26,"nodeType":"854","messageId":"855","endLine":149,"endColumn":28},{"ruleId":"852","severity":1,"message":"881","line":156,"column":31,"nodeType":"854","messageId":"855","endLine":156,"endColumn":33},{"ruleId":"852","severity":1,"message":"881","line":168,"column":26,"nodeType":"854","messageId":"855","endLine":168,"endColumn":28},{"ruleId":"852","severity":1,"message":"881","line":175,"column":28,"nodeType":"854","messageId":"855","endLine":175,"endColumn":30},{"ruleId":"852","severity":1,"message":"881","line":182,"column":25,"nodeType":"854","messageId":"855","endLine":182,"endColumn":27},{"ruleId":"852","severity":1,"message":"881","line":187,"column":30,"nodeType":"854","messageId":"855","endLine":187,"endColumn":32},{"ruleId":"852","severity":1,"message":"881","line":187,"column":56,"nodeType":"854","messageId":"855","endLine":187,"endColumn":58},{"ruleId":"852","severity":1,"message":"881","line":247,"column":34,"nodeType":"854","messageId":"855","endLine":247,"endColumn":36},{"ruleId":"838","severity":1,"message":"899","line":3,"column":40,"nodeType":"840","messageId":"841","endLine":3,"endColumn":50},{"ruleId":"838","severity":1,"message":"909","line":6,"column":10,"nodeType":"840","messageId":"841","endLine":6,"endColumn":23},{"ruleId":"838","severity":1,"message":"915","line":6,"column":25,"nodeType":"840","messageId":"841","endLine":6,"endColumn":31},{"ruleId":"838","severity":1,"message":"946","line":7,"column":8,"nodeType":"840","messageId":"841","endLine":7,"endColumn":13},{"ruleId":"838","severity":1,"message":"947","line":8,"column":10,"nodeType":"840","messageId":"841","endLine":8,"endColumn":18},{"ruleId":"838","severity":1,"message":"948","line":9,"column":8,"nodeType":"840","messageId":"841","endLine":9,"endColumn":14},{"ruleId":"838","severity":1,"message":"940","line":10,"column":8,"nodeType":"840","messageId":"841","endLine":10,"endColumn":16},{"ruleId":"838","severity":1,"message":"949","line":11,"column":8,"nodeType":"840","messageId":"841","endLine":11,"endColumn":19},{"ruleId":"838","severity":1,"message":"943","line":12,"column":10,"nodeType":"840","messageId":"841","endLine":12,"endColumn":15},{"ruleId":"838","severity":1,"message":"928","line":13,"column":8,"nodeType":"840","messageId":"841","endLine":13,"endColumn":13},{"ruleId":"838","severity":1,"message":"904","line":16,"column":8,"nodeType":"840","messageId":"841","endLine":16,"endColumn":28},{"ruleId":"838","severity":1,"message":"903","line":17,"column":8,"nodeType":"840","messageId":"841","endLine":17,"endColumn":22},{"ruleId":"838","severity":1,"message":"950","line":18,"column":8,"nodeType":"840","messageId":"841","endLine":18,"endColumn":18},{"ruleId":"838","severity":1,"message":"902","line":19,"column":8,"nodeType":"840","messageId":"841","endLine":19,"endColumn":22},{"ruleId":"838","severity":1,"message":"951","line":20,"column":10,"nodeType":"840","messageId":"841","endLine":20,"endColumn":26},{"ruleId":"838","severity":1,"message":"952","line":21,"column":8,"nodeType":"840","messageId":"841","endLine":21,"endColumn":18},{"ruleId":"838","severity":1,"message":"944","line":23,"column":5,"nodeType":"840","messageId":"841","endLine":23,"endColumn":17},{"ruleId":"838","severity":1,"message":"945","line":27,"column":5,"nodeType":"840","messageId":"841","endLine":27,"endColumn":12},{"ruleId":"838","severity":1,"message":"953","line":47,"column":7,"nodeType":"840","messageId":"841","endLine":47,"endColumn":22},{"ruleId":"852","severity":1,"message":"881","line":79,"column":41,"nodeType":"854","messageId":"855","endLine":79,"endColumn":43},{"ruleId":"852","severity":1,"message":"881","line":92,"column":50,"nodeType":"854","messageId":"855","endLine":92,"endColumn":52},{"ruleId":"838","severity":1,"message":"954","line":3,"column":10,"nodeType":"840","messageId":"841","endLine":3,"endColumn":24},{"ruleId":"838","severity":1,"message":"942","line":4,"column":10,"nodeType":"840","messageId":"841","endLine":4,"endColumn":13},{"ruleId":"838","severity":1,"message":"955","line":39,"column":5,"nodeType":"840","messageId":"841","endLine":39,"endColumn":10},{"ruleId":"838","severity":1,"message":"956","line":40,"column":5,"nodeType":"840","messageId":"841","endLine":40,"endColumn":12},{"ruleId":"838","severity":1,"message":"957","line":41,"column":5,"nodeType":"840","messageId":"841","endLine":41,"endColumn":13},{"ruleId":"838","severity":1,"message":"958","line":43,"column":5,"nodeType":"840","messageId":"841","endLine":43,"endColumn":16},{"ruleId":"838","severity":1,"message":"959","line":44,"column":5,"nodeType":"840","messageId":"841","endLine":44,"endColumn":18},{"ruleId":"838","severity":1,"message":"960","line":45,"column":5,"nodeType":"840","messageId":"841","endLine":45,"endColumn":21},{"ruleId":"852","severity":1,"message":"881","line":45,"column":44,"nodeType":"854","messageId":"855","endLine":45,"endColumn":46},{"ruleId":"852","severity":1,"message":"881","line":164,"column":33,"nodeType":"854","messageId":"855","endLine":164,"endColumn":35},{"ruleId":"852","severity":1,"message":"881","line":165,"column":33,"nodeType":"854","messageId":"855","endLine":165,"endColumn":35},{"ruleId":"852","severity":1,"message":"881","line":178,"column":33,"nodeType":"854","messageId":"855","endLine":178,"endColumn":35},{"ruleId":"852","severity":1,"message":"881","line":179,"column":36,"nodeType":"854","messageId":"855","endLine":179,"endColumn":38},{"ruleId":"852","severity":1,"message":"881","line":180,"column":63,"nodeType":"854","messageId":"855","endLine":180,"endColumn":65},{"ruleId":"852","severity":1,"message":"881","line":226,"column":40,"nodeType":"854","messageId":"855","endLine":226,"endColumn":42},{"ruleId":"852","severity":1,"message":"881","line":226,"column":97,"nodeType":"854","messageId":"855","endLine":226,"endColumn":99},{"ruleId":"852","severity":1,"message":"881","line":70,"column":21,"nodeType":"854","messageId":"855","endLine":70,"endColumn":23},{"ruleId":"838","severity":1,"message":"961","line":5,"column":9,"nodeType":"840","messageId":"841","endLine":5,"endColumn":19},{"ruleId":"852","severity":1,"message":"881","line":36,"column":25,"nodeType":"854","messageId":"855","endLine":36,"endColumn":27},{"ruleId":"919","severity":1,"message":"962","line":79,"column":7,"nodeType":"921","endLine":79,"endColumn":27,"suggestions":"963"},{"ruleId":"919","severity":1,"message":"962","line":89,"column":7,"nodeType":"921","endLine":89,"endColumn":26,"suggestions":"964"},{"ruleId":"919","severity":1,"message":"962","line":99,"column":7,"nodeType":"921","endLine":99,"endColumn":28,"suggestions":"965"},{"ruleId":"919","severity":1,"message":"962","line":129,"column":7,"nodeType":"921","endLine":129,"endColumn":78,"suggestions":"966"},{"ruleId":"838","severity":1,"message":"941","line":2,"column":28,"nodeType":"840","messageId":"841","endLine":2,"endColumn":35},{"ruleId":"838","severity":1,"message":"942","line":2,"column":54,"nodeType":"840","messageId":"841","endLine":2,"endColumn":57},{"ruleId":"838","severity":1,"message":"918","line":2,"column":59,"nodeType":"840","messageId":"841","endLine":2,"endColumn":70},{"ruleId":"838","severity":1,"message":"899","line":2,"column":80,"nodeType":"840","messageId":"841","endLine":2,"endColumn":90},{"ruleId":"838","severity":1,"message":"909","line":4,"column":10,"nodeType":"840","messageId":"841","endLine":4,"endColumn":23},{"ruleId":"838","severity":1,"message":"915","line":4,"column":25,"nodeType":"840","messageId":"841","endLine":4,"endColumn":31},{"ruleId":"838","severity":1,"message":"946","line":5,"column":8,"nodeType":"840","messageId":"841","endLine":5,"endColumn":13},{"ruleId":"838","severity":1,"message":"947","line":6,"column":10,"nodeType":"840","messageId":"841","endLine":6,"endColumn":18},{"ruleId":"838","severity":1,"message":"901","line":13,"column":8,"nodeType":"840","messageId":"841","endLine":13,"endColumn":17},{"ruleId":"838","severity":1,"message":"904","line":16,"column":8,"nodeType":"840","messageId":"841","endLine":16,"endColumn":28},{"ruleId":"838","severity":1,"message":"903","line":17,"column":8,"nodeType":"840","messageId":"841","endLine":17,"endColumn":22},{"ruleId":"838","severity":1,"message":"950","line":18,"column":8,"nodeType":"840","messageId":"841","endLine":18,"endColumn":18},{"ruleId":"838","severity":1,"message":"902","line":19,"column":8,"nodeType":"840","messageId":"841","endLine":19,"endColumn":22},{"ruleId":"856","severity":1,"message":"859","line":98,"column":17,"nodeType":"840","messageId":"858","endLine":98,"endColumn":18},{"ruleId":"852","severity":1,"message":"881","line":138,"column":44,"nodeType":"854","messageId":"855","endLine":138,"endColumn":46},{"ruleId":"852","severity":1,"message":"881","line":151,"column":31,"nodeType":"854","messageId":"855","endLine":151,"endColumn":33},{"ruleId":"852","severity":1,"message":"881","line":157,"column":78,"nodeType":"854","messageId":"855","endLine":157,"endColumn":80},{"ruleId":"852","severity":1,"message":"881","line":168,"column":70,"nodeType":"854","messageId":"855","endLine":168,"endColumn":72},{"ruleId":"852","severity":1,"message":"881","line":174,"column":79,"nodeType":"854","messageId":"855","endLine":174,"endColumn":81},{"ruleId":"852","severity":1,"message":"881","line":185,"column":75,"nodeType":"854","messageId":"855","endLine":185,"endColumn":77},{"ruleId":"852","severity":1,"message":"881","line":218,"column":31,"nodeType":"854","messageId":"855","endLine":218,"endColumn":33},{"ruleId":"856","severity":1,"message":"859","line":309,"column":17,"nodeType":"840","messageId":"858","endLine":309,"endColumn":18},{"ruleId":"852","severity":1,"message":"881","line":391,"column":20,"nodeType":"854","messageId":"855","endLine":391,"endColumn":22},{"ruleId":"852","severity":1,"message":"881","line":400,"column":26,"nodeType":"854","messageId":"855","endLine":400,"endColumn":28},{"ruleId":"852","severity":1,"message":"881","line":426,"column":127,"nodeType":"854","messageId":"855","endLine":426,"endColumn":129},{"ruleId":"852","severity":1,"message":"881","line":630,"column":69,"nodeType":"854","messageId":"855","endLine":630,"endColumn":71},{"ruleId":"852","severity":1,"message":"853","line":660,"column":81,"nodeType":"854","messageId":"855","endLine":660,"endColumn":83},{"ruleId":"838","severity":1,"message":"967","line":30,"column":5,"nodeType":"840","messageId":"841","endLine":30,"endColumn":21},{"ruleId":"838","severity":1,"message":"968","line":31,"column":5,"nodeType":"840","messageId":"841","endLine":31,"endColumn":18},{"ruleId":"852","severity":1,"message":"881","line":158,"column":44,"nodeType":"854","messageId":"855","endLine":158,"endColumn":46},{"ruleId":"852","severity":1,"message":"881","line":185,"column":62,"nodeType":"854","messageId":"855","endLine":185,"endColumn":64},{"ruleId":"838","severity":1,"message":"969","line":15,"column":8,"nodeType":"840","messageId":"841","endLine":15,"endColumn":22},{"ruleId":"838","severity":1,"message":"970","line":18,"column":10,"nodeType":"840","messageId":"841","endLine":18,"endColumn":21},{"ruleId":"838","severity":1,"message":"928","line":19,"column":8,"nodeType":"840","messageId":"841","endLine":19,"endColumn":13},{"ruleId":"852","severity":1,"message":"881","line":158,"column":52,"nodeType":"854","messageId":"855","endLine":158,"endColumn":54},{"ruleId":"878","severity":1,"message":"879","line":159,"column":109,"nodeType":"880","endLine":159,"endColumn":192},{"ruleId":"838","severity":1,"message":"971","line":1,"column":17,"nodeType":"840","messageId":"841","endLine":1,"endColumn":25},{"ruleId":"838","severity":1,"message":"972","line":6,"column":11,"nodeType":"840","messageId":"841","endLine":6,"endColumn":17},{"ruleId":"919","severity":1,"message":"920","line":14,"column":8,"nodeType":"921","endLine":14,"endColumn":10,"suggestions":"973"},{"ruleId":"852","severity":1,"message":"853","line":42,"column":30,"nodeType":"854","messageId":"855","endLine":42,"endColumn":32},{"ruleId":"852","severity":1,"message":"853","line":40,"column":30,"nodeType":"854","messageId":"855","endLine":40,"endColumn":32},{"ruleId":"856","severity":1,"message":"857","line":54,"column":25,"nodeType":"840","messageId":"858","endLine":54,"endColumn":33},{"ruleId":"856","severity":1,"message":"859","line":55,"column":29,"nodeType":"840","messageId":"858","endLine":55,"endColumn":30},{"ruleId":"838","severity":1,"message":"928","line":3,"column":8,"nodeType":"840","messageId":"841","endLine":3,"endColumn":13},{"ruleId":"838","severity":1,"message":"907","line":6,"column":72,"nodeType":"840","messageId":"841","endLine":6,"endColumn":78},{"ruleId":"838","severity":1,"message":"974","line":7,"column":10,"nodeType":"840","messageId":"841","endLine":7,"endColumn":23},{"ruleId":"838","severity":1,"message":"975","line":7,"column":25,"nodeType":"840","messageId":"841","endLine":7,"endColumn":37},{"ruleId":"838","severity":1,"message":"976","line":40,"column":11,"nodeType":"840","messageId":"841","endLine":40,"endColumn":15},{"ruleId":"852","severity":1,"message":"881","line":65,"column":37,"nodeType":"854","messageId":"855","endLine":65,"endColumn":39},{"ruleId":"852","severity":1,"message":"881","line":78,"column":44,"nodeType":"854","messageId":"855","endLine":78,"endColumn":46},{"ruleId":"838","severity":1,"message":"941","line":2,"column":28,"nodeType":"840","messageId":"841","endLine":2,"endColumn":35},{"ruleId":"838","severity":1,"message":"942","line":3,"column":9,"nodeType":"840","messageId":"841","endLine":3,"endColumn":12},{"ruleId":"838","severity":1,"message":"918","line":3,"column":14,"nodeType":"840","messageId":"841","endLine":3,"endColumn":25},{"ruleId":"838","severity":1,"message":"899","line":3,"column":35,"nodeType":"840","messageId":"841","endLine":3,"endColumn":45},{"ruleId":"838","severity":1,"message":"943","line":5,"column":10,"nodeType":"840","messageId":"841","endLine":5,"endColumn":15},{"ruleId":"838","severity":1,"message":"944","line":10,"column":5,"nodeType":"840","messageId":"841","endLine":10,"endColumn":17},{"ruleId":"838","severity":1,"message":"945","line":14,"column":5,"nodeType":"840","messageId":"841","endLine":14,"endColumn":12},{"ruleId":"852","severity":1,"message":"881","line":114,"column":40,"nodeType":"854","messageId":"855","endLine":114,"endColumn":42},{"ruleId":"852","severity":1,"message":"881","line":119,"column":38,"nodeType":"854","messageId":"855","endLine":119,"endColumn":40},{"ruleId":"852","severity":1,"message":"881","line":125,"column":38,"nodeType":"854","messageId":"855","endLine":125,"endColumn":40},{"ruleId":"852","severity":1,"message":"881","line":125,"column":86,"nodeType":"854","messageId":"855","endLine":125,"endColumn":88},{"ruleId":"852","severity":1,"message":"881","line":138,"column":33,"nodeType":"854","messageId":"855","endLine":138,"endColumn":35},{"ruleId":"852","severity":1,"message":"881","line":266,"column":80,"nodeType":"854","messageId":"855","endLine":266,"endColumn":82},{"ruleId":"852","severity":1,"message":"881","line":301,"column":78,"nodeType":"854","messageId":"855","endLine":301,"endColumn":80},{"ruleId":"838","severity":1,"message":"943","line":4,"column":10,"nodeType":"840","messageId":"841","endLine":4,"endColumn":15},{"ruleId":"838","severity":1,"message":"928","line":5,"column":8,"nodeType":"840","messageId":"841","endLine":5,"endColumn":13},{"ruleId":"838","severity":1,"message":"944","line":9,"column":5,"nodeType":"840","messageId":"841","endLine":9,"endColumn":17},{"ruleId":"838","severity":1,"message":"945","line":13,"column":5,"nodeType":"840","messageId":"841","endLine":13,"endColumn":12},{"ruleId":"838","severity":1,"message":"977","line":15,"column":5,"nodeType":"840","messageId":"841","endLine":15,"endColumn":14},{"ruleId":"852","severity":1,"message":"881","line":64,"column":59,"nodeType":"854","messageId":"855","endLine":64,"endColumn":61},{"ruleId":"838","severity":1,"message":"941","line":2,"column":28,"nodeType":"840","messageId":"841","endLine":2,"endColumn":35},{"ruleId":"838","severity":1,"message":"942","line":3,"column":9,"nodeType":"840","messageId":"841","endLine":3,"endColumn":12},{"ruleId":"838","severity":1,"message":"918","line":3,"column":14,"nodeType":"840","messageId":"841","endLine":3,"endColumn":25},{"ruleId":"838","severity":1,"message":"899","line":3,"column":35,"nodeType":"840","messageId":"841","endLine":3,"endColumn":45},{"ruleId":"838","severity":1,"message":"943","line":5,"column":10,"nodeType":"840","messageId":"841","endLine":5,"endColumn":15},{"ruleId":"838","severity":1,"message":"944","line":10,"column":5,"nodeType":"840","messageId":"841","endLine":10,"endColumn":17},{"ruleId":"838","severity":1,"message":"945","line":14,"column":5,"nodeType":"840","messageId":"841","endLine":14,"endColumn":12},{"ruleId":"852","severity":1,"message":"881","line":119,"column":47,"nodeType":"854","messageId":"855","endLine":119,"endColumn":49},{"ruleId":"852","severity":1,"message":"881","line":120,"column":59,"nodeType":"854","messageId":"855","endLine":120,"endColumn":61},{"ruleId":"852","severity":1,"message":"881","line":121,"column":61,"nodeType":"854","messageId":"855","endLine":121,"endColumn":63},{"ruleId":"852","severity":1,"message":"881","line":146,"column":34,"nodeType":"854","messageId":"855","endLine":146,"endColumn":36},{"ruleId":"852","severity":1,"message":"881","line":151,"column":32,"nodeType":"854","messageId":"855","endLine":151,"endColumn":34},{"ruleId":"852","severity":1,"message":"881","line":157,"column":32,"nodeType":"854","messageId":"855","endLine":157,"endColumn":34},{"ruleId":"852","severity":1,"message":"881","line":157,"column":74,"nodeType":"854","messageId":"855","endLine":157,"endColumn":76},{"ruleId":"852","severity":1,"message":"881","line":170,"column":33,"nodeType":"854","messageId":"855","endLine":170,"endColumn":35},{"ruleId":"852","severity":1,"message":"881","line":303,"column":80,"nodeType":"854","messageId":"855","endLine":303,"endColumn":82},{"ruleId":"852","severity":1,"message":"881","line":340,"column":78,"nodeType":"854","messageId":"855","endLine":340,"endColumn":80},{"ruleId":"838","severity":1,"message":"941","line":2,"column":28,"nodeType":"840","messageId":"841","endLine":2,"endColumn":35},{"ruleId":"838","severity":1,"message":"942","line":3,"column":9,"nodeType":"840","messageId":"841","endLine":3,"endColumn":12},{"ruleId":"838","severity":1,"message":"918","line":3,"column":14,"nodeType":"840","messageId":"841","endLine":3,"endColumn":25},{"ruleId":"838","severity":1,"message":"899","line":3,"column":35,"nodeType":"840","messageId":"841","endLine":3,"endColumn":45},{"ruleId":"838","severity":1,"message":"943","line":5,"column":10,"nodeType":"840","messageId":"841","endLine":5,"endColumn":15},{"ruleId":"838","severity":1,"message":"944","line":10,"column":5,"nodeType":"840","messageId":"841","endLine":10,"endColumn":17},{"ruleId":"838","severity":1,"message":"945","line":14,"column":5,"nodeType":"840","messageId":"841","endLine":14,"endColumn":12},{"ruleId":"852","severity":1,"message":"881","line":84,"column":40,"nodeType":"854","messageId":"855","endLine":84,"endColumn":42},{"ruleId":"852","severity":1,"message":"881","line":89,"column":38,"nodeType":"854","messageId":"855","endLine":89,"endColumn":40},{"ruleId":"852","severity":1,"message":"881","line":95,"column":35,"nodeType":"854","messageId":"855","endLine":95,"endColumn":37},{"ruleId":"852","severity":1,"message":"881","line":95,"column":80,"nodeType":"854","messageId":"855","endLine":95,"endColumn":82},{"ruleId":"852","severity":1,"message":"881","line":100,"column":30,"nodeType":"854","messageId":"855","endLine":100,"endColumn":32},{"ruleId":"852","severity":1,"message":"881","line":100,"column":72,"nodeType":"854","messageId":"855","endLine":100,"endColumn":74},{"ruleId":"852","severity":1,"message":"881","line":132,"column":33,"nodeType":"854","messageId":"855","endLine":132,"endColumn":35},{"ruleId":"852","severity":1,"message":"881","line":307,"column":80,"nodeType":"854","messageId":"855","endLine":307,"endColumn":82},{"ruleId":"852","severity":1,"message":"881","line":342,"column":78,"nodeType":"854","messageId":"855","endLine":342,"endColumn":80},{"ruleId":"852","severity":1,"message":"881","line":376,"column":81,"nodeType":"854","messageId":"855","endLine":376,"endColumn":83},{"ruleId":"838","severity":1,"message":"941","line":2,"column":28,"nodeType":"840","messageId":"841","endLine":2,"endColumn":35},{"ruleId":"838","severity":1,"message":"942","line":3,"column":9,"nodeType":"840","messageId":"841","endLine":3,"endColumn":12},{"ruleId":"838","severity":1,"message":"918","line":3,"column":14,"nodeType":"840","messageId":"841","endLine":3,"endColumn":25},{"ruleId":"838","severity":1,"message":"899","line":3,"column":35,"nodeType":"840","messageId":"841","endLine":3,"endColumn":45},{"ruleId":"838","severity":1,"message":"943","line":5,"column":10,"nodeType":"840","messageId":"841","endLine":5,"endColumn":15},{"ruleId":"838","severity":1,"message":"944","line":10,"column":5,"nodeType":"840","messageId":"841","endLine":10,"endColumn":17},{"ruleId":"838","severity":1,"message":"945","line":14,"column":5,"nodeType":"840","messageId":"841","endLine":14,"endColumn":12},{"ruleId":"852","severity":1,"message":"881","line":164,"column":47,"nodeType":"854","messageId":"855","endLine":164,"endColumn":49},{"ruleId":"852","severity":1,"message":"881","line":165,"column":59,"nodeType":"854","messageId":"855","endLine":165,"endColumn":61},{"ruleId":"852","severity":1,"message":"881","line":166,"column":61,"nodeType":"854","messageId":"855","endLine":166,"endColumn":63},{"ruleId":"852","severity":1,"message":"853","line":181,"column":38,"nodeType":"854","messageId":"855","endLine":181,"endColumn":40},{"ruleId":"852","severity":1,"message":"881","line":302,"column":80,"nodeType":"854","messageId":"855","endLine":302,"endColumn":82},{"ruleId":"852","severity":1,"message":"881","line":361,"column":80,"nodeType":"854","messageId":"855","endLine":361,"endColumn":82},"no-native-reassign",["978"],"no-negated-in-lhs",["979"],"no-unused-vars","'FiChevronRight' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-redeclare","'newState' is already defined.","redeclared","'i' is already defined.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["980","981"],["982","983"],"no-dupe-keys","Duplicate key 'updateShiftTypes'.","ObjectExpression","'emailjs' is defined but never used.",["984","985"],["986","987"],"'FiXSquare' is defined but never used.","'Alert' is defined but never used.",["988","989"],["990","991"],"'statusConfirmPassword' is assigned a value but never used.","'navbarContainer' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '===' and instead saw '=='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'DataGrid' is defined but never used.","'Page' is defined but never used.","'Label' is defined but never used.","'Scrollbar' is defined but never used.","'SearchNotFound' is defined but never used.","'sentenceCase' is defined but never used.","'Avatar' is defined but never used.","'TablePagination' is defined but never used.","'EmployeeToolbar' is defined but never used.","'EmployeeObj' is defined but never used.","'filterName' is assigned a value but never used.","'filteredUsers' is assigned a value but never used.","'page' is assigned a value but never used.","'rowsPerPage' is assigned a value but never used.","'InputLabel' is defined but never used.","'Modal' is defined but never used.","'GoodImage' is defined but never used.","'DateTimePicker' is defined but never used.","'AdapterDateFns' is defined but never used.","'LocalizationProvider' is defined but never used.","'GiConsoleController' is defined but never used.","'SplitButton' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'BiPlusMedical' is defined but never used.","'AddTypeModal' is defined but never used.","'fromHour' is already defined.","'fromMin' is already defined.","'toHour' is already defined.","'toMin' is already defined.","'BiEdit' is defined but never used.","'GiVampireCape' is defined but never used.","'Grid' is defined but never used.","'CardContent' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["992"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'listMAHD'. Either include them or remove the dependency array.",["993"],"'setValue' is assigned a value but never used.","'date' is assigned a value but never used.","'value1' is assigned a value but never used.","'axios' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'Icon' is defined but never used.","'moreVerticalFill' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Divider' is defined but never used.","'Box' is defined but never used.","'Image' is defined but never used.","'productTypes' is assigned a value but never used.","'typeSet' is assigned a value but never used.","'Stack' is defined but never used.","'GiCancel' is defined but never used.","'Select' is defined but never used.","'FormControl' is defined but never used.","'DatePicker' is defined but never used.","'AiFillPlusCircle' is defined but never used.","'CancelIcon' is defined but never used.","'StyledTextField' is assigned a value but never used.","'visuallyHidden' is defined but never used.","'order' is assigned a value but never used.","'orderBy' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'onRequestSort' is assigned a value but never used.","'onSelectAllClick' is assigned a value but never used.","'GiPayMoney' is defined but never used.","React Hook React.useCallback has a missing dependency: 'inputProps'. Either include it or remove the dependency array.",["994"],["995"],["996"],["997"],"'listProductInfor' is assigned a value but never used.","'joinTypeInfor' is assigned a value but never used.","'TableContainer' is defined but never used.","'useDispatch' is defined but never used.","'useState' is defined but never used.","'search' is assigned a value but never used.",["998"],"'AiOutlineEdit' is defined but never used.","'AiFillDelete' is defined but never used.","'data' is assigned a value but never used.","'listUsers' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"999","fix":"1000","desc":"1001"},{"messageId":"1002","fix":"1003","desc":"1004"},{"messageId":"999","fix":"1005","desc":"1001"},{"messageId":"1002","fix":"1006","desc":"1004"},{"messageId":"999","fix":"1007","desc":"1001"},{"messageId":"1002","fix":"1008","desc":"1004"},{"messageId":"999","fix":"1009","desc":"1001"},{"messageId":"1002","fix":"1010","desc":"1004"},{"messageId":"999","fix":"1011","desc":"1001"},{"messageId":"1002","fix":"1012","desc":"1004"},{"messageId":"999","fix":"1013","desc":"1001"},{"messageId":"1002","fix":"1014","desc":"1004"},{"desc":"1015","fix":"1016"},{"desc":"1017","fix":"1018"},{"desc":"1019","fix":"1020"},{"desc":"1019","fix":"1021"},{"desc":"1019","fix":"1022"},{"desc":"1023","fix":"1024"},{"desc":"1015","fix":"1025"},"removeEscape",{"range":"1026","text":"1027"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1028","text":"1029"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1030","text":"1027"},{"range":"1031","text":"1029"},{"range":"1032","text":"1027"},{"range":"1033","text":"1029"},{"range":"1034","text":"1027"},{"range":"1035","text":"1029"},{"range":"1036","text":"1027"},{"range":"1037","text":"1029"},{"range":"1038","text":"1027"},{"range":"1039","text":"1029"},"Update the dependencies array to be: [dispatch]",{"range":"1040","text":"1041"},"Update the dependencies array to be: [typeReciept, typeByDate, listReciept, statusSelectAll, search, dispatch, listMAHD]",{"range":"1042","text":"1043"},"Update the dependencies array to be: [inputProps]",{"range":"1044","text":"1045"},{"range":"1046","text":"1045"},{"range":"1047","text":"1045"},"Update the dependencies array to be: [cancelOnEscape, inputProps, handleRequestSearch, handleCancel]",{"range":"1048","text":"1049"},{"range":"1050","text":"1041"},[4306,4307],"",[4306,4306],"\\",[4322,4323],[4322,4322],[3284,3285],[3284,3284],[3300,3301],[3300,3300],[3748,3749],[3748,3748],[3764,3765],[3764,3764],[5811,5813],"[dispatch]",[25650,25713],"[typeReciept, typeByDate, listReciept, statusSelectAll, search, dispatch, listMAHD]",[2067,2087],"[inputProps]",[2288,2307],[2525,2546],[3292,3363],"[cancelOnEscape, inputProps, handleRequestSearch, handleCancel]",[379,381]]