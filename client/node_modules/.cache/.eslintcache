[{"D:\\Workspace\\university-project\\SE100Project\\client\\src\\index.js":"1","D:\\Workspace\\university-project\\SE100Project\\client\\src\\App.js":"2","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Store.js":"3","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Router\\DirectionURL.js":"4","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\LoginStatusReducer.js":"5","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\TypeStatusReducer.js":"6","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\InfoUserReducer.js":"7","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\ObjectEditShiftReducer.js":"8","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusDarkModeReducer.js":"9","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusEditShiftReducer.js":"10","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddShiftReducer.js":"11","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\DistrictReducer.js":"12","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\ListShiftReducer.js":"13","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\ProvinceReducer.js":"14","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusModalConfirmPassword.js":"15","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Login\\Login.js":"16","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Login\\LoginWithEmployee.js":"17","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Login\\ForgotPassword.js":"18","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Login\\Register.js":"19","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Body.js":"20","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Router\\DashboardURL.js":"21","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\ModalConfirmPassword.js":"22","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Partials\\SideNavBar.js":"23","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\EmployeeManager.js":"24","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\GoodManager.js":"25","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\ReiceiptManager.js":"26","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Profile\\Profile.js":"27","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Dashboard\\DashBoard.js":"28","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\SellProduct\\SellProduct.js":"29","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Profile\\ListShift.js":"30","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Profile\\ProfileSetting.js":"31","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Profile\\ChangePassword.js":"32","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Profile\\ModalAdd.js":"33","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Profile\\ProfileDetail.js":"34","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Profile\\ProfileHeader.js":"35","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\SellProduct\\Tabs.js":"36","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\SellProduct\\ComponentToPrint.js":"37","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Profile\\DarkMode.js":"38","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Dashboard\\GroupButton.js":"39","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Dashboard\\Statistic.js":"40","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Dashboard\\Calendar.js":"41","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Dashboard\\BaseOptionChart.js":"42","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusDeleteConfirmReducer.js":"43","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusEditTypeReducer.js":"44","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusConfirmReducer.js":"45","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusUpdateGoodReducer.js":"46","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddTypeReducer.js":"47","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusIsAddTypeReducer.js":"48","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\GoodPartials\\GoodImport.js":"49","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\GoodPartials\\EditTypeModal.js":"50","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\GoodPartials\\UpdateGoodModal.js":"51","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\GoodPartials\\ConfirmModal.js":"52","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\GoodPartials\\AddTypeModal.js":"53","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\GoodPartials\\SearchBar.js":"54","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\GoodPartials\\GoodTable.js":"55"},{"size":309,"mtime":1633930101048,"results":"56","hashOfConfig":"57"},{"size":2664,"mtime":1634456602877,"results":"58","hashOfConfig":"57"},{"size":1956,"mtime":1634457230096,"results":"59","hashOfConfig":"57"},{"size":2219,"mtime":1634456034007,"results":"60","hashOfConfig":"57"},{"size":295,"mtime":1633930066735,"results":"61","hashOfConfig":"57"},{"size":343,"mtime":1633930058420,"results":"62","hashOfConfig":"57"},{"size":1334,"mtime":1634456602911,"results":"63","hashOfConfig":"57"},{"size":340,"mtime":1634456602912,"results":"64","hashOfConfig":"57"},{"size":302,"mtime":1634456602915,"results":"65","hashOfConfig":"57"},{"size":312,"mtime":1634456602915,"results":"66","hashOfConfig":"57"},{"size":303,"mtime":1634456602914,"results":"67","hashOfConfig":"57"},{"size":388,"mtime":1634457019783,"results":"68","hashOfConfig":"57"},{"size":1469,"mtime":1634457019784,"results":"69","hashOfConfig":"57"},{"size":384,"mtime":1634457019785,"results":"70","hashOfConfig":"57"},{"size":370,"mtime":1634457019785,"results":"71","hashOfConfig":"57"},{"size":14622,"mtime":1634456602891,"results":"72","hashOfConfig":"57"},{"size":8267,"mtime":1634456602892,"results":"73","hashOfConfig":"57"},{"size":13290,"mtime":1634456602890,"results":"74","hashOfConfig":"57"},{"size":16687,"mtime":1634456602893,"results":"75","hashOfConfig":"57"},{"size":1584,"mtime":1634457019770,"results":"76","hashOfConfig":"57"},{"size":1353,"mtime":1634457019813,"results":"77","hashOfConfig":"57"},{"size":1956,"mtime":1634457019775,"results":"78","hashOfConfig":"57"},{"size":5737,"mtime":1634458280491,"results":"79","hashOfConfig":"57"},{"size":250,"mtime":1633930100840,"results":"80","hashOfConfig":"57"},{"size":6998,"mtime":1634456993264,"results":"81","hashOfConfig":"57"},{"size":246,"mtime":1633930100896,"results":"82","hashOfConfig":"57"},{"size":2320,"mtime":1634456602899,"results":"83","hashOfConfig":"57"},{"size":4333,"mtime":1634457019773,"results":"84","hashOfConfig":"57"},{"size":21393,"mtime":1634457019782,"results":"85","hashOfConfig":"57"},{"size":6757,"mtime":1634456602897,"results":"86","hashOfConfig":"57"},{"size":911,"mtime":1634456602903,"results":"87","hashOfConfig":"57"},{"size":6737,"mtime":1634456602896,"results":"88","hashOfConfig":"57"},{"size":10904,"mtime":1634457019777,"results":"89","hashOfConfig":"57"},{"size":15433,"mtime":1634457019778,"results":"90","hashOfConfig":"57"},{"size":3646,"mtime":1634457019779,"results":"91","hashOfConfig":"57"},{"size":1145,"mtime":1634457019783,"results":"92","hashOfConfig":"57"},{"size":714,"mtime":1634457019780,"results":"93","hashOfConfig":"57"},{"size":3134,"mtime":1634457019776,"results":"94","hashOfConfig":"57"},{"size":2783,"mtime":1634457019773,"results":"95","hashOfConfig":"57"},{"size":1849,"mtime":1634457019774,"results":"96","hashOfConfig":"57"},{"size":1607,"mtime":1634457019772,"results":"97","hashOfConfig":"57"},{"size":5649,"mtime":1634457019771,"results":"98","hashOfConfig":"57"},{"size":390,"mtime":1634456993298,"results":"99","hashOfConfig":"57"},{"size":309,"mtime":1634456993299,"results":"100","hashOfConfig":"57"},{"size":303,"mtime":1634456993297,"results":"101","hashOfConfig":"57"},{"size":319,"mtime":1634456993301,"results":"102","hashOfConfig":"57"},{"size":304,"mtime":1634456993295,"results":"103","hashOfConfig":"57"},{"size":372,"mtime":1634456993300,"results":"104","hashOfConfig":"57"},{"size":21166,"mtime":1634456993269,"results":"105","hashOfConfig":"57"},{"size":3716,"mtime":1634456993268,"results":"106","hashOfConfig":"57"},{"size":12495,"mtime":1634456993273,"results":"107","hashOfConfig":"57"},{"size":3003,"mtime":1634456993267,"results":"108","hashOfConfig":"57"},{"size":5157,"mtime":1634456993265,"results":"109","hashOfConfig":"57"},{"size":5541,"mtime":1634456993271,"results":"110","hashOfConfig":"57"},{"size":9737,"mtime":1634456993270,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"13guukl",{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"114"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"114"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Workspace\\university-project\\SE100Project\\client\\src\\index.js",[],["227","228"],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\App.js",["229"],"import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport DirectionURL from './Router/DirectionURL';\r\nimport './CSS/App.css'\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  async componentWillMount() {\r\n    if (localStorage.getItem('token') && localStorage.getItem('token') !== \"\") {\r\n      axios.post(`http://localhost:5000/refresh`, {\r\n        token: localStorage.getItem('token'),\r\n      }).then(res => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          localStorage.setItem('token', res.data.token);\r\n          const data = {\r\n            email: res.data.data._id,\r\n            firstName: res.data.data.firstName ? res.data.data.firstName : \"\",\r\n            lastName: res.data.data.lastName ? res.data.data.lastName : \"\",\r\n            old: res.data.data.old ? res.data.data.old : \"\",\r\n            gender: res.data.data.gender ? res.data.data.gender : \"0\",\r\n            storeName: res.data.data.storeName ? res.data.data.storeName : \"\",\r\n            tel: res.data.data.phoneNumber ? res.data.data.phoneNumber : \"\",\r\n            province: res.data.data.province ? res.data.data.province : \"0\",\r\n            district: res.data.data.district ? res.data.data.district : \"0\",\r\n            address: res.data.data.address ? res.data.data.address : \"\",\r\n          }\r\n          this.props.updateProfile(data);\r\n          this.props.changeLoginStatus();\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"thất bại\");\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <DirectionURL></DirectionURL>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    isLogin: state.loginStatus,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    changeLoginStatus: () => {\r\n      dispatch({\r\n        type: \"CHANGE_LOGIN_STATUS\",\r\n      });\r\n    },\r\n    updateProvince: (data) => {\r\n      dispatch({\r\n        type: \"UPDATE_DATA\",\r\n        data: data,\r\n      })\r\n    },\r\n    updateProfile: (data) => {\r\n      dispatch({\r\n          type: \"UPDATA_DATA_USER\",\r\n          email: data.email,\r\n          firstName: data.firstName,\r\n          lastName: data.lastName,\r\n          old: data.old,\r\n          gender: data.gender,\r\n          storeName: data.storeName,\r\n          tel: data.tel,\r\n          province: data.province,\r\n          district: data.district,\r\n          address: data.address,\r\n      })\r\n  }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Store.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Router\\DirectionURL.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\LoginStatusReducer.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\TypeStatusReducer.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\InfoUserReducer.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\ObjectEditShiftReducer.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusDarkModeReducer.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusEditShiftReducer.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddShiftReducer.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\DistrictReducer.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\ListShiftReducer.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\ProvinceReducer.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusModalConfirmPassword.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Login\\Login.js",["230","231"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../CSS/Login.css'\r\nimport { BsFillEnvelopeFill, BsLockFill } from \"react-icons/bs\";\r\nimport { FiChevronRight, FiXSquare } from \"react-icons/fi\";\r\nimport { BiUser } from \"react-icons/bi\";\r\nimport { Avatar } from '@mui/material'\r\nimport { IconContext } from \"react-icons\";\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport axios from 'axios';\r\nimport Alert from '@mui/material/Alert';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            appId: \"543752153590340\",\r\n            clientId: \"826925109796-mi95l41fi57bdlolpvnfdg5bpt9oc81h.apps.googleusercontent.com\",\r\n            statusFailed: false,\r\n            statusSucces: false,\r\n        }\r\n    }\r\n\r\n    message = \"\";\r\n\r\n    // Login with google\r\n    onLoginSuccess = (res) => {\r\n        this.OutAlert();\r\n        axios.post(`http://localhost:5000/sign-in-with-google`, res.profileObj)\r\n            .then(res => {\r\n                console.log(\"thành công\");\r\n                console.log(res.data);\r\n                switch (res.data.status) {\r\n                    case 1:\r\n                        this.message = res.data.message;\r\n                        this.setState({\r\n                            statusSucces: true,\r\n                        })\r\n                        localStorage.setItem('token', res.data.token);\r\n                        const data = {\r\n                            email: res.data.data._id,\r\n                            firstName: res.data.data.firstName ? res.data.data.firstName : \"\",\r\n                            lastName: res.data.data.lastName ? res.data.data.lastName : \"\",\r\n                            old: res.data.data.old ? res.data.data.old : \"\",\r\n                            gender: res.data.data.gender ? res.data.data.gender : \"0\",\r\n                            storeName: res.data.data.storeName ? res.data.data.storeName : \"\",\r\n                            tel: res.data.data.phoneNumber ? res.data.data.phoneNumber : \"\",\r\n                            province: res.data.data.province ? res.data.data.province : \"0\",\r\n                            district: res.data.data.district ? res.data.data.district : \"0\",\r\n                            address: res.data.data.address ? res.data.data.address : \"\",\r\n                        }\r\n                        this.props.updateProfile(data);\r\n                        this.props.changeLoginStatus();\r\n                        break;\r\n                    case -1:\r\n                        this.message = res.data.message;\r\n                        this.setState({\r\n                            statusFailed: true,\r\n                        })\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.message = \"Error, server don't active\";\r\n                this.setState({\r\n                    statusFailed: true,\r\n                })\r\n            })\r\n    }\r\n\r\n    onFailureSuccess = (res) => {\r\n        this.setState({\r\n            statusFailed: true,\r\n            statusSucces: false,\r\n        })\r\n    }\r\n\r\n    // Out Alert\r\n    OutAlert = () => {\r\n        this.setState({\r\n            statusFailed: false,\r\n            statusSucces: false,\r\n        })\r\n    }\r\n\r\n    // Check để thay đổi trạng thái đã login hay chưa\r\n    isLoginCheck = (e) => {\r\n        this.OutAlert();\r\n        if (this.blurEmail() && this.blurPassword()) {\r\n            axios.post(`http://localhost:5000/sign-in-with-gmail-password`, {\r\n                email: document.querySelector('#email').value,\r\n                password: document.getElementById('password').value,\r\n            })\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    console.log(res.data.email);\r\n                    switch (res.data.status) {\r\n                        case 1:\r\n                            this.message = res.data.message;\r\n                            this.setState({\r\n                                statusSucces: true,\r\n                            })\r\n                            localStorage.setItem('token', res.data.token);\r\n                            const data = {\r\n                                email: res.data.email? res.data.email : res.data.data._id,\r\n                                firstName: res.data.data.firstName ? res.data.data.firstName : \"cc\",\r\n                                lastName: res.data.data.lastName ? res.data.data.lastName : \"abc\",\r\n                                old: res.data.data.old ? res.data.data.old : \"\",\r\n                                gender: res.data.data.gender ? res.data.data.gender : \"0\",\r\n                                storeName: res.data.data.storeName ? res.data.data.storeName : \"\",\r\n                                tel: res.data.data.phoneNumber ? res.data.data.phoneNumber : \"\",\r\n                                salary: res.data.data.salary ? res.data.data.salary : \"\",\r\n                                province: res.data.data.province ? res.data.data.province : \"0\",\r\n                                district: res.data.data.district ? res.data.data.district : \"0\",\r\n                                address: res.data.data.address ? res.data.data.address : \"\",\r\n                            }\r\n                            this.props.updateProfile(data);\r\n                            this.props.changeLoginStatus();\r\n                            break;\r\n                        case -1:\r\n                            this.message = res.data.message;\r\n                            this.setState({\r\n                                statusFailed: true,\r\n                            })\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.message = \"Enter again\";\r\n                    this.setState({\r\n                        statusFailed: true,\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    // Handle user : blur , change in input\r\n    blurEmail = () => {\r\n        var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        const event = document.querySelector('#email');\r\n        let elementValue = event.value;\r\n        const formGroup = event.parentElement.parentElement;\r\n        // check validate\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    blurPassword = () => {\r\n        const e = document.getElementById('password');\r\n        let elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\r\n            return false;\r\n        } else if (e.value.length < 6) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    changeInput = (e) => {\r\n        const formGroup = e.target.parentElement.parentElement;\r\n        formGroup.classList.remove('invalid');\r\n        formGroup.querySelector('.form-message').innerText = \"\";\r\n    }\r\n\r\n\r\n    render() {\r\n        const enterPress = this.isLoginCheck;\r\n        document.onkeydown = function (e) {\r\n            switch (e.which) {\r\n                case 13:\r\n                    enterPress(e);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"form-login\">\r\n                    <div className=\"auth-form\">\r\n                        <Avatar className=\"auth-form__avatar\">\r\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\r\n                                <BiUser></BiUser>\r\n                            </IconContext.Provider>\r\n                        </Avatar>\r\n                        <div className=\"auth-form__container\">\r\n                            <div className=\"auth-form__header\">\r\n                                <div className=\"auth-form__heading\">Login</div>\r\n                                <NavLink to=\"/register\" className=\"auth-form__switch-btn\">Register <FiChevronRight className=\"auth-form__arrow-return\"></FiChevronRight></NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"auth-form__body\">\r\n                            <form action=\"/login-submit\" method=\"POST\" id=\"login-form\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"VD: abc@gmail.com\" type=\"text\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={(e) => this.blurPassword(e)} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"auth-form__support\">\r\n                                    <span className=\"auth-form__support-forget\">\r\n                                        <NavLink onclick=\"\" to=\"/forgot\" className=\"auth-form__switch-btn\">Forgot password</NavLink>\r\n                                    </span>\r\n                                    <span className=\"auth-form__help-separate\" />\r\n                                    <span className=\"auth-form__support-need-support\">Need help?</span>\r\n                                </div>\r\n                                <div className=\"auth-form__support\">\r\n                                    <GoogleLogin\r\n                                        className=\"auth-form__support-google\"\r\n                                        clientId={this.state.clientId}\r\n                                        buttonText=\"Login with Google\"\r\n                                        onSuccess={this.onLoginSuccess}\r\n                                        onFailure={this.onFailureSuccess}\r\n                                        cookiePolicy={'single_host_origin'}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"auth-form__btn\">\r\n                                    <div to=\"/home\" id=\"navlink\" onClick={(e) => this.isLoginCheck(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign In</div>\r\n                                </div>\r\n                                <div className=\"auth-form__btn\">\r\n                                    <NavLink to=\"/employee\" id=\"navlink\" className=\"auth-form__btn-log-in auth-form__switch-btn auth-form-employee\">\r\n                                        Employee\r\n                                        <FiChevronRight className=\"auth-form__arrow-return\"></FiChevronRight>\r\n                                    </NavLink>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.statusSucces ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isLogin: state.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            });\r\n        },\r\n        updateProfile: (data) => {\r\n            dispatch({\r\n                type: \"UPDATA_DATA_USER\",\r\n                email: data.email,\r\n                firstName: data.firstName,\r\n                lastName: data.lastName,\r\n                old: data.old,\r\n                gender: data.gender,\r\n                storeName: data.storeName,\r\n                tel: data.tel,\r\n                province: data.province,\r\n                district: data.district,\r\n                address: data.address,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Login\\LoginWithEmployee.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Login\\ForgotPassword.js",["232","233","234"],"import React, { Component } from 'react';\r\nimport Avatar from '@mui/material/Avatar'\r\nimport { IconContext } from \"react-icons\";\r\nimport { FiSend, FiXSquare } from \"react-icons/fi\";\r\nimport { BsFillEnvelopeFill, BsLockFill, BsBoxArrowInLeft, BsCodeSlash } from \"react-icons/bs\";\r\nimport emailjs from 'emailjs-com';\r\nimport Alert from '@mui/material/Alert';\r\nimport axios from 'axios';\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nvar bcrypt = require('bcryptjs');\r\n\r\n\r\nclass ForgotPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            code: \"\",\r\n            statusSendCode: true,\r\n            statusFailed: false,\r\n            statusSuccess: false,\r\n        }\r\n    }\r\n\r\n    message = \"\"\r\n\r\n    // Send code tới người dùng\r\n    sendCode = (a = this.makeCode(6)) => {\r\n        this.setState({\r\n            code: \"123456\"\r\n        })\r\n        // this.setState({\r\n        //     code: a,\r\n        // })\r\n        // emailjs.init(\"user_K1g5N5hUDI0rjsa1uRoI4\");\r\n        // emailjs.send(\"gmail_main\", \"template_plasdgf\", {\r\n        //     To_mail: `${document.querySelector('#email').value}`,\r\n        //     code: `${a}`,\r\n        // })\r\n        //     .then((response) => {\r\n        //         console.log('SUCCESS!', response.status, response.text);\r\n        //     }, (err) => {\r\n        //         console.log('FAILED...', err);\r\n        //     });\r\n    }\r\n\r\n    // Tạo code để xác nhận\r\n    makeCode = (length) => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() *\r\n                charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // Hashpassword\r\n    hash = (pass) => {\r\n        var hash = bcrypt.hashSync(pass, 12)\r\n        return hash;\r\n    }\r\n\r\n\r\n    // Out Alert\r\n    OutAlert = () => {\r\n        this.setState({\r\n            statusFailed: false,\r\n            statusSuccess: false,\r\n        })\r\n    }\r\n\r\n    //Check tìm lại mật khẩu\r\n    findPassword = (e) => {\r\n        this.OutAlert();\r\n        if (this.blurEmail() && this.blurCode() && this.blurPassword() && this.blurRePassword()) {\r\n            const form = document.getElementById('findpass-form');\r\n            axios.post(`http://localhost:5000/find-password`, {\r\n                email: document.querySelector('#email').value,\r\n                password: this.hash(document.getElementById('password').value),\r\n            })\r\n                .then(res => {\r\n                    form.reset();\r\n                    console.log(res.data.status);\r\n                    switch (res.data.status) {\r\n                        case 1:\r\n                            this.message = res.data.message;\r\n                            this.setState({\r\n                                statusSuccess: true,\r\n                            })\r\n                            break;\r\n                        case -1:\r\n                            this.message = res.data.message;\r\n                            this.setState({\r\n                                statusFailed: true,\r\n                            })\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.message = \"Error system\";\r\n                    this.setState({\r\n                        statusFailed: true,\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    // Handle user blue change in input\r\n    blurEmail = () => {\r\n        var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        const event = document.querySelector('#email');\r\n        const elementValue = event.value;\r\n        const formGroup = event.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            this.setState({\r\n                statusSendCode: false,\r\n            })\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurPassword = () => {\r\n        const e = document.getElementById('password');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\r\n            return false;\r\n        } else if (e.value.length < 6) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurCode = () => {\r\n        const e = document.getElementById('code');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (this.state.code === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please press Send Code\"\r\n            return false\r\n        } else if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter code here\"\r\n            return false\r\n        } else if (elementValue !== this.state.code) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Code is incorrect\"\r\n            return false\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurRePassword = () => {\r\n        const e = document.getElementById('re-password')\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (document.getElementById('password').value !== elementValue) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Re-password not correct\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true\r\n        }\r\n    }\r\n\r\n    changeInput = (e) => {\r\n        const formGroup = e.target.parentElement.parentElement;\r\n        formGroup.classList.remove('invalid');\r\n        formGroup.querySelector('.form-message').innerText = \"\";\r\n    }\r\n\r\n    render() {\r\n        const enterPress = this.findPassword;\r\n        document.onkeydown = function (e) {\r\n            switch (e.which) {\r\n                case 13:\r\n                    enterPress(e);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"form-findpass\">\r\n                    <div className=\"auth-form\">\r\n                        <Avatar className=\"auth-form__avatar\">\r\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\r\n                                <FiSend></FiSend>\r\n                            </IconContext.Provider>\r\n                        </Avatar>\r\n                        <div className=\"auth-form__container\">\r\n                            <div className=\"auth-form__header\">\r\n                                <div className=\"auth-form__heading\">Find password</div>\r\n                                <NavLink onclick=\"\" to=\"/login\" className=\"auth-form__switch-btn\"><BsBoxArrowInLeft className=\"arrow-return\"></BsBoxArrowInLeft></NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"auth-form__body\">\r\n                            <form action=\"/findpass-submit?_method=PUT\" method=\"POST\" id=\"findpass-form\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"Ex: abc@gmail.com\" type=\"text\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"code\" className=\"form-label\">Code</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsCodeSlash className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurCode()} name=\"code\" rules=\"required|email\" id=\"code\" placeholder=\"Ex: ABC321\" type=\"text\" />\r\n                                        <button type=\"button\" disabled={this.state.statusSendCode} onClick={() => this.sendCode()} class=\"btn btn-primary disabel send-code\">SEND</button>\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\" className=\"form-label\">New password</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurPassword()} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\" className=\"form-label\">Re-password</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurRePassword()} name=\"password\" rules=\"required|min:6\" id=\"re-password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"auth-form__btn\">\r\n                                    <div onClick={(e) => this.findPassword(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Find Password</div>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.statusSuccess ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ForgotPassword;\r\n","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Login\\Register.js",["235","236","237"],"import React, { Component } from 'react';\r\nimport '../../CSS/Login.css'\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport Avatar from '@mui/material/Avatar'\r\nimport { IconContext } from \"react-icons\";\r\nimport { FiChevronLeft, FiUserPlus, FiXSquare } from \"react-icons/fi\";\r\nimport { BsFillEnvelopeFill, BsLockFill, BsCodeSlash } from \"react-icons/bs\";\r\nimport { FaPhoneSquare } from \"react-icons/fa\";\r\nimport axios from 'axios';\r\nimport Alert from '@mui/material/Alert';\r\nimport emailjs from 'emailjs-com';\r\nvar bcrypt = require('bcryptjs');\r\n\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n            code: \"\",\r\n            statusSendCode: true,\r\n            statusFailed: false,\r\n            statusSuccess: false,\r\n        }\r\n    }\r\n\r\n    message = \"\";\r\n\r\n    // Send code tới người dùng\r\n    sendCode = (a = this.makeCode(6)) => {\r\n        this.setState({\r\n            code: \"123456\"\r\n        })\r\n        // this.setState({\r\n        //     code: a,\r\n        // })\r\n        // emailjs.init(\"user_K1g5N5hUDI0rjsa1uRoI4\");\r\n        // emailjs.send(\"gmail_main\", \"template_plasdgf\", {\r\n        //     To_mail: `${document.getElementById('email').value}`,\r\n        //     code: `${a}`,\r\n        // })\r\n        //     .then((response) => {\r\n        //         console.log('SUCCESS!', response.status, response.text);\r\n        //     }, (err) => {\r\n        //         console.log('FAILED...', err);\r\n        //     });\r\n    }\r\n\r\n    // status SignUp \r\n    SignUp = (e) => {\r\n        this.OutAlert();\r\n        if (this.blurEmail() && this.blurCode() && this.blurPassword() && this.blurRePassword() && this.blurTel()) {\r\n            axios.post(`http://localhost:5000/register-with-email`, {\r\n                email: document.getElementById('email').value,\r\n                password: this.hash(document.getElementById('password').value),\r\n                tel: document.getElementById('tel').value,\r\n            })\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    switch (res.data.status) {\r\n                        case 1:\r\n                            this.message = res.data.message;\r\n                            this.setState({\r\n                                statusSuccess: true,\r\n                            })\r\n                            localStorage.setItem('token', res.data.token);\r\n                            const data = {\r\n                                email: res.data.email,\r\n                                firstName: \"\",\r\n                                lastName:  \"\",\r\n                                old:  \"\",\r\n                                gender: \"0\",\r\n                                storeName: \"\",\r\n                                tel: document.getElementById('tel').value,\r\n                                province: \"0\",\r\n                                district:  \"0\",\r\n                                address:  \"\",\r\n                            }\r\n                            this.props.updateProfile(data);\r\n                            this.props.changeLoginStatus();\r\n                            break;\r\n                        case -1:\r\n                            this.message = res.data.message;;\r\n                            this.setState({\r\n                                statusFailed: true,\r\n                            })\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.message = \"Error system\";\r\n                    this.setState({\r\n                        statusFailed: true,\r\n                    })\r\n                })\r\n\r\n        }\r\n    }\r\n\r\n    // Out Alert\r\n    OutAlert = () => {\r\n        this.setState({\r\n            statusFailed: false,\r\n            statusSuccess: false,\r\n        })\r\n    }\r\n\r\n    // Tạo mã code cho người dùng xác nhận\r\n    makeCode = (length) => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() *\r\n                charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // Hashpassword\r\n    hash = (pass) => {\r\n        var hash = bcrypt.hashSync(pass, 12)\r\n        return hash;\r\n    }\r\n\r\n\r\n    // Handle user : blur, change in input\r\n    blurEmail = () => {\r\n        const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        const e = document.getElementById('email');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            this.setState({\r\n                statusSendCode: false,\r\n            })\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurCode = () => {\r\n        const e = document.getElementById('code');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (this.state.code === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please press Send Code\"\r\n            return false\r\n        } else if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter code here\"\r\n            return false\r\n        } else if (elementValue !== this.state.code) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Code is incorrect\"\r\n            return false\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurPassword = () => {\r\n        const e = document.getElementById('password');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\r\n            return false;\r\n        } else if (e.value.length < 6) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurRePassword = () => {\r\n        const e = document.getElementById('re-password')\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (document.getElementById('password').value !== elementValue) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Re-password not correct\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true\r\n        }\r\n    }\r\n\r\n    blurTel = () => {\r\n        const e = document.getElementById('tel');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        const regex = /^\\d+$/;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Phone is not in the correct format\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    changeInput = (e) => {\r\n        const formGroup = e.target.parentElement.parentElement;\r\n        formGroup.classList.remove('invalid');\r\n        formGroup.querySelector('.form-message').innerText = \"\";\r\n    }\r\n\r\n    render() {\r\n        const enterPress = this.SignUp;\r\n        document.onkeydown = function (e) {\r\n            switch (e.which) {\r\n                case 13:\r\n                    enterPress(e);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"form-register\">\r\n                    <div className=\"auth-form\">\r\n                        <Avatar className=\"auth-form__avatar\">\r\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\r\n                                <FiUserPlus></FiUserPlus>\r\n                            </IconContext.Provider>\r\n                        </Avatar>\r\n                        <div className=\"auth-form__container\">\r\n                            <div className=\"auth-form__header\">\r\n                                <div className=\"auth-form__heading\">Register</div>\r\n                                <NavLink to=\"/login\" className=\"auth-form__switch-btn\"> <FiChevronLeft className=\"auth-form__arrow-return\"></FiChevronLeft>Login</NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"auth-form__body\">\r\n                            <form action=\"/register-submit\" method=\"post\" id=\"register-form\">\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"VD: abc@gmail.com\" type=\"text\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsCodeSlash className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurCode()} name=\"code\" rules=\"required|email\" id=\"code\" placeholder=\"Ex: ABC321\" type=\"text\" />\r\n                                        <button type=\"button\" disabled={this.state.statusSendCode} onClick={() => this.sendCode()} class=\"btn btn-primary disabel send-code\">SEND</button>\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurPassword()} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurRePassword()} name=\"re-password\" id=\"re-password\" placeholder=\"Emter re-password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <FaPhoneSquare className=\"input-custom-icon\" ></FaPhoneSquare>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onBlur={(e) => this.blurTel(e)} onChange={(e) => this.changeInput(e)} name=\"tel\" rules=\"required\" id=\"tel\" placeholder=\"Ex: 0303030303\" type=\"tel\" />\r\n\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"register-description\">Bằng cách ấn vào nút\r\n                                    <span className=\"register-description__keyword\">“ĐĂNG KÝ”</span>\r\n                                    , tôi đồng ý với\r\n                                    <span className=\"register-description__keyword\">Điều Khoản Sử Dụng</span> và\r\n                                    <div className=\"register-description__keyword\"> Chính Sách Bảo Mật</div>\r\n                                </div>\r\n                                <div className=\"auth-form__btn\">\r\n                                    <div onClick={(e) => this.SignUp(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign Up</div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n                {this.state.statusSuccess ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isLogin: state.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            });\r\n        },\r\n        updateProfile: (data) => {\r\n            dispatch({\r\n                type: \"UPDATA_DATA_USER\",\r\n                email: data.email,\r\n                firstName: data.firstName,\r\n                lastName: data.lastName,\r\n                old: data.old,\r\n                gender: data.gender,\r\n                storeName: data.storeName,\r\n                tel: data.tel,\r\n                province: data.province,\r\n                district: data.district,\r\n                address: data.address,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Body.js",["238"],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Router\\DashboardURL.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\ModalConfirmPassword.js",["239"],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Partials\\SideNavBar.js",["240","241","242"],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\EmployeeManager.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\GoodManager.js",["243","244","245"],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\ReiceiptManager.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Profile\\Profile.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Dashboard\\DashBoard.js",["246"],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\SellProduct\\SellProduct.js",["247"],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Profile\\ListShift.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Profile\\ProfileSetting.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Profile\\ChangePassword.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Profile\\ModalAdd.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Profile\\ProfileDetail.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Profile\\ProfileHeader.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\SellProduct\\Tabs.js",["248"],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\SellProduct\\ComponentToPrint.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Profile\\DarkMode.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Dashboard\\GroupButton.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Dashboard\\Statistic.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Dashboard\\Calendar.js",["249","250","251"],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\Dashboard\\BaseOptionChart.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusDeleteConfirmReducer.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusEditTypeReducer.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusConfirmReducer.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusUpdateGoodReducer.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddTypeReducer.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Reducer\\Status\\StatusIsAddTypeReducer.js",[],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\GoodPartials\\GoodImport.js",["252","253","254","255","256","257","258"],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\GoodPartials\\EditTypeModal.js",["259","260","261","262"],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\GoodPartials\\UpdateGoodModal.js",["263","264","265","266","267"],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\GoodPartials\\ConfirmModal.js",["268","269","270","271"],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\GoodPartials\\AddTypeModal.js",["272","273"],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\GoodPartials\\SearchBar.js",["274","275","276","277"],"D:\\Workspace\\university-project\\SE100Project\\client\\src\\Components\\GoodPartials\\GoodTable.js",["278"],{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","severity":1,"message":"284","line":12,"column":3,"nodeType":"285","messageId":"286","endLine":15,"endColumn":4},{"ruleId":"287","severity":1,"message":"288","line":149,"column":28,"nodeType":"289","messageId":"290","endLine":149,"endColumn":29,"suggestions":"291"},{"ruleId":"287","severity":1,"message":"288","line":149,"column":44,"nodeType":"289","messageId":"290","endLine":149,"endColumn":45,"suggestions":"292"},{"ruleId":"293","severity":1,"message":"294","line":6,"column":8,"nodeType":"295","messageId":"296","endLine":6,"endColumn":15},{"ruleId":"287","severity":1,"message":"288","line":116,"column":28,"nodeType":"289","messageId":"290","endLine":116,"endColumn":29,"suggestions":"297"},{"ruleId":"287","severity":1,"message":"288","line":116,"column":44,"nodeType":"289","messageId":"290","endLine":116,"endColumn":45,"suggestions":"298"},{"ruleId":"293","severity":1,"message":"294","line":14,"column":8,"nodeType":"295","messageId":"296","endLine":14,"endColumn":15},{"ruleId":"287","severity":1,"message":"288","line":134,"column":30,"nodeType":"289","messageId":"290","endLine":134,"endColumn":31,"suggestions":"299"},{"ruleId":"287","severity":1,"message":"288","line":134,"column":46,"nodeType":"289","messageId":"290","endLine":134,"endColumn":47,"suggestions":"300"},{"ruleId":"293","severity":1,"message":"301","line":3,"column":5,"nodeType":"295","messageId":"296","endLine":3,"endColumn":12},{"ruleId":"293","severity":1,"message":"302","line":9,"column":11,"nodeType":"295","messageId":"296","endLine":9,"endColumn":32},{"ruleId":"303","severity":1,"message":"304","line":32,"column":29,"nodeType":"305","endLine":39,"endColumn":30},{"ruleId":"303","severity":1,"message":"304","line":41,"column":29,"nodeType":"305","endLine":41,"endColumn":159},{"ruleId":"306","severity":1,"message":"307","line":102,"column":25,"nodeType":"305","endLine":102,"endColumn":131},{"ruleId":"293","severity":1,"message":"308","line":2,"column":10,"nodeType":"295","messageId":"296","endLine":2,"endColumn":18},{"ruleId":"293","severity":1,"message":"309","line":14,"column":7,"nodeType":"295","messageId":"296","endLine":14,"endColumn":14},{"ruleId":"293","severity":1,"message":"310","line":37,"column":9,"nodeType":"295","messageId":"296","endLine":37,"endColumn":13},{"ruleId":"293","severity":1,"message":"311","line":8,"column":8,"nodeType":"295","messageId":"296","endLine":8,"endColumn":19},{"ruleId":"306","severity":1,"message":"307","line":307,"column":48,"nodeType":"305","endLine":307,"endColumn":60},{"ruleId":"293","severity":1,"message":"312","line":4,"column":10,"nodeType":"295","messageId":"296","endLine":4,"endColumn":22},{"ruleId":"293","severity":1,"message":"313","line":9,"column":19,"nodeType":"295","messageId":"296","endLine":9,"endColumn":27},{"ruleId":"293","severity":1,"message":"314","line":10,"column":12,"nodeType":"295","messageId":"296","endLine":10,"endColumn":16},{"ruleId":"293","severity":1,"message":"315","line":12,"column":11,"nodeType":"295","messageId":"296","endLine":12,"endColumn":17},{"ruleId":"293","severity":1,"message":"316","line":6,"column":10,"nodeType":"295","messageId":"296","endLine":6,"endColumn":20},{"ruleId":"293","severity":1,"message":"317","line":6,"column":30,"nodeType":"295","messageId":"296","endLine":6,"endColumn":35},{"ruleId":"293","severity":1,"message":"318","line":11,"column":8,"nodeType":"295","messageId":"296","endLine":11,"endColumn":17},{"ruleId":"319","severity":1,"message":"320","line":138,"column":140,"nodeType":"321","messageId":"322","endLine":138,"endColumn":142},{"ruleId":"323","severity":1,"message":"324","line":254,"column":41,"nodeType":"325","messageId":"326","endLine":254,"endColumn":52},{"ruleId":"319","severity":1,"message":"320","line":330,"column":68,"nodeType":"321","messageId":"322","endLine":330,"endColumn":70},{"ruleId":"319","severity":1,"message":"327","line":359,"column":81,"nodeType":"321","messageId":"322","endLine":359,"endColumn":83},{"ruleId":"293","severity":1,"message":"328","line":2,"column":43,"nodeType":"295","messageId":"296","endLine":2,"endColumn":52},{"ruleId":"293","severity":1,"message":"329","line":4,"column":10,"nodeType":"295","messageId":"296","endLine":4,"endColumn":23},{"ruleId":"293","severity":1,"message":"330","line":7,"column":8,"nodeType":"295","messageId":"296","endLine":7,"endColumn":13},{"ruleId":"283","severity":1,"message":"284","line":16,"column":5,"nodeType":"285","messageId":"286","endLine":18,"endColumn":6},{"ruleId":"293","severity":1,"message":"331","line":2,"column":37,"nodeType":"295","messageId":"296","endLine":2,"endColumn":41},{"ruleId":"293","severity":1,"message":"332","line":5,"column":8,"nodeType":"295","messageId":"296","endLine":5,"endColumn":13},{"ruleId":"293","severity":1,"message":"330","line":11,"column":8,"nodeType":"295","messageId":"296","endLine":11,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":172,"column":64,"nodeType":"321","messageId":"322","endLine":172,"endColumn":66},{"ruleId":"319","severity":1,"message":"327","line":185,"column":69,"nodeType":"321","messageId":"322","endLine":185,"endColumn":71},{"ruleId":"293","severity":1,"message":"328","line":2,"column":43,"nodeType":"295","messageId":"296","endLine":2,"endColumn":52},{"ruleId":"293","severity":1,"message":"333","line":4,"column":25,"nodeType":"295","messageId":"296","endLine":4,"endColumn":31},{"ruleId":"293","severity":1,"message":"330","line":7,"column":8,"nodeType":"295","messageId":"296","endLine":7,"endColumn":13},{"ruleId":"283","severity":1,"message":"284","line":10,"column":5,"nodeType":"285","messageId":"286","endLine":12,"endColumn":6},{"ruleId":"293","severity":1,"message":"334","line":2,"column":80,"nodeType":"295","messageId":"296","endLine":2,"endColumn":85},{"ruleId":"293","severity":1,"message":"333","line":4,"column":25,"nodeType":"295","messageId":"296","endLine":4,"endColumn":31},{"ruleId":"335","severity":1,"message":"336","line":79,"column":7,"nodeType":"337","endLine":79,"endColumn":27,"suggestions":"338"},{"ruleId":"335","severity":1,"message":"336","line":89,"column":7,"nodeType":"337","endLine":89,"endColumn":26,"suggestions":"339"},{"ruleId":"335","severity":1,"message":"336","line":99,"column":7,"nodeType":"337","endLine":99,"endColumn":28,"suggestions":"340"},{"ruleId":"335","severity":1,"message":"336","line":129,"column":7,"nodeType":"337","endLine":129,"endColumn":78,"suggestions":"341"},{"ruleId":"303","severity":1,"message":"304","line":79,"column":33,"nodeType":"305","endLine":79,"endColumn":116},"no-native-reassign",["342"],"no-negated-in-lhs",["343"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["344","345"],["346","347"],"no-unused-vars","'emailjs' is defined but never used.","Identifier","unusedVar",["348","349"],["350","351"],["352","353"],["354","355"],"'NavLink' is defined but never used.","'statusConfirmPassword' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'DataGrid' is defined but never used.","'columns' is assigned a value but never used.","'rows' is assigned a value but never used.","'SplitButton' is defined but never used.","'BiAddToQueue' is defined but never used.","'setValue' is assigned a value but never used.","'date' is assigned a value but never used.","'value1' is assigned a value but never used.","'InputLabel' is defined but never used.","'Modal' is defined but never used.","'GoodImage' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","Expected '!==' and instead saw '!='.","'TextField' is defined but never used.","'BiPlusMedical' is defined but never used.","'axios' is defined but never used.","'Grid' is defined but never used.","'Stack' is defined but never used.","'BiEdit' is defined but never used.","'Alert' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'inputProps'. Either include it or remove the dependency array.","ArrayExpression",["356"],["357"],["358"],["359"],"no-global-assign","no-unsafe-negation",{"messageId":"360","fix":"361","desc":"362"},{"messageId":"363","fix":"364","desc":"365"},{"messageId":"360","fix":"366","desc":"362"},{"messageId":"363","fix":"367","desc":"365"},{"messageId":"360","fix":"368","desc":"362"},{"messageId":"363","fix":"369","desc":"365"},{"messageId":"360","fix":"370","desc":"362"},{"messageId":"363","fix":"371","desc":"365"},{"messageId":"360","fix":"372","desc":"362"},{"messageId":"363","fix":"373","desc":"365"},{"messageId":"360","fix":"374","desc":"362"},{"messageId":"363","fix":"375","desc":"365"},{"desc":"376","fix":"377"},{"desc":"376","fix":"378"},{"desc":"376","fix":"379"},{"desc":"380","fix":"381"},"removeEscape",{"range":"382","text":"383"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"384","text":"385"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"386","text":"383"},{"range":"387","text":"385"},{"range":"388","text":"383"},{"range":"389","text":"385"},{"range":"390","text":"383"},{"range":"391","text":"385"},{"range":"392","text":"383"},{"range":"393","text":"385"},{"range":"394","text":"383"},{"range":"395","text":"385"},"Update the dependencies array to be: [inputProps]",{"range":"396","text":"397"},{"range":"398","text":"397"},{"range":"399","text":"397"},"Update the dependencies array to be: [cancelOnEscape, inputProps, handleRequestSearch, handleCancel]",{"range":"400","text":"401"},[6336,6337],"",[6336,6336],"\\",[6352,6353],[6352,6352],[3735,3736],[3735,3735],[3751,3752],[3751,3751],[4616,4617],[4616,4616],[4632,4633],[4632,4632],[2067,2087],"[inputProps]",[2288,2307],[2525,2546],[3292,3363],"[cancelOnEscape, inputProps, handleRequestSearch, handleCancel]"]