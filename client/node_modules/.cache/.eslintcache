[{"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/index.js":"1","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Store.js":"2","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/App.js":"3","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/TypeStatusReducer.js":"4","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/LoginStatusReducer.js":"5","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ProvinceReducer.js":"6","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ObjectEditShiftReducer.js":"7","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ListShiftReducer.js":"8","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusEditShiftReducer.js":"9","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusDarkModeReducer.js":"10","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/InfoUserReducer.js":"11","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddShiftReducer.js":"12","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Router/DirectionURL.js":"13","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Body.js":"14","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/Login.js":"15","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/Register.js":"16","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/ForgotPassword.js":"17","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/LoginWithEmployee.js":"18","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Router/DashboardURL.js":"19","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Partials/SideNavBar.js":"20","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/DashBoard.js":"21","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/ReiceiptManager.js":"22","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodManager.js":"23","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeeManager.js":"24","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/Profile.js":"25","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileSetting.js":"26","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ModalAdd.js":"27","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ChangePassword.js":"28","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ListShift.js":"29","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileDetail.js":"30","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileHeader.js":"31","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/DarkMode.js":"32"},{"size":295,"mtime":1633526918199,"results":"33","hashOfConfig":"34"},{"size":1002,"mtime":1634050541312,"results":"35","hashOfConfig":"34"},{"size":1030,"mtime":1634097955057,"results":"36","hashOfConfig":"34"},{"size":331,"mtime":1633861365892,"results":"37","hashOfConfig":"34"},{"size":284,"mtime":1633526918189,"results":"38","hashOfConfig":"34"},{"size":363,"mtime":1634050541311,"results":"39","hashOfConfig":"34"},{"size":330,"mtime":1634050541311,"results":"40","hashOfConfig":"34"},{"size":1460,"mtime":1634053530271,"results":"41","hashOfConfig":"34"},{"size":302,"mtime":1634050541312,"results":"42","hashOfConfig":"34"},{"size":292,"mtime":1634050541312,"results":"43","hashOfConfig":"34"},{"size":1294,"mtime":1634097955063,"results":"44","hashOfConfig":"34"},{"size":293,"mtime":1633939930791,"results":"45","hashOfConfig":"34"},{"size":2136,"mtime":1633861365892,"results":"46","hashOfConfig":"34"},{"size":1125,"mtime":1634050541289,"results":"47","hashOfConfig":"34"},{"size":14285,"mtime":1634053530258,"results":"48","hashOfConfig":"34"},{"size":16215,"mtime":1634053530259,"results":"49","hashOfConfig":"34"},{"size":12895,"mtime":1633861365888,"results":"50","hashOfConfig":"34"},{"size":8073,"mtime":1634050541304,"results":"51","hashOfConfig":"34"},{"size":1017,"mtime":1633939930793,"results":"52","hashOfConfig":"34"},{"size":3864,"mtime":1633939930780,"results":"53","hashOfConfig":"34"},{"size":224,"mtime":1633939930776,"results":"54","hashOfConfig":"34"},{"size":234,"mtime":1633526918188,"results":"55","hashOfConfig":"34"},{"size":30637,"mtime":1633939930778,"results":"56","hashOfConfig":"34"},{"size":238,"mtime":1633939930777,"results":"57","hashOfConfig":"34"},{"size":2255,"mtime":1634050541307,"results":"58","hashOfConfig":"34"},{"size":880,"mtime":1633939930786,"results":"59","hashOfConfig":"34"},{"size":9323,"mtime":1634053530261,"results":"60","hashOfConfig":"34"},{"size":6548,"mtime":1634053530260,"results":"61","hashOfConfig":"34"},{"size":6589,"mtime":1634053530261,"results":"62","hashOfConfig":"34"},{"size":14951,"mtime":1634095985535,"results":"63","hashOfConfig":"34"},{"size":3602,"mtime":1634097955061,"results":"64","hashOfConfig":"34"},{"size":3114,"mtime":1634050541305,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1evuik7",{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/index.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Store.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/App.js",["139"],"import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport DirectionURL from './Router/DirectionURL';\nimport './CSS/App.css'\nimport { connect } from 'react-redux'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  async componentWillMount() {\n    this.props.changeLoginStatus()\n    if (localStorage.getItem('token')) {\n      if (localStorage.getItem('token') !== \"\") {\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <DirectionURL></DirectionURL>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isLogin: state.loginStatus,\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    changeLoginStatus: () => {\n      dispatch({\n        type: \"CHANGE_LOGIN_STATUS\",\n      });\n    },\n    updateProvince: (data) => {\n      dispatch({\n        type: \"UPDATE_DATA\",\n        data: data,\n      })\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/TypeStatusReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/LoginStatusReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ProvinceReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ObjectEditShiftReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ListShiftReducer.js",["140"],"import { act } from \"react-dom/test-utils\";\n\nconst listShiftInitialState = [\n    {\n        description: \"Ca 1\",\n        from: \"0:36 PM\",\n        id: \"V8GOL1\",\n        to: \"3:36 PM\",\n        salary: 20000,\n    },\n    {\n        description: \"Ca 2\",\n        from: \"0:36 PM\",\n        id: \"V8GOc1\",\n        to: \"3:36 PM\",\n        salary: 20000,\n    },\n    {\n        description: \"Ca 3\",\n        from: \"0:36 PM\",\n        id: \"V8sOL1\",\n        to: \"3:36 PM\",\n        salary: 20000,\n    },\n    {\n        description: \"Ca 4\",\n        from: \"0:36 PM\",\n        id: \"V8cOL1\",\n        to: \"3:36 PM\",\n        salary: 20000,\n    }\n],\n\n    listShiftReducer = (state = listShiftInitialState, action) => {\n        switch (action.type) {\n            case \"DELETE_SHIFT\":\n                return state.filter((value, key) => (value.id.toString() !== action.idShift));\n            case \"ADD_SHIFT\":\n                return [...state, action.newShift]\n            case \"OBJECT_UPDATE_SHIFT\":\n                state.forEach(item => {\n                    if(item.id === action.data.id) {\n                        item.description = action.data.description;\n                        item.salary = action.data.salary;\n                        item.from = action.data.from;\n                        item.to = action.data.to;\n                    }\n                })\n                return state\n            default:\n                return state\n        }\n    }\n\nexport default listShiftReducer;","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusEditShiftReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusDarkModeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/InfoUserReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddShiftReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Router/DirectionURL.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Body.js",["141"],"import React, { Component } from 'react';\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport DashboardURL from '../Router/DashboardURL';\nimport {connect} from 'react-redux';\nimport SideNavBar from './Partials/SideNavBar';\n\nclass Body extends Component {\n    render() {\n        return (\n            <div>\n                <SideNavBar/>\n                <div style={{width: 'calc(100% - 224px)',\n                position: 'fixed', top: 0, right: 0, backgroundColor: this.props.statusDarkmode ? 'rgb(221,235,255)' : 'rgba(20,20,20,0.4)', borderLeft: '2px solid #99999975',\n                }}>\n                    <DashboardURL></DashboardURL>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isLogin: state.loginStatus,\n        statusDarkmode: state.statusDarkmode,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeLoginStatus: () => {\n            dispatch({\n                type: \"CHANGE_LOGIN_STATUS\",\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Body);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/Login.js",["142","143"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../CSS/Login.css'\nimport { BsFillEnvelopeFill, BsLockFill } from \"react-icons/bs\";\nimport { FiChevronRight, FiXSquare } from \"react-icons/fi\";\nimport { BiUser } from \"react-icons/bi\";\nimport { Avatar } from '@mui/material'\nimport { IconContext } from \"react-icons\";\nimport { GoogleLogin } from 'react-google-login';\nimport axios from 'axios';\nimport Alert from '@mui/material/Alert';\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            appId: \"543752153590340\",\n            clientId: \"826925109796-mi95l41fi57bdlolpvnfdg5bpt9oc81h.apps.googleusercontent.com\",\n            statusFailed: false,\n            statusSucces: false,\n        }\n    }\n\n    message = \"Login success\";\n\n    // Login with google\n    onLoginSuccess = (res) => {\n        this.OutAlert();\n        axios.post(`http://localhost:5000/sign-in-with-google`, res.profileObj)\n            .then(res => {\n                console.log(\"thành công\");\n                switch (res.data.status) {\n                    case 1:\n                        this.message = res.data.message;\n                        this.setState({\n                            statusSucces: true,\n                        })\n                        localStorage.setItem('token', res.data.token);\n                        const data = {\n                            email: res.data.data._id,\n                            firstName: res.data.data.firstName ? res.data.data.firstName : \"\",\n                            lastName: res.data.data.lastName ? res.data.data.lastName : \"\",\n                            old: res.data.data.old ? res.data.data.old : \"\",\n                            gender: res.data.data.gender ? res.data.data.gender : \"0\",\n                            storeName: res.data.data.storeName ? res.data.data.storeName : \"\",\n                            tel: res.data.data.phoneNumber ? res.data.data.phoneNumber : \"\",\n                            province: res.data.data.province ? res.data.data.province : \"0\",\n                            district: res.data.data.district ? res.data.data.district : \"0\",\n                            address: res.data.data.address ? res.data.data.address : \"\",\n                        }\n                        this.props.updateProfile(data);\n                        this.props.changeLoginStatus();\n                        break;\n                    case -1:\n                        this.message = res.data.message;\n                        this.setState({\n                            statusFailed: true,\n                        })\n                        break;\n                    default:\n                        break;\n                }\n            })\n            .catch(err => {\n                this.message = \"Error, server don't active\";\n                this.setState({\n                    statusFailed: true,\n                })\n            })\n    }\n\n    onFailureSuccess = (res) => {\n        this.setState({\n            statusFailed: true,\n            statusSucces: false,\n        })\n    }\n\n    // Out Alert\n    OutAlert = () => {\n        this.setState({\n            statusFailed: false,\n            statusSucces: false,\n        })\n    }\n\n    // Check để thay đổi trạng thái đã login hay chưa\n    isLoginCheck = (e) => {\n        this.OutAlert();\n        if (this.blurEmail() && this.blurPassword()) {\n            axios.post(`http://localhost:5000/sign-in-with-gmail-password`, {\n                email: document.querySelector('#email').value,\n                password: document.getElementById('password').value,\n            })\n                .then(res => {\n                    console.log(res.data);\n                    console.log(res.data.email);\n                    switch (res.data.status) {\n                        case 1:\n                            this.message = res.data.message;\n                            this.setState({\n                                statusSucces: true,\n                            })\n                            localStorage.setItem('token', res.data.token);\n                            const data = {\n                                email: res.data.email? res.data.email : res.data.data._id,\n                                firstName: res.data.data.firstName ? res.data.data.firstName : \"cc\",\n                                lastName: res.data.data.lastName ? res.data.data.lastName : \"abc\",\n                                old: res.data.data.old ? res.data.data.old : \"\",\n                                gender: res.data.data.gender ? res.data.data.gender : \"0\",\n                                storeName: res.data.data.storeName ? res.data.data.storeName : \"\",\n                                tel: res.data.data.phoneNumber ? res.data.data.phoneNumber : \"\",\n                                salary: res.data.data.salary ? res.data.data.salary : \"\",\n                                province: res.data.data.province ? res.data.data.province : \"0\",\n                                district: res.data.data.district ? res.data.data.district : \"0\",\n                                address: res.data.data.address ? res.data.data.address : \"\",\n                            }\n                            this.props.updateProfile(data);\n                            this.props.changeLoginStatus();\n                            break;\n                        case -1:\n                            this.message = res.data.message;\n                            this.setState({\n                                statusFailed: true,\n                            })\n                            break;\n                        default:\n                            break;\n                    }\n                })\n                .catch(err => {\n                    this.message = \"Enter again\";\n                    this.setState({\n                        statusFailed: true,\n                    })\n                })\n        }\n    }\n\n\n    // Handle user : blur , change in input\n    blurEmail = () => {\n        var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const event = document.querySelector('#email');\n        let elementValue = event.value;\n        const formGroup = event.parentElement.parentElement;\n        // check validate\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else if (!regex.test(elementValue)) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n\n    blurPassword = () => {\n        const e = document.getElementById('password');\n        let elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\n            return false;\n        } else if (e.value.length < 6) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    changeInput = (e) => {\n        const formGroup = e.target.parentElement.parentElement;\n        formGroup.classList.remove('invalid');\n        formGroup.querySelector('.form-message').innerText = \"\";\n    }\n\n\n    render() {\n        const enterPress = this.isLoginCheck;\n        document.onkeydown = function (e) {\n            switch (e.which) {\n                case 13:\n                    enterPress(e);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return (\n            <div className=\"Login\">\n                <div className=\"form-login\">\n                    <div className=\"auth-form\">\n                        <Avatar className=\"auth-form__avatar\">\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\n                                <BiUser></BiUser>\n                            </IconContext.Provider>\n                        </Avatar>\n                        <div className=\"auth-form__container\">\n                            <div className=\"auth-form__header\">\n                                <div className=\"auth-form__heading\">Login</div>\n                                <NavLink to=\"/register\" className=\"auth-form__switch-btn\">Register <FiChevronRight className=\"auth-form__arrow-return\"></FiChevronRight></NavLink>\n                            </div>\n                        </div>\n                        <div className=\"auth-form__body\">\n                            <form action=\"/login-submit\" method=\"POST\" id=\"login-form\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                                    <div className=\"input-custom\">\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"VD: abc@gmail.com\" type=\"text\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={(e) => this.blurPassword(e)} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"auth-form__support\">\n                                    <span className=\"auth-form__support-forget\">\n                                        <NavLink onclick=\"\" to=\"/forgot\" className=\"auth-form__switch-btn\">Forgot password</NavLink>\n                                    </span>\n                                    <span className=\"auth-form__help-separate\" />\n                                    <span className=\"auth-form__support-need-support\">Need help?</span>\n                                </div>\n                                <div className=\"auth-form__support\">\n                                    <GoogleLogin\n                                        className=\"auth-form__support-google\"\n                                        clientId={this.state.clientId}\n                                        buttonText=\"Login with Google\"\n                                        onSuccess={this.onLoginSuccess}\n                                        onFailure={this.onFailureSuccess}\n                                        cookiePolicy={'single_host_origin'}\n                                    />\n                                </div>\n                                <div className=\"auth-form__btn\">\n                                    <div to=\"/home\" id=\"navlink\" onClick={(e) => this.isLoginCheck(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign In</div>\n                                </div>\n                                <div className=\"auth-form__btn\">\n                                    <NavLink to=\"/employee\" id=\"navlink\" className=\"auth-form__btn-log-in auth-form__switch-btn auth-form-employee\">\n                                        Employee\n                                        <FiChevronRight className=\"auth-form__arrow-return\"></FiChevronRight>\n                                    </NavLink>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                {this.state.statusSucces ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isLogin: state.loginStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeLoginStatus: () => {\n            dispatch({\n                type: \"CHANGE_LOGIN_STATUS\",\n            });\n        },\n        updateProfile: (data) => {\n            dispatch({\n                type: \"UPDATA_DATA_USER\",\n                email: data.email,\n                firstName: data.firstName,\n                lastName: data.lastName,\n                old: data.old,\n                gender: data.gender,\n                storeName: data.storeName,\n                tel: data.tel,\n                province: data.province,\n                district: data.district,\n                address: data.address,\n            })\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/Register.js",["144","145"],"import React, { Component } from 'react';\nimport '../../CSS/Login.css'\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport Avatar from '@mui/material/Avatar'\nimport { IconContext } from \"react-icons\";\nimport { FiChevronLeft, FiUserPlus, FiXSquare } from \"react-icons/fi\";\nimport { BsFillEnvelopeFill, BsLockFill, BsCodeSlash } from \"react-icons/bs\";\nimport { FaPhoneSquare } from \"react-icons/fa\";\nimport axios from 'axios';\nimport Alert from '@mui/material/Alert';\nimport emailjs from 'emailjs-com';\nvar bcrypt = require('bcryptjs');\n\n\nclass Register extends Component {\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            code: \"\",\n            statusSendCode: true,\n            statusFailed: false,\n            statusSuccess: false,\n        }\n    }\n\n    message = \"\";\n\n    // Send code tới người dùng\n    sendCode = (a = this.makeCode(6)) => {\n        this.setState({\n            code: a,\n        })\n        emailjs.init(\"user_K1g5N5hUDI0rjsa1uRoI4\");\n        emailjs.send(\"gmail_main\", \"template_plasdgf\", {\n            To_mail: `${document.getElementById('email').value}`,\n            code: `${a}`,\n        })\n            .then((response) => {\n                console.log('SUCCESS!', response.status, response.text);\n            }, (err) => {\n                console.log('FAILED...', err);\n            });\n    }\n\n    // status SignUp \n    SignUp = (e) => {\n        this.OutAlert();\n        if (this.blurEmail() && this.blurCode() && this.blurPassword() && this.blurRePassword() && this.blurTel()) {\n            axios.post(`http://localhost:5000/register-with-email`, {\n                email: document.getElementById('email').value,\n                password: this.hash(document.getElementById('password').value),\n                tel: document.getElementById('tel').value,\n            })\n                .then(res => {\n                    console.log(res.data);\n                    switch (res.data.status) {\n                        case 1:\n                            this.message = res.data.message;\n                            this.setState({\n                                statusSuccess: true,\n                            })\n                            localStorage.setItem('token', res.data.token);\n                            const data = {\n                                email: res.data.email,\n                                firstName: \"\",\n                                lastName:  \"\",\n                                old:  \"\",\n                                gender: \"0\",\n                                storeName: \"\",\n                                tel: document.getElementById('tel').value,\n                                province: \"0\",\n                                district:  \"0\",\n                                address:  \"\",\n                            }\n                            this.props.updateProfile(data);\n                            this.props.changeLoginStatus();\n                            break;\n                        case -1:\n                            this.message = res.data.message;;\n                            this.setState({\n                                statusFailed: true,\n                            })\n                            break;\n                        default:\n                            break;\n                    }\n                })\n                .catch(err => {\n                    this.message = \"Error system\";\n                    this.setState({\n                        statusFailed: true,\n                    })\n                })\n\n        }\n    }\n\n    // Out Alert\n    OutAlert = () => {\n        this.setState({\n            statusFailed: false,\n            statusSuccess: false,\n        })\n    }\n\n    // Tạo mã code cho người dùng xác nhận\n    makeCode = (length) => {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() *\n                charactersLength));\n        }\n        return result;\n    }\n\n    // Hashpassword\n    hash = (pass) => {\n        var hash = bcrypt.hashSync(pass, 12)\n        return hash;\n    }\n\n\n    // Handle user : blur, change in input\n    blurEmail = () => {\n        const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const e = document.getElementById('email');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            this.setState({\n                statusSendCode: true,\n            })\n            return false;\n        } else if (!regex.test(elementValue)) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\n            this.setState({\n                statusSendCode: true,\n            })\n            return false\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            this.setState({\n                statusSendCode: false,\n            })\n            return true;\n        }\n    }\n\n    blurCode = () => {\n        const e = document.getElementById('code');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (this.state.code === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please press Send Code\"\n            return false\n        } else if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter code here\"\n            return false\n        } else if (elementValue !== this.state.code) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Code is incorrect\"\n            return false\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    blurPassword = () => {\n        const e = document.getElementById('password');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\n            return false;\n        } else if (e.value.length < 6) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    blurRePassword = () => {\n        const e = document.getElementById('re-password')\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else if (document.getElementById('password').value !== elementValue) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Re-password not correct\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true\n        }\n    }\n\n    blurTel = () => {\n        const e = document.getElementById('tel');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        const regex = /^\\d+$/;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else if (!regex.test(elementValue)) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Phone is not in the correct format\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    changeInput = (e) => {\n        const formGroup = e.target.parentElement.parentElement;\n        formGroup.classList.remove('invalid');\n        formGroup.querySelector('.form-message').innerText = \"\";\n    }\n\n    render() {\n        const enterPress = this.SignUp;\n        document.onkeydown = function (e) {\n            switch (e.which) {\n                case 13:\n                    enterPress(e);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return (\n            <div className=\"Login\">\n                <div className=\"form-register\">\n                    <div className=\"auth-form\">\n                        <Avatar className=\"auth-form__avatar\">\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\n                                <FiUserPlus></FiUserPlus>\n                            </IconContext.Provider>\n                        </Avatar>\n                        <div className=\"auth-form__container\">\n                            <div className=\"auth-form__header\">\n                                <div className=\"auth-form__heading\">Register</div>\n                                <NavLink to=\"/login\" className=\"auth-form__switch-btn\"> <FiChevronLeft className=\"auth-form__arrow-return\"></FiChevronLeft>Login</NavLink>\n                            </div>\n                        </div>\n                        <div className=\"auth-form__body\">\n                            <form action=\"/register-submit\" method=\"post\" id=\"register-form\">\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"VD: abc@gmail.com\" type=\"text\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span><BsCodeSlash className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurCode()} name=\"code\" rules=\"required|email\" id=\"code\" placeholder=\"Ex: ABC321\" type=\"text\" />\n                                        <button type=\"button\" disabled={this.state.statusSendCode} onClick={() => this.sendCode()} class=\"btn btn-primary disabel send-code\">SEND</button>\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurPassword()} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurRePassword()} name=\"re-password\" id=\"re-password\" placeholder=\"Emter re-password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <FaPhoneSquare className=\"input-custom-icon\" ></FaPhoneSquare>\n                                        </span>\n                                        <input className=\"form-control\" onBlur={(e) => this.blurTel(e)} onChange={(e) => this.changeInput(e)} name=\"tel\" rules=\"required\" id=\"tel\" placeholder=\"Ex: 0303030303\" type=\"tel\" />\n\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"register-description\">Bằng cách ấn vào nút\n                                    <span className=\"register-description__keyword\">“ĐĂNG KÝ”</span>\n                                    , tôi đồng ý với\n                                    <span className=\"register-description__keyword\">Điều Khoản Sử Dụng</span> và\n                                    <div className=\"register-description__keyword\"> Chính Sách Bảo Mật</div>\n                                </div>\n                                <div className=\"auth-form__btn\">\n                                    <div onClick={(e) => this.SignUp(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign Up</div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div >\n                {this.state.statusSuccess ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isLogin: state.loginStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeLoginStatus: () => {\n            dispatch({\n                type: \"CHANGE_LOGIN_STATUS\",\n            });\n        },\n        updateProfile: (data) => {\n            dispatch({\n                type: \"UPDATA_DATA_USER\",\n                email: data.email,\n                firstName: data.firstName,\n                lastName: data.lastName,\n                old: data.old,\n                gender: data.gender,\n                storeName: data.storeName,\n                tel: data.tel,\n                province: data.province,\n                district: data.district,\n                address: data.address,\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/ForgotPassword.js",["146","147"],"import React, { Component } from 'react';\nimport Avatar from '@mui/material/Avatar'\nimport { IconContext } from \"react-icons\";\nimport { FiSend, FiXSquare } from \"react-icons/fi\";\nimport { BsFillEnvelopeFill, BsLockFill, BsBoxArrowInLeft, BsCodeSlash } from \"react-icons/bs\";\nimport emailjs from 'emailjs-com';\nimport Alert from '@mui/material/Alert';\nimport axios from 'axios';\nimport {\n    NavLink\n} from \"react-router-dom\";\nvar bcrypt = require('bcryptjs');\n\n\nclass ForgotPassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: \"\",\n            statusSendCode: true,\n            statusFailed: false,\n            statusSuccess: false,\n        }\n    }\n\n    message = \"\"\n\n    // Send code tới người dùng\n    sendCode = (a = this.makeCode(6)) => {\n        this.setState({\n            code: a,\n        })\n        emailjs.init(\"user_K1g5N5hUDI0rjsa1uRoI4\");\n        emailjs.send(\"gmail_main\", \"template_plasdgf\", {\n            To_mail: `${document.querySelector('#email').value}`,\n            code: `${a}`,\n        })\n            .then((response) => {\n                console.log('SUCCESS!', response.status, response.text);\n            }, (err) => {\n                console.log('FAILED...', err);\n            });\n    }\n\n    // Tạo code để xác nhận\n    makeCode = (length) => {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() *\n                charactersLength));\n        }\n        return result;\n    }\n\n    // Hashpassword\n    hash = (pass) => {\n        var hash = bcrypt.hashSync(pass, 12)\n        return hash;\n    }\n\n\n    // Out Alert\n    OutAlert = () => {\n        this.setState({\n            statusFailed: false,\n            statusSuccess: false,\n        })\n    }\n\n    //Check tìm lại mật khẩu\n    findPassword = (e) => {\n        this.OutAlert();\n        if (this.blurEmail() && this.blurCode() && this.blurPassword() && this.blurRePassword()) {\n            const form = document.getElementById('findpass-form');\n            axios.post(`http://localhost:5000/find-password`, {\n                email: document.querySelector('#email').value,\n                password: this.hash(document.getElementById('password').value),\n            })\n                .then(res => {\n                    form.reset();\n                    console.log(res.data.status);\n                    switch (res.data.status) {\n                        case 1:\n                            this.message = res.data.message;\n                            this.setState({\n                                statusSuccess: true,\n                            })\n                            break;\n                        case -1:\n                            this.message = res.data.message;\n                            this.setState({\n                                statusFailed: true,\n                            })\n                            break;\n                        default:\n                            break;\n                    }\n                })\n                .catch(err => {\n                    this.message = \"Error system\";\n                    this.setState({\n                        statusFailed: true,\n                    })\n                })\n        }\n    }\n\n\n    // Handle user blue change in input\n    blurEmail = () => {\n        var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const event = document.querySelector('#email');\n        const elementValue = event.value;\n        const formGroup = event.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            this.setState({\n                statusSendCode: true,\n            })\n            return false;\n        } else if (!regex.test(elementValue)) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\n            this.setState({\n                statusSendCode: true,\n            })\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            this.setState({\n                statusSendCode: false,\n            })\n            return true;\n        }\n    }\n\n    blurPassword = () => {\n        const e = document.getElementById('password');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\n            return false;\n        } else if (e.value.length < 6) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    blurCode = () => {\n        const e = document.getElementById('code');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (this.state.code === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please press Send Code\"\n            return false\n        } else if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter code here\"\n            return false\n        } else if (elementValue !== this.state.code) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Code is incorrect\"\n            return false\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    blurRePassword = () => {\n        const e = document.getElementById('re-password')\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else if (document.getElementById('password').value !== elementValue) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Re-password not correct\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true\n        }\n    }\n\n    changeInput = (e) => {\n        const formGroup = e.target.parentElement.parentElement;\n        formGroup.classList.remove('invalid');\n        formGroup.querySelector('.form-message').innerText = \"\";\n    }\n\n    render() {\n        const enterPress = this.findPassword;\n        document.onkeydown = function (e) {\n            switch (e.which) {\n                case 13:\n                    enterPress(e);\n                    break;\n                default:\n                    break;\n            }\n        }\n        return (\n            <div className=\"Login\">\n                <div className=\"form-findpass\">\n                    <div className=\"auth-form\">\n                        <Avatar className=\"auth-form__avatar\">\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\n                                <FiSend></FiSend>\n                            </IconContext.Provider>\n                        </Avatar>\n                        <div className=\"auth-form__container\">\n                            <div className=\"auth-form__header\">\n                                <div className=\"auth-form__heading\">Find password</div>\n                                <NavLink onclick=\"\" to=\"/login\" className=\"auth-form__switch-btn\"><BsBoxArrowInLeft className=\"arrow-return\"></BsBoxArrowInLeft></NavLink>\n                            </div>\n                        </div>\n                        <div className=\"auth-form__body\">\n                            <form action=\"/findpass-submit?_method=PUT\" method=\"POST\" id=\"findpass-form\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                                    <div className=\"input-custom\">\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"Ex: abc@gmail.com\" type=\"text\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"code\" className=\"form-label\">Code</label>\n                                    <div className=\"input-custom\">\n                                        <span><BsCodeSlash className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurCode()} name=\"code\" rules=\"required|email\" id=\"code\" placeholder=\"Ex: ABC321\" type=\"text\" />\n                                        <button type=\"button\" disabled={this.state.statusSendCode} onClick={() => this.sendCode()} class=\"btn btn-primary disabel send-code\">SEND</button>\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\" className=\"form-label\">New password</label>\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurPassword()} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\" className=\"form-label\">Re-password</label>\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurRePassword()} name=\"password\" rules=\"required|min:6\" id=\"re-password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"auth-form__btn\">\n                                    <div onClick={(e) => this.findPassword(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Find Password</div>\n                                </div>\n\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                {this.state.statusSuccess ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n            </div>\n        );\n    }\n}\n\n\n\n\nexport default ForgotPassword;\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/LoginWithEmployee.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Router/DashboardURL.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Partials/SideNavBar.js",["148","149"],"import React, { Component } from 'react';\n\nimport {connect} from 'react-redux';\nimport { \n    AiOutlineDashboard,\n    AiFillDashboard,\n    AiOutlineContainer,\n    AiFillContainer\n} from \"react-icons/ai\";\nimport { BsInfoCircleFill} from \"react-icons/bs\";\nimport { \n    IoPeopleOutline,\n    IoPeopleSharp,\n    IoReceiptOutline,\n    IoReceiptSharp\n} from \"react-icons/io5\";\nimport { RiProfileFill, RiProfileLine } from \"react-icons/ri\";\nimport { FaSignOutAlt } from \"react-icons/fa\";\n\nimport Avatar from '../../img/avatar_default.jpg';\nimport { NavLink } from 'react-router-dom';\n\nimport '../../CSS/SideNavBar.css'\n\n\nclass SideNavBar extends Component {\n    render() {\n        return (\n            <div class=\"navbar-container\">\n                <div class=\"navibar sidebar\">\n                    <div class=\"nav-heading\">\n                        <div class=\"navbar-heading-container\">\n                            <img src={Avatar} style ={{width: 40, height: 40, borderRadius: '100%'}}></img>\n                            <span class=\"user-name\">Đào Xuân Trường</span>\n                        </div>\n                    </div>\n                    <div class=\"nav-container\">\n                        <NavLink className=\"nav-item\" to=\"/dashboard\">\n                            <AiOutlineDashboard class=\"nav-item-icon\"/>\n                            <AiFillDashboard class=\"nav-item-icon icon-activate\"/>   \n                            <span>Dashboard</span>\n                        </NavLink>\n                        <NavLink to='/profile' className=\"nav-item\" href='#'>\n                            <RiProfileLine class=\"nav-item-icon\"/>\n                            <RiProfileFill class=\"nav-item-icon icon-activate\"/>\n                            <span>Profile</span>\n                        </NavLink>\n                        <NavLink to='/employeemanager' className=\"nav-item\" href='#'>\n                            <IoPeopleOutline class=\"nav-item-icon\"/>\n                            <IoPeopleSharp class=\"nav-item-icon icon-activate\"/>\n                            <span>Employee Manager</span>\n                        </NavLink>\n                        <NavLink to=\"/goodmanager\" className=\"nav-item\" href='#'>\n                            <AiOutlineContainer className=\"nav-item-icon\"/>\n                            <AiFillContainer className=\"nav-item-icon icon-activate\"/>\n                            <span>Goods Manager</span>\n                        </NavLink>\n                        <NavLink to=\"/receiptmanager\" className=\"nav-item\" href='#'>\n                            <IoReceiptOutline class=\"nav-item-icon\"/>\n                            <IoReceiptSharp class=\"nav-item-icon icon-activate\"/>\n                            <span>Receipt Manager</span>\n                        </NavLink>\n                    </div>\n                    \n                    <div class=\"nav-footer\">\n                        <NavLink to=\"/login\" onClick={() => this.props.changeLoginStatus()} className=\"nav-item\" style={{flex: 5}}>\n                            <FaSignOutAlt class=\"nav-item-icon\"/>\n                            <span>Sign out</span>\n                        </NavLink>\n                        <a href=\"#\" className=\"nav-item\" style={{flex: 4}}>\n                            <BsInfoCircleFill class=\"nav-item-icon\"/>\n                            <span>About</span>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        );\n    }   \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isLogin: state.loginStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeLoginStatus: () => {\n            dispatch({\n                type: \"CHANGE_LOGIN_STATUS\",\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavBar);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/DashBoard.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/ReiceiptManager.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodManager.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeeManager.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/Profile.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileSetting.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ModalAdd.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ChangePassword.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ListShift.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileDetail.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileHeader.js",["150"],"import React, { Component } from 'react';\nimport avatarImg from '../../img/avatar_default.jpg'\nimport Divider from '@mui/material/Divider';\nimport { FaTelegramPlane } from \"react-icons/fa\";\nimport { connect } from 'react-redux'\nimport AvatarEditor from 'react-avatar-editor'\nimport axios from 'axios'\nimport { Image } from 'cloudinary-react'\n\nclass ProfileHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageSelect: \"null\",\n        }\n    }\n\n\n\n    profileImageChange = (fileChangeEvent) => {\n        this.setState({\n            imageSelect: fileChangeEvent.target.files[0],\n        })\n        const file = fileChangeEvent.target.files[0];\n        const { type } = file;\n        if (!(type.endsWith('jpeg') || type.endsWith('png') || type.endsWith('jpg') || type.endsWith('gif'))) {\n        } else {\n            const formData = new FormData();\n            formData.append(\"file\", fileChangeEvent.target.files[0])\n            formData.append(\"upload_preset\", \"qqqhcaa3\");\n            axios.post(`https://api.cloudinary.com/v1_1/databaseimg/image/upload`, formData)\n                .then(res => {\n                    console.log(res.data.url);\n                    this.props.updateAvatar(res.data.url);\n                    axios.post(`http://localhost:5000/api/update-avatar`,{\n                        _id: this.props.infoUser.email,\n                        avatar: res.data.url,\n                        token: localStorage.getItem('token'),\n                    }).then(res => {\n                        console.log(\"Thành công\");\n                    }).catch(err => {\n                        console.log(\"Lỗi\");\n                    })\n                })\n                .catch(err => {\n                    console.log(\"Thất bại\");\n                })\n\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"profile-header\" style={{ width: '100%', height: '350px' }}>\n                <label className=\"profile-header__avatar\" for=\"profile-header-update-avatar\" style={{ borderRadius: '100%', overflow: 'hidden', marginTop: '15px ' }}>\n                    <Image style={{ width: '100px', height: '100px' }} cloudName=\"databaseimg\" publicId={this.props.infoUser.avatar ? this.props.infoUser.avatar : avatarImg}></Image>\n                </label>\n                {/* Ẩn đi */}\n                <input id=\"profile-header-update-avatar\" type=\"file\" style={{ display: 'none' }} accept=\"image/png, image/jpeg\" onChange={(e) => this.profileImageChange(e)}></input>\n                <div className=\"profile-header-des\">\n                    <h2 className=\"profile-header__name\">\n                        {this.props.infoUser.lastName + \" \" + this.props.infoUser.firstName}\n                    </h2>\n                </div>\n                <div style={{ display: 'flex', fontSize: '1rem', color: \"white\" }}>\n                    <FaTelegramPlane className=\"profile-header__icon-tel\"></FaTelegramPlane>\n                    <p className=\"profile-header__tel\">{this.props.infoUser.tel}</p>\n                </div>\n                <Divider className=\"profile-header__divider\"></Divider>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        infoUser: state.infoUser,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        updateAvatar: (avatar) => {\n            dispatch({\n                type: \"UPDATE_AVATAR\",\n                avatar: avatar\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileHeader);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/DarkMode.js",["151","152"],"import * as React from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { styled } from '@mui/system';\nimport { useSwitch } from '@mui/core/SwitchUnstyled';\nimport { LoadingButton } from '@mui/lab';\n\nconst SwitchRoot = styled('span')(`\n  display: inline-block;\n  position: relative;\n  width: 62px;\n  height: 34px;\n  padding: 7px;\n`);\n\nconst SwitchInput = styled('input')(`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  z-index: 1;\n  margin: 0;\n  cursor: pointer;\n`);\n\nconst SwitchThumb = styled('span')(\n  ({ theme }) => `\n  position: absolute;\n  display: block;\n  background-color: ${theme.palette.mode === 'dark' ? '#003892' : '#001e3c'};\n  width: 32px;\n  height: 32px;\n  border-radius: 16px;\n  top: 1px;\n  left: 7px;\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:before {\n    display: block;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    background: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n    '#fff',\n  )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>') center center no-repeat;\n  }\n\n  &.focusVisible {\n    background-color: #79B;\n  }\n\n  &.checked {\n    transform: translateX(16px);\n    \n    &:before {\n      background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n    '#fff',\n  )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>');\n    }\n  }\n`,\n);\n\nconst SwitchTrack = styled('span')(\n  ({ theme }) => `\n  background-color: ${theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be'};\n  border-radius: 10px;\n  width: 100%;\n  height: 100%;\n  display: block;\n`,\n);\n\nfunction MUISwitch(props) {\n  const { getInputProps } = useSwitch(props);\n  const dispatch = useDispatch();\n  const darkmode = useSelector(state => state.statusDarkmode)\n  const changeDarkmode = () => {\n    dispatch({\n      type: \"CHANGE_DARKMODE\",\n    })\n  }\n\n  return (\n    <SwitchRoot  className>\n      <SwitchTrack name=\"switchTrack\">\n        <SwitchThumb name=\"switchThumb\" className={darkmode ? \"checked\": null} />\n      </SwitchTrack>\n      <SwitchInput name=\"darkmode\" onClick={() => changeDarkmode()}  {...getInputProps()} aria-label=\"Demo switch\" />\n    </SwitchRoot>\n  );\n}\n\nexport default function UseSwitchesCustom() {\n  return <MUISwitch defaultChecked />;\n}\n",{"ruleId":"153","severity":1,"message":"154","line":11,"column":3,"nodeType":"155","messageId":"156","endLine":14,"endColumn":4},{"ruleId":"157","severity":1,"message":"158","line":1,"column":10,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"157","severity":1,"message":"161","line":3,"column":5,"nodeType":"159","messageId":"160","endLine":3,"endColumn":12},{"ruleId":"162","severity":1,"message":"163","line":148,"column":28,"nodeType":"164","messageId":"165","endLine":148,"endColumn":29,"suggestions":"166"},{"ruleId":"162","severity":1,"message":"163","line":148,"column":44,"nodeType":"164","messageId":"165","endLine":148,"endColumn":45,"suggestions":"167"},{"ruleId":"162","severity":1,"message":"163","line":131,"column":30,"nodeType":"164","messageId":"165","endLine":131,"endColumn":31,"suggestions":"168"},{"ruleId":"162","severity":1,"message":"163","line":131,"column":46,"nodeType":"164","messageId":"165","endLine":131,"endColumn":47,"suggestions":"169"},{"ruleId":"162","severity":1,"message":"163","line":113,"column":28,"nodeType":"164","messageId":"165","endLine":113,"endColumn":29,"suggestions":"170"},{"ruleId":"162","severity":1,"message":"163","line":113,"column":44,"nodeType":"164","messageId":"165","endLine":113,"endColumn":45,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":33,"column":29,"nodeType":"174","endLine":33,"endColumn":102},{"ruleId":"175","severity":1,"message":"176","line":70,"column":25,"nodeType":"174","endLine":70,"endColumn":76},{"ruleId":"157","severity":1,"message":"177","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":20},{"ruleId":"157","severity":1,"message":"178","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":18},{"ruleId":"157","severity":1,"message":"179","line":6,"column":10,"nodeType":"159","messageId":"160","endLine":6,"endColumn":23},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'act' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["180","181"],["182","183"],["184","185"],["186","187"],["188","189"],["190","191"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'AvatarEditor' is defined but never used.","'useState' is defined but never used.","'LoadingButton' is defined but never used.",{"messageId":"192","fix":"193","desc":"194"},{"messageId":"195","fix":"196","desc":"197"},{"messageId":"192","fix":"198","desc":"194"},{"messageId":"195","fix":"199","desc":"197"},{"messageId":"192","fix":"200","desc":"194"},{"messageId":"195","fix":"201","desc":"197"},{"messageId":"192","fix":"202","desc":"194"},{"messageId":"195","fix":"203","desc":"197"},{"messageId":"192","fix":"204","desc":"194"},{"messageId":"195","fix":"205","desc":"197"},{"messageId":"192","fix":"206","desc":"194"},{"messageId":"195","fix":"207","desc":"197"},"removeEscape",{"range":"208","text":"209"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"210","text":"211"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"212","text":"209"},{"range":"213","text":"211"},{"range":"214","text":"209"},{"range":"215","text":"211"},{"range":"216","text":"209"},{"range":"217","text":"211"},{"range":"218","text":"209"},{"range":"219","text":"211"},{"range":"220","text":"209"},{"range":"221","text":"211"},[6162,6163],"",[6162,6162],"\\",[6178,6179],[6178,6178],[4382,4383],[4382,4382],[4398,4399],[4398,4398],[3519,3520],[3519,3519],[3535,3536],[3535,3535]]