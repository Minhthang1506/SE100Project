[{"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/index.js":"1","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/App.js":"2","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Store.js":"3","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Router/DirectionURL.js":"4","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/TypeStatusReducer.js":"5","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/LoginStatusReducer.js":"6","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/DistrictReducer.js":"7","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ProvinceReducer.js":"8","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ConfirmModalReducer.js":"9","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/RoleReducer.js":"10","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ListShiftReducer.js":"11","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/typeProductReducer.js":"12","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ObjectEditShiftReducer.js":"13","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ListProductReducer.js":"14","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/AlertReducer.js":"15","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/chooseTypeProduct.js":"16","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/InfoUserReducer.js":"17","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/InfoUpdateProduct.js":"18","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/TypeProductValueReducer.js":"19","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusModalConfirmPassword.js":"20","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddShiftReducer.js":"21","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusEditShiftReducer.js":"22","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusEditTypeReducer.js":"23","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusUpdateGoodReducer.js":"24","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusDarkModeReducer.js":"25","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusIsAddTypeReducer.js":"26","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddTypeReducer.js":"27","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusUpdateEmployeeReducer.js":"28","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusYesConfirmReducer.js":"29","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusConfirmReducer.js":"30","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusPayMoneyStatus.js":"31","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddEmployeeReducer.js":"32","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusDeleteConfirmReducer.js":"33","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/SellProduct/ShoppingBagsReducer.js":"34","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/Login.js":"35","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/Register.js":"36","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/LoginWithEmployee.js":"37","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Body.js":"38","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/ForgotPassword.js":"39","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Router/DashboardURL.js":"40","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/ModalConfirmPassword.js":"41","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Partials/SideNavBar.js":"42","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/ReiceiptManager.js":"43","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeeManager.js":"44","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/Profile.js":"45","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/DashBoard.js":"46","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodManager.js":"47","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/GoodImport.js":"48","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/SellProduct.js":"49","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/PayMoneyModal.js":"50","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/UpdateEmployeeModal.js":"51","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/AddEmployeeModal.js":"52","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/GroupButton.js":"53","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/Statistic.js":"54","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/Print.js":"55","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/ShoppingBags.js":"56","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/EditTypeModal.js":"57","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/BaseOptionChart.js":"58","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/ComponentToPrint.js":"59","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/AddTypeModal.js":"60","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/Tabs.js":"61","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/ConfirmModal.js":"62","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/SearchBar.js":"63","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/Calendar.js":"64","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/UpdateGoodModal.js":"65","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/GoodTable.js":"66","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/Regulation.js":"67","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ChangePassword.js":"68","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ModalAdd.js":"69","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileSetting.js":"70","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ListShift.js":"71","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileDetail.js":"72","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileHeader.js":"73","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/fakeData.js":"74","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/EmployeeTableHeader.js":"75","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/EmployeeMoreMenu.js":"76","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/EmployeeToolbar.js":"77","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/Scrollbar.js":"78","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/SearchNotFound.js":"79","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/Label.js":"80","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/Page.js":"81","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/DarkMode.js":"82","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/TableRow.js":"83","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Employee/employeeListReducer.js":"84","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/SellProduct/InfomationBillEdit.js":"85","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/SellProduct/ListRecieptReducer.js":"86","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/SellProduct/StatusShowHistoryRecieptReducer.js":"87","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/SellProduct/StatusEditInfomationBill.js":"88","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Employee/employeeSackedListReducer.js":"89","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Employee/currentEditEmployeeReducer.js":"90","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/UnShiftEmployee.js":"91","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/FixedCalendar.js":"92","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/HistoryReciept.js":"93","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/FixedCalendarCell.js":"94","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/TableReciept.js":"95","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/SackedEmployeeMenu.js":"96"},{"size":295,"mtime":1633526918199,"results":"97","hashOfConfig":"98"},{"size":2742,"mtime":1636527068455,"results":"99","hashOfConfig":"98"},{"size":4095,"mtime":1636527068507,"results":"100","hashOfConfig":"98"},{"size":2136,"mtime":1633861365892,"results":"101","hashOfConfig":"98"},{"size":331,"mtime":1633861365892,"results":"102","hashOfConfig":"98"},{"size":284,"mtime":1633526918189,"results":"103","hashOfConfig":"98"},{"size":364,"mtime":1634708338277,"results":"104","hashOfConfig":"98"},{"size":372,"mtime":1634554437218,"results":"105","hashOfConfig":"98"},{"size":468,"mtime":1634555131980,"results":"106","hashOfConfig":"98"},{"size":304,"mtime":1634554437218,"results":"107","hashOfConfig":"98"},{"size":1608,"mtime":1635858815646,"results":"108","hashOfConfig":"98"},{"size":575,"mtime":1635745215660,"results":"109","hashOfConfig":"98"},{"size":330,"mtime":1634050541311,"results":"110","hashOfConfig":"98"},{"size":683,"mtime":1636527068502,"results":"111","hashOfConfig":"98"},{"size":643,"mtime":1635403823793,"results":"112","hashOfConfig":"98"},{"size":349,"mtime":1635745215659,"results":"113","hashOfConfig":"98"},{"size":2120,"mtime":1635320014349,"results":"114","hashOfConfig":"98"},{"size":1071,"mtime":1635414209098,"results":"115","hashOfConfig":"98"},{"size":643,"mtime":1634797384962,"results":"116","hashOfConfig":"98"},{"size":360,"mtime":1634554437221,"results":"117","hashOfConfig":"98"},{"size":293,"mtime":1633939930791,"results":"118","hashOfConfig":"98"},{"size":302,"mtime":1634050541312,"results":"119","hashOfConfig":"98"},{"size":299,"mtime":1634554437220,"results":"120","hashOfConfig":"98"},{"size":313,"mtime":1635414209104,"results":"121","hashOfConfig":"98"},{"size":292,"mtime":1634050541312,"results":"122","hashOfConfig":"98"},{"size":360,"mtime":1634554437221,"results":"123","hashOfConfig":"98"},{"size":294,"mtime":1634554437218,"results":"124","hashOfConfig":"98"},{"size":329,"mtime":1634651182404,"results":"125","hashOfConfig":"98"},{"size":338,"mtime":1634555131981,"results":"126","hashOfConfig":"98"},{"size":293,"mtime":1634554437219,"results":"127","hashOfConfig":"98"},{"size":314,"mtime":1634651182400,"results":"128","hashOfConfig":"98"},{"size":314,"mtime":1634651182398,"results":"129","hashOfConfig":"98"},{"size":378,"mtime":1634554437220,"results":"130","hashOfConfig":"98"},{"size":1297,"mtime":1636527068504,"results":"131","hashOfConfig":"98"},{"size":12216,"mtime":1635403823758,"results":"132","hashOfConfig":"98"},{"size":15274,"mtime":1635403823772,"results":"133","hashOfConfig":"98"},{"size":8509,"mtime":1635261981955,"results":"134","hashOfConfig":"98"},{"size":1571,"mtime":1636527068465,"results":"135","hashOfConfig":"98"},{"size":12653,"mtime":1635403823756,"results":"136","hashOfConfig":"98"},{"size":1320,"mtime":1635745215667,"results":"137","hashOfConfig":"98"},{"size":1908,"mtime":1634554437210,"results":"138","hashOfConfig":"98"},{"size":8771,"mtime":1636527068480,"results":"139","hashOfConfig":"98"},{"size":234,"mtime":1633526918188,"results":"140","hashOfConfig":"98"},{"size":25313,"mtime":1636527068466,"results":"141","hashOfConfig":"98"},{"size":2754,"mtime":1635403823785,"results":"142","hashOfConfig":"98"},{"size":5486,"mtime":1635403823754,"results":"143","hashOfConfig":"98"},{"size":5836,"mtime":1635931904094,"results":"144","hashOfConfig":"98"},{"size":29966,"mtime":1636527068473,"results":"145","hashOfConfig":"98"},{"size":13241,"mtime":1636527068497,"results":"146","hashOfConfig":"98"},{"size":13715,"mtime":1634654085548,"results":"147","hashOfConfig":"98"},{"size":16448,"mtime":1636527068473,"results":"148","hashOfConfig":"98"},{"size":15910,"mtime":1636527068468,"results":"149","hashOfConfig":"98"},{"size":2693,"mtime":1634554437190,"results":"150","hashOfConfig":"98"},{"size":1776,"mtime":1634554437191,"results":"151","hashOfConfig":"98"},{"size":6922,"mtime":1636527068495,"results":"152","hashOfConfig":"98"},{"size":3587,"mtime":1636527068498,"results":"153","hashOfConfig":"98"},{"size":7609,"mtime":1635858815616,"results":"154","hashOfConfig":"98"},{"size":5405,"mtime":1634554437190,"results":"155","hashOfConfig":"98"},{"size":6720,"mtime":1636527068495,"results":"156","hashOfConfig":"98"},{"size":8165,"mtime":1635854817080,"results":"157","hashOfConfig":"98"},{"size":1344,"mtime":1636527068500,"results":"158","hashOfConfig":"98"},{"size":3407,"mtime":1634555131980,"results":"159","hashOfConfig":"98"},{"size":5332,"mtime":1634554437193,"results":"160","hashOfConfig":"98"},{"size":1565,"mtime":1634554437190,"results":"161","hashOfConfig":"98"},{"size":32956,"mtime":1636527068478,"results":"162","hashOfConfig":"98"},{"size":7735,"mtime":1635858815618,"results":"163","hashOfConfig":"98"},{"size":7486,"mtime":1635858815642,"results":"164","hashOfConfig":"98"},{"size":7694,"mtime":1635858815637,"results":"165","hashOfConfig":"98"},{"size":14276,"mtime":1636527068481,"results":"166","hashOfConfig":"98"},{"size":864,"mtime":1635745215650,"results":"167","hashOfConfig":"98"},{"size":7274,"mtime":1635403823778,"results":"168","hashOfConfig":"98"},{"size":15805,"mtime":1636527068494,"results":"169","hashOfConfig":"98"},{"size":4427,"mtime":1635403823790,"results":"170","hashOfConfig":"98"},{"size":678,"mtime":1636297938177,"results":"171","hashOfConfig":"98"},{"size":1959,"mtime":1634651182376,"results":"172","hashOfConfig":"98"},{"size":4413,"mtime":1636527068469,"results":"173","hashOfConfig":"98"},{"size":2399,"mtime":1634651182377,"results":"174","hashOfConfig":"98"},{"size":1478,"mtime":1634651182382,"results":"175","hashOfConfig":"98"},{"size":0,"mtime":1634651182383,"results":"176","hashOfConfig":"98"},{"size":2373,"mtime":1634651182378,"results":"177","hashOfConfig":"98"},{"size":462,"mtime":1634651182380,"results":"178","hashOfConfig":"98"},{"size":3038,"mtime":1634554437211,"results":"179","hashOfConfig":"98"},{"size":10136,"mtime":1635858815620,"results":"180","hashOfConfig":"98"},{"size":936,"mtime":1636297938181,"results":"181","hashOfConfig":"98"},{"size":347,"mtime":1636527068502,"results":"182","hashOfConfig":"98"},{"size":650,"mtime":1636527068503,"results":"183","hashOfConfig":"98"},{"size":331,"mtime":1636527068504,"results":"184","hashOfConfig":"98"},{"size":331,"mtime":1636527068504,"results":"185","hashOfConfig":"98"},{"size":967,"mtime":1636527068501,"results":"186","hashOfConfig":"98"},{"size":869,"mtime":1636527068501,"results":"187","hashOfConfig":"98"},{"size":3449,"mtime":1636527068471,"results":"188","hashOfConfig":"98"},{"size":4068,"mtime":1636527068470,"results":"189","hashOfConfig":"98"},{"size":793,"mtime":1636527068495,"results":"190","hashOfConfig":"98"},{"size":3566,"mtime":1636527068470,"results":"191","hashOfConfig":"98"},{"size":15477,"mtime":1636527068498,"results":"192","hashOfConfig":"98"},{"size":3931,"mtime":1636527068471,"results":"193","hashOfConfig":"98"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},"1evuik7",{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"196"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"196"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"196"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"196"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"196"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"196"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"196"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"196"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"196"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"196"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"196"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"196"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"196"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"196"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"196"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"196"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/index.js",[],["403","404"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/App.js",["405","406"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Store.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Router/DirectionURL.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/TypeStatusReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/LoginStatusReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/DistrictReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ProvinceReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ConfirmModalReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/RoleReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ListShiftReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/typeProductReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ObjectEditShiftReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ListProductReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/AlertReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/chooseTypeProduct.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/InfoUserReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/InfoUpdateProduct.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/TypeProductValueReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusModalConfirmPassword.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddShiftReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusEditShiftReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusEditTypeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusUpdateGoodReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusDarkModeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusIsAddTypeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddTypeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusUpdateEmployeeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusYesConfirmReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusConfirmReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusPayMoneyStatus.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddEmployeeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusDeleteConfirmReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/SellProduct/ShoppingBagsReducer.js",["407"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/Login.js",["408","409"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../css/Login.css'\nimport { BsFillEnvelopeFill, BsLockFill } from \"react-icons/bs\";\nimport { FiChevronRight } from \"react-icons/fi\";\nimport { BiUser } from \"react-icons/bi\";\nimport { Avatar } from '@mui/material'\nimport { IconContext } from \"react-icons\";\nimport { GoogleLogin } from 'react-google-login';\nimport axios from 'axios';\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            appId: \"543752153590340\",\n            clientId: \"826925109796-mi95l41fi57bdlolpvnfdg5bpt9oc81h.apps.googleusercontent.com\",\n        }\n    }\n\n    // Login with google\n    onLoginSuccess = async (res) => {\n        this.props.setRole();\n        await axios.post(`http://localhost:5000/sign-in-with-google`, res.profileObj)\n            .then(res => {\n                console.log(\"thành công\");\n                console.log(res.data);\n                switch (res.data.status) {\n                    case 1:\n                        localStorage.setItem('token', res.data.token);\n                        this.props.updateProfile(res.data.data);\n                        this.props.updateAvatar(res.data.data.manager.imgUrl ? res.data.data.manager.imgUrl : \"https://res.cloudinary.com/databaseimg/image/upload/v1634091995/sample.jpg\");\n                        this.props.updateShiftTypes(res.data.data.shiftTypes);\n                        this.props.changeLoginStatus();\n                        this.props.hideAlert();\n                        this.props.showAlert(res.data.message, \"success\");\n                        break;\n                    case -1:\n                        this.props.hideAlert();\n                        this.props.showAlert(res.data.message, \"error\");\n                        break;\n                    default:\n                        break;\n                }\n            })\n            .catch(err => {\n                this.props.hideAlert();\n                this.props.showAlert(\"Error, server don't active\", \"error\");\n            })\n    }\n\n    // Check để thay đổi trạng thái đã login hay chưa\n    isLoginCheck = async (e) => {\n        this.props.setRole();\n        if (this.blurEmail() && this.blurPassword()) {\n            await axios.post(`http://localhost:5000/sign-in-with-gmail-password`, {\n                email: document.querySelector('#email').value,\n                password: document.getElementById('password').value,\n            })\n                .then(res => {\n                    console.log(res.data);\n                    switch (res.data.status) {\n                        case 1:\n                            localStorage.setItem('token', res.data.token);\n                            this.props.updateProfile(res.data.data);\n                            this.props.updateAvatar(res.data.data.manager.imgUrl ? res.data.data.manager.imgUrl : \"https://res.cloudinary.com/databaseimg/image/upload/v1634091995/sample.jpg\");\n                            this.props.updateShiftTypes(res.data.data.shiftTypes);\n                            this.props.changeLoginStatus();\n                            this.props.hideAlert();\n                            this.props.showAlert(res.data.message, \"success\");\n                            break;\n                        case -1:\n                            this.props.hideAlert();\n                            this.props.showAlert(res.data.message, \"error\");\n                            break;\n                        default:\n                            break;\n                    }\n                })\n                .catch(err => {\n                    this.props.hideAlert();\n                    this.props.showAlert(\"Error system\", \"error\");\n                })\n        }\n    }\n\n    // Handle user : blur , change in input\n    blurEmail = () => {\n        var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const event = document.querySelector('#email');\n        let elementValue = event.value;\n        const formGroup = event.parentElement.parentElement;\n        // check validate\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else if (!regex.test(elementValue)) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    blurPassword = () => {\n        const e = document.getElementById('password');\n        let elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\n            return false;\n        } else if (e.value.length < 6) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    changeInput = (e) => {\n        const formGroup = e.target.parentElement.parentElement;\n        formGroup.classList.remove('invalid');\n        formGroup.querySelector('.form-message').innerText = \"\";\n    }\n\n    componentWillMount() {\n        document.title = 'Login'\n    }\n\n    render() {\n        const enterPress = this.isLoginCheck;\n        document.onkeydown = function (e) {\n            switch (e.which) {\n                case 13:\n                    enterPress(e);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return (\n            <div className=\"Login\">\n                <div className=\"form-login\">\n                    <div className=\"auth-form\">\n                        <Avatar className=\"auth-form__avatar\">\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\n                                <BiUser></BiUser>\n                            </IconContext.Provider>\n                        </Avatar>\n                        <div className=\"auth-form__container\">\n                            <div className=\"auth-form__header\">\n                                <div className=\"auth-form__heading\">Login</div>\n                                <NavLink to=\"/register\" className=\"auth-form__switch-btn\">Register <FiChevronRight className=\"auth-form__arrow-return\"></FiChevronRight></NavLink>\n                            </div>\n                        </div>\n                        <div className=\"auth-form__body\">\n                            <form action=\"/login-submit\" method=\"POST\" id=\"login-form\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                                    <div className=\"input-custom\">\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"VD: abc@gmail.com\" type=\"text\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={(e) => this.blurPassword(e)} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"auth-form__support\">\n                                    <span className=\"auth-form__support-forget\">\n                                        <NavLink to=\"/forgot\" className=\"auth-form__switch-btn\">Forgot password</NavLink>\n                                    </span>\n                                    <span className=\"auth-form__help-separate\" />\n                                    <span className=\"auth-form__support-need-support\">Need help?</span>\n                                </div>\n                                <div className=\"auth-form__support\">\n                                    <GoogleLogin\n                                        className=\"auth-form__support-google\"\n                                        clientId={this.state.clientId}\n                                        buttonText=\"Login with Google\"\n                                        onSuccess={this.onLoginSuccess}\n                                        onFailure={this.onFailureSuccess}\n                                        cookiePolicy={'single_host_origin'}\n                                    />\n                                </div>\n                                <div className=\"auth-form__btn\">\n                                    <div to=\"/home\" id=\"navlink\" onClick={(e) => this.isLoginCheck(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign In</div>\n                                </div>\n                                <div className=\"auth-form__btn\">\n                                    <NavLink to=\"/employee\" id=\"navlink\" className=\"auth-form__btn-log-in auth-form__switch-btn auth-form-employee\">\n                                        Employee\n                                        <FiChevronRight className=\"auth-form__arrow-return\"></FiChevronRight>\n                                    </NavLink>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isLogin: state.loginStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeLoginStatus: () => {\n            dispatch({\n                type: \"CHANGE_LOGIN_STATUS\",\n            });\n        },\n        updateProfile: (data) => {\n            dispatch({\n                type: \"UPDATA_DATA_USER\",\n                data: data,\n            })\n        },\n        setRole: () => {\n            dispatch({\n                type: \"ADMIN_ROLE\"\n            });\n            localStorage.setItem('role', 'admin');\n        },\n        updateAvatar: (avatar) => {\n            dispatch({\n                type: \"UPDATE_AVATAR\",\n                avatar: avatar,\n            })\n        },\n        updateShiftTypes: (shiftTypes) => {\n            dispatch({\n                type: \"UPDATE_DATA_SHIFT_USER\",\n                shiftTypes: shiftTypes,\n            })\n        },\n        showAlert: (message, typeMessage) => {\n            dispatch({\n                type: \"SHOW_ALERT\",\n                message: message,\n                typeMessage: typeMessage,\n            })\n        },\n        hideAlert: () => {\n            dispatch({\n                type: \"HIDE_ALERT\",\n            })\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/Register.js",["410","411","412"],"import React, { Component } from 'react';\nimport '../../css/Login.css'\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport Avatar from '@mui/material/Avatar'\nimport { IconContext } from \"react-icons\";\nimport { FiChevronLeft, FiUserPlus } from \"react-icons/fi\";\nimport { BsFillEnvelopeFill, BsLockFill, BsCodeSlash } from \"react-icons/bs\";\nimport { FaPhoneSquare } from \"react-icons/fa\";\nimport axios from 'axios';\nimport emailjs from 'emailjs-com';\nvar bcrypt = require('bcryptjs');\n\n\nclass Register extends Component {\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            code: \"\",\n            statusSendCode: true,\n        }\n    }\n\n\n    // Send code tới người dùng\n    sendCode = (a = this.makeCode(6)) => {\n        this.setState({\n            code: \"123456\"\n        })\n        // this.setState({\n        //     code: a,\n        // })\n        // emailjs.init(\"user_K1g5N5hUDI0rjsa1uRoI4\");\n        // emailjs.send(\"gmail_main\", \"template_plasdgf\", {\n        //     To_mail: `${document.getElementById('email').value}`,\n        //     code: `${a}`,\n        // })\n        //     .then((response) => {\n        //         console.log('SUCCESS!', response.status, response.text);\n        //     }, (err) => {\n        //         console.log('FAILED...', err);\n        //     });\n    }\n\n    // status SignUp \n    SignUp = (e) => {\n        if (this.blurEmail() && this.blurCode() && this.blurPassword() && this.blurRePassword() && this.blurTel()) {\n            axios.post(`http://localhost:5000/register-with-email`, {\n                email: document.getElementById('email').value,\n                password: this.hash(document.getElementById('password').value),\n                tel: document.getElementById('tel').value,\n            })\n                .then(res => {\n                    console.log(res.data);\n                    switch (res.data.status) {\n                        case 1:\n                            localStorage.setItem('token', res.data.token);\n                            this.props.updateProfile(res.data.data);\n                            this.props.updateAvatar(res.data.data.manager.imgUrl ? res.data.data.manager.imgUrl : \"https://res.cloudinary.com/databaseimg/image/upload/v1634091995/sample.jpg\");\n                            this.props.changeLoginStatus();\n                            this.props.hideAlert();\n                            this.props.showAlert(res.data.message, \"success\");\n\n                            break;\n                        case -1:\n                            this.props.hideAlert();\n                            this.props.showAlert(res.data.message, \"error\");\n                            break;\n                        default:\n                            break;\n                    }\n                })\n                .catch(err => {\n                    this.props.hideAlert();\n                    this.props.showAlert(\"Error system\", \"error\");\n                })\n\n        }\n    }\n\n\n    // Tạo mã code cho người dùng xác nhận\n    makeCode = (length) => {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() *\n                charactersLength));\n        }\n        return result;\n    }\n\n    // Hashpassword\n    hash = (pass) => {\n        var hash = bcrypt.hashSync(pass, 12)\n        return hash;\n    }\n\n\n    // Handle user : blur, change in input\n    blurEmail = () => {\n        const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const e = document.getElementById('email');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            this.setState({\n                statusSendCode: true,\n            })\n            return false;\n        } else if (!regex.test(elementValue)) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\n            this.setState({\n                statusSendCode: true,\n            })\n            return false\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            this.setState({\n                statusSendCode: false,\n            })\n            return true;\n        }\n    }\n\n    blurCode = () => {\n        const e = document.getElementById('code');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (this.state.code === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please press Send Code\"\n            return false\n        } else if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter code here\"\n            return false\n        } else if (elementValue !== this.state.code) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Code is incorrect\"\n            return false\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    blurPassword = () => {\n        const e = document.getElementById('password');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\n            return false;\n        } else if (e.value.length < 6) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    blurRePassword = () => {\n        const e = document.getElementById('re-password')\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else if (document.getElementById('password').value !== elementValue) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Re-password not correct\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true\n        }\n    }\n\n    blurTel = () => {\n        const e = document.getElementById('tel');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        const regex = /^\\d+$/;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else if (!regex.test(elementValue)) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Phone is not in the correct format\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    changeInput = (e) => {\n        const formGroup = e.target.parentElement.parentElement;\n        formGroup.classList.remove('invalid');\n        formGroup.querySelector('.form-message').innerText = \"\";\n    }\n\n    componentWillMount() {\n        document.title = 'Register'\n    }\n\n    render() {\n        const enterPress = this.SignUp;\n        document.onkeydown = function (e) {\n            switch (e.which) {\n                case 13:\n                    enterPress(e);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return (\n            <div className=\"Login\">\n                <div className=\"form-register\">\n                    <div className=\"auth-form\">\n                        <Avatar className=\"auth-form__avatar\">\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\n                                <FiUserPlus></FiUserPlus>\n                            </IconContext.Provider>\n                        </Avatar>\n                        <div className=\"auth-form__container\">\n                            <div className=\"auth-form__header\">\n                                <div className=\"auth-form__heading\">Register</div>\n                                <NavLink to=\"/login\" className=\"auth-form__switch-btn\"> <FiChevronLeft className=\"auth-form__arrow-return\"></FiChevronLeft>Login</NavLink>\n                            </div>\n                        </div>\n                        <div className=\"auth-form__body\">\n                            <form action=\"/register-submit\" method=\"post\" id=\"register-form\">\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"VD: abc@gmail.com\" type=\"text\" />\n                                        <button type=\"button\" disabled={this.state.statusSendCode} onClick={() => this.sendCode()} class=\"btn btn-primary disabel send-code\">SEND CODE</button>\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span><BsCodeSlash className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurCode()} name=\"code\" rules=\"required|email\" id=\"code\" placeholder=\"Ex: ABC321\" type=\"text\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurPassword()} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurRePassword()} name=\"re-password\" id=\"re-password\" placeholder=\"Emter re-password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <FaPhoneSquare className=\"input-custom-icon\" ></FaPhoneSquare>\n                                        </span>\n                                        <input className=\"form-control\" onBlur={(e) => this.blurTel(e)} onChange={(e) => this.changeInput(e)} name=\"tel\" rules=\"required\" id=\"tel\" placeholder=\"Ex: 0303030303\" type=\"tel\" />\n\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"register-description\">Bằng cách ấn vào nút\n                                    <span className=\"register-description__keyword\">“ĐĂNG KÝ”</span>\n                                    , tôi đồng ý với\n                                    <span className=\"register-description__keyword\">Điều Khoản Sử Dụng</span> và\n                                    <div className=\"register-description__keyword\"> Chính Sách Bảo Mật</div>\n                                </div>\n                                <div className=\"auth-form__btn\">\n                                    <div onClick={(e) => this.SignUp(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign Up</div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div >\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isLogin: state.loginStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeLoginStatus: () => {\n            dispatch({\n                type: \"CHANGE_LOGIN_STATUS\",\n            });\n        },\n        updateProfile: (data) => {\n            dispatch({\n                type: \"UPDATA_DATA_USER\",\n                data: data,\n            })\n        },\n        updateAvatar: (avatar) => {\n            dispatch({\n                type: \"UPDATE_AVATAR\",\n                avatar: avatar,\n            })\n        },\n        showAlert: (message, typeMessage) => {\n            dispatch({\n                type: \"SHOW_ALERT\",\n                message: message,\n                typeMessage: typeMessage,\n            })\n        },\n        hideAlert: () => {\n            dispatch({\n                type: \"HIDE_ALERT\",\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/LoginWithEmployee.js",["413"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../css/Login.css'\nimport { BsFillEnvelopeFill, BsLockFill } from \"react-icons/bs\";\nimport {  FiXSquare,FiChevronLeft } from \"react-icons/fi\";\nimport {FaUserTie} from 'react-icons/fa'\nimport { Avatar } from '@mui/material'\nimport { IconContext } from \"react-icons\";\nimport axios from 'axios';\nimport Alert from '@mui/material/Alert';\n\nclass LoginWithEmployee extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            statusFailed: false,\n            statusSucces: false,\n        }\n    }\n\n    message = \"Login success\";\n\n    // Out Alert\n    OutAlert = () => {\n        this.setState({\n            statusFailed: false,\n            statusSucces: false,\n        })\n    }\n\n    // Check để thay đổi trạng thái đã login hay chưa\n    isLoginCheck = (e) => {\n        // this.OutAlert();\n        // if (this.blurEmail() && this.blurPassword()) {\n        //     axios.post(`http://localhost:5000/sign-in-employee`, {\n        //         username: document.querySelector('#username').value,\n        //         password: document.getElementById('password').value,\n        //     })\n        //         .then(res => {\n        //             switch (res.data.status) {\n        //                 case 1:\n        //                     this.message = res.data.message;\n        //                     this.setState({\n        //                         statusSucces: true,\n        //                     })\n        //                     localStorage.setItem('token', res.data.token);\n        //                     this.props.changeLoginStatus();\n        //                     break;\n        //                 case -1:\n        //                     this.message = res.data.message;\n        //                     this.setState({\n        //                         statusFailed: true,\n        //                     })\n        //                     break;\n        //                 default:\n        //                     break;\n        //             }\n        //         })\n        //         .catch(err => {\n        //             this.message = \"Enter again\";\n        //             this.setState({\n        //                 statusFailed: true,\n        //             })\n        //         })\n        // }\n        this.setState({\n            statusSucces: true,\n        })\n        this.props.setRole()\n    }\n\n\n    // Handle user : blur , change in input\n    blurEmail = () => {\n        const event = document.querySelector('#username');\n        let elementValue = event.value;\n        const formGroup = event.parentElement.parentElement;\n        // check validate\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n\n    blurPassword = () => {\n        const e = document.getElementById('password');\n        let elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\n            return false;\n        } else if (e.value.length < 6) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    changeInput = (e) => {\n        const formGroup = e.target.parentElement.parentElement;\n        formGroup.classList.remove('invalid');\n        formGroup.querySelector('.form-message').innerText = \"\";\n    }\n\n    componentWillMount() {\n        document.title = 'Employee'\n    }\n\n    render() {\n        const enterPress = this.isLoginCheck;\n        document.onkeydown = function (e) {\n            switch (e.which) {\n                case 13:\n                    enterPress(e);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return (\n            <div className=\"Login\">\n                <div className=\"form-login\">\n                    <div className=\"auth-form\">\n                        <Avatar className=\"auth-form__avatar\">\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\n                                <FaUserTie></FaUserTie>\n                            </IconContext.Provider>\n                        </Avatar>\n                        <div className=\"auth-form__container\">\n                            <div className=\"auth-form__header\">\n                                <div className=\"auth-form__heading\">Employee</div>\n                                <NavLink to=\"/login\" className=\"auth-form__switch-btn\"> <FiChevronLeft className=\"auth-form__arrow-return\"></FiChevronLeft>Login</NavLink>\n                            </div>\n                        </div>\n                        <div className=\"auth-form__body\">\n                            <form action=\"/login-submit\" method=\"POST\" id=\"login-form\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\" className=\"form-label\">Username</label>\n                                    <div className=\"input-custom\">\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"username\"  id=\"username\" placeholder=\"VD: phuoc123\" type=\"text\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={(e) => this.blurPassword(e)} name=\"password\"  id=\"password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"auth-form__btn\">\n                                    <div to=\"/sellproduct\" id=\"navlink\" onClick={(e) => this.isLoginCheck(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign In</div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                {this.state.statusSucces ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isLogin: state.loginStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeLoginStatus: () => {\n            dispatch({\n                type: \"CHANGE_LOGIN_STATUS\",\n            });\n        },\n        setRole: () => {\n            dispatch({\n                type: \"EMPLOYEE_ROLE\",\n            });\n            localStorage.setItem('role', 'employee');\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps , mapDispatchToProps)(LoginWithEmployee);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Body.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/ForgotPassword.js",["414","415","416"],"import React, { Component } from 'react';\nimport Avatar from '@mui/material/Avatar'\nimport { IconContext } from \"react-icons\";\nimport { FiSend } from \"react-icons/fi\";\nimport { BsFillEnvelopeFill, BsLockFill, BsBoxArrowInLeft, BsCodeSlash } from \"react-icons/bs\";\nimport emailjs from 'emailjs-com';\nimport axios from 'axios';\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nvar bcrypt = require('bcryptjs');\n\n\nclass ForgotPassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: \"\",\n            statusSendCode: true,\n        }\n    }\n\n\n    // Send code tới người dùng\n    sendCode = (a = this.makeCode(6)) => {\n        this.setState({\n            code: \"123456\"\n        })\n        // this.setState({\n        //     code: a,\n        // })\n        // emailjs.init(\"user_K1g5N5hUDI0rjsa1uRoI4\");\n        // emailjs.send(\"gmail_main\", \"template_plasdgf\", {\n        //     To_mail: `${document.querySelector('#email').value}`,\n        //     code: `${a}`,\n        // })\n        //     .then((response) => {\n        //         console.log('SUCCESS!', response.status, response.text);\n        //     }, (err) => {\n        //         console.log('FAILED...', err);\n        //     });\n    }\n\n    // Tạo code để xác nhận\n    makeCode = (length) => {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() *\n                charactersLength));\n        }\n        return result;\n    }\n\n    // Hashpassword\n    hash = (pass) => {\n        var hash = bcrypt.hashSync(pass, 12)\n        return hash;\n    }\n\n    //Check tìm lại mật khẩu\n    findPassword = (e) => {\n        if (this.blurEmail() && this.blurCode() && this.blurPassword() && this.blurRePassword()) {\n            const form = document.getElementById('findpass-form');\n            axios.post(`http://localhost:5000/find-password`, {\n                email: document.querySelector('#email').value,\n                password: this.hash(document.getElementById('password').value),\n            })\n                .then(res => {\n                    form.reset();\n                    console.log(res.data.status);\n                    switch (res.data.status) {\n                        case 1:\n                            this.props.hideAlert();\n                            this.props.showAlert(res.data.message, \"success\");\n                            break;\n                        case -1:\n                            this.props.hideAlert();\n                            this.props.showAlert(res.data.message, \"error\");\n                            break;\n                        default:\n                            break;\n                    }\n                })\n                .catch(err => {\n                    this.props.hideAlert();\n                    this.props.showAlert(\"Error system\", \"error\");\n                })\n        }\n    }\n\n\n    // Handle user blue change in input\n    blurEmail = () => {\n        var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const event = document.querySelector('#email');\n        const elementValue = event.value;\n        const formGroup = event.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            this.setState({\n                statusSendCode: true,\n            })\n            return false;\n        } else if (!regex.test(elementValue)) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\n            this.setState({\n                statusSendCode: true,\n            })\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            this.setState({\n                statusSendCode: false,\n            })\n            return true;\n        }\n    }\n\n    blurPassword = () => {\n        const e = document.getElementById('password');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\n            return false;\n        } else if (e.value.length < 6) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    blurCode = () => {\n        const e = document.getElementById('code');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (this.state.code === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please press Send Code\"\n            return false\n        } else if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter code here\"\n            return false\n        } else if (elementValue !== this.state.code) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Code is incorrect\"\n            return false\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    blurRePassword = () => {\n        const e = document.getElementById('re-password')\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else if (document.getElementById('password').value !== elementValue) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Re-password not correct\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true\n        }\n    }\n\n    changeInput = (e) => {\n        const formGroup = e.target.parentElement.parentElement;\n        formGroup.classList.remove('invalid');\n        formGroup.querySelector('.form-message').innerText = \"\";\n    }\n\n    componentWillMount() {\n        document.title = 'Find password'\n    }\n\n    render() {\n        const enterPress = this.findPassword;\n        document.onkeydown = function (e) {\n            switch (e.which) {\n                case 13:\n                    enterPress(e);\n                    break;\n                default:\n                    break;\n            }\n        }\n        return (\n            <div className=\"Login\">\n                <div className=\"form-findpass\">\n                    <div className=\"auth-form\">\n                        <Avatar className=\"auth-form__avatar\">\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\n                                <FiSend></FiSend>\n                            </IconContext.Provider>\n                        </Avatar>\n                        <div className=\"auth-form__container\">\n                            <div className=\"auth-form__header\">\n                                <div className=\"auth-form__heading\">Find password</div>\n                                <NavLink to=\"/login\" className=\"auth-form__switch-btn\"><BsBoxArrowInLeft className=\"arrow-return\"></BsBoxArrowInLeft></NavLink>\n                            </div>\n                        </div>\n                        <div className=\"auth-form__body\">\n                            <form action=\"/findpass-submit?_method=PUT\" method=\"POST\" id=\"findpass-form\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                                    <div className=\"input-custom\">\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"Ex: abc@gmail.com\" type=\"text\" />\n                                        <button type=\"button\" disabled={this.state.statusSendCode} onClick={() => this.sendCode()} class=\"btn btn-primary disabel send-code\">SEND</button>\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"code\" className=\"form-label\">Code</label>\n                                    <div className=\"input-custom\">\n                                        <span><BsCodeSlash className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurCode()} name=\"code\" rules=\"required|email\" id=\"code\" placeholder=\"Ex: ABC321\" type=\"text\" />\n\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\" className=\"form-label\">New password</label>\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurPassword()} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\" className=\"form-label\">Re-password</label>\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurRePassword()} name=\"password\" rules=\"required|min:6\" id=\"re-password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"auth-form__btn\">\n                                    <div onClick={(e) => this.findPassword(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Find Password</div>\n                                </div>\n\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        showAlert: (message, typeMessage) => {\n            dispatch({\n                type: \"SHOW_ALERT\",\n                message: message,\n                typeMessage: typeMessage,\n            })\n        },\n        hideAlert: () => {\n            dispatch({\n                type: \"HIDE_ALERT\",\n            })\n        }\n    }\n}\n\n\n\nexport default connect(mapDispatchToProps)(ForgotPassword);\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Router/DashboardURL.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/ModalConfirmPassword.js",["417"],"import React from 'react';\nimport {Card,CardHeader,Divider,CardContent,Grid,TextField,Box,Button} from '@mui/material';\nimport {BiPlusMedical} from 'react-icons/bi'\nimport { GiCancel } from 'react-icons/gi'\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction ModalConfirmPassword(props) {\n\n    const statusConfirmPassword = useSelector(state => state.statusConfirmPassword)\n    const dispatch = useDispatch();\n\n    const handleCancel = () => {\n        dispatch({\n            type:\"CHANGE_MODAL_CONFIRM_PASSWORD_STATUS\",\n        })\n    }\n\n    return (\n        <Card className=\"card-confirm-password\" style={{ minWidth: '500px', width: '600px', justifyContent: 'center', marginTop: '10%' }}>\n            <CardHeader style={{ color: 'blue', backgroundColor: '#efeeef' }} title=\"Confirm password\" />\n            <Divider />\n            <CardContent>\n                <Grid container spacing={2}>\n                    <Grid item md={12} xs={12}>\n                        <TextField\n                            id=\"outlined-basic\"\n                            variant=\"outlined\"\n                            fullWidth\n                            label=\"Your password\"\n                            required\n                            type=\"password\"\n                        />\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <Divider />\n            <Box sx={{ display: 'flex', justifyContent: 'space-evenly', p: 2 }}>\n                <Button style={{ backgroundColor: 'yellowgreen' }} variant=\"contained\" startIcon={<BiPlusMedical />}>\n                    Xác nhận\n                </Button>\n                <Button style={{ backgroundColor: 'red' }} onClick={() => handleCancel()} variant=\"contained\" startIcon={<GiCancel />}>\n                    Hủy\n                </Button>\n            </Box>\n        </Card>\n    );\n}\n\nexport default ModalConfirmPassword;","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Partials/SideNavBar.js",["418","419","420","421","422"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/ReiceiptManager.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeeManager.js",["423","424","425","426","427","428","429","430","431","432","433","434","435"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/Profile.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/DashBoard.js",["436"],"import React, { Component } from 'react';\nimport '../../css/Dashboard.css'\nimport { Container, Grid } from '@mui/material';\nimport { Typography } from '@mui/material';\nimport { DiApple } from 'react-icons/di'\nimport StaticDateRangePickerDemo from './Calendar'\nimport AppWebsiteVisits from './Statistic';\nimport SplitButton from './GroupButton';\nimport FullCalendar from '@fullcalendar/react' // must go before plugins\nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\nimport interactionPlugin from \"@fullcalendar/interaction\" // needed for dayClick\n\n\nclass DashBoard extends Component {\n\n    renderEventContent = (eventInfo) => {\n        return (\n            <>\n                <b>{eventInfo.timeText}</b>\n                <i>{eventInfo.event.title}</i>\n            </>\n        )\n    }\n\n    componentWillMount() {\n        document.title = 'DashBoard'\n    }\n\n    render() {\n        return (\n            <div className=\"dashboard\" style={{ overflow: 'scroll', overflowX: 'hidden', height: '100vh' }}>\n                <Container style={{ marginTop: '40px' }} maxWidth=\"xl\">\n                    <Grid container spacing={3}>\n                        <Grid className=\"dashboard-item\" item md={3} sm={12} >\n                            <div className=\"dashboard-css\">\n                                <div className=\"dashboard-item-img\" style={{ marginBottom: '30px' }}>\n                                    <DiApple className=\"dashboard-item-icon\"></DiApple>\n                                </div>\n                                <Typography style={{ marginBottom: '10px' }} variant=\"h4\">256</Typography>\n                                <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n                                    Total money\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid className=\"dashboard-item\" item md={3} sm={12} >\n                            <div className=\"dashboard-css sold-good\">\n                                <div className=\"dashboard-item-img sold-good\" style={{ marginBottom: '30px' }}>\n                                    <DiApple className=\"dashboard-item-icon sold-good\"></DiApple>\n                                </div>\n                                <Typography style={{ marginBottom: '10px' }} variant=\"h4\">256</Typography>\n                                <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n                                    Sold good\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid className=\"dashboard-item\" item md={3} sm={12} >\n                            <div className=\"dashboard-css imported-good\">\n                                <div className=\"dashboard-item-img imported-good\" style={{ marginBottom: '30px' }}>\n                                    <DiApple className=\"dashboard-item-icon imported-good\"></DiApple>\n                                </div>\n                                <Typography style={{ marginBottom: '10px' }} variant=\"h4\">256</Typography>\n                                <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n                                    Imported good\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid className=\"dashboard-item\" item md={3} sm={12} >\n                            <div className=\"dashboard-css error-receipt\">\n                                <div className=\"dashboard-item-img error-receipt\" style={{ marginBottom: '30px' }}>\n                                    <DiApple className=\"dashboard-item-icon error-receipt\"></DiApple>\n                                </div>\n                                <Typography style={{ marginBottom: '10px' }} variant=\"h4\">256</Typography>\n                                <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n                                    Error receipt\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid className=\"dashboard-item\" item md={12} sm={12} >\n                            <div style={{ borderRadius: '20px' }}>\n                                <StaticDateRangePickerDemo></StaticDateRangePickerDemo>\n                            </div>\n                        </Grid>\n                        <Grid className=\"dashboard-item\" item md={12} sm={12} >\n                            <div style={{ borderRadius: '20px' }}>\n                                <FullCalendar\n                                    plugins={[ dayGridPlugin, interactionPlugin ]}\n                                    initialView=\"dayGridMonth\"\n                                    weekends={true}\n                                    events={[\n                                        { title: 'event 1', date: '2021-10-18' },\n                                        { title: 'event 2', date: '2021-10-18' }\n                                    ]}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid className=\"dashboard-item\" item md={12} sm={12} >\n                            <AppWebsiteVisits></AppWebsiteVisits>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default DashBoard;","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodManager.js",["437"],"import { Component } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport GoodTable from './GoodPartials/GoodTable';\nimport { NavLink } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport SearchBar from './GoodPartials/SearchBar';\nimport {connect} from 'react-redux'\nimport AddTypeModal from './GoodPartials/AddTypeModal';\nimport '../css/GoodManager.css';\nimport ConfirmModal from './GoodPartials/ConfirmModal';\nimport UpdateGoodModal from './GoodPartials/UpdateGoodModal';\nimport EditTypeModal from './GoodPartials/EditTypeModal';\n\nclass GoodManager extends Component {\n    \n    handleAdd() {\n        this.props.changeAddTypeStatus();\n        this.props.setAddTypeStatus();\n    }\n    handleConfirm(){\n        this.props.changeConfirmStatus();\n        this.props.unsetDelete();\n    }\n    handleConfirmDelete(){\n        this.props.changeConfirmStatus();\n        this.props.setDeleteConfirm();\n    }\n    handleUpdateGood() {\n        this.props.changeUpdateGoodStatus();\n    }\n    handleEditType() {\n        this.props.changeEditTypeStatus();\n    }\n    render() {\n        return (\n            <div>\n                <div style={{height: '100%', width: '100%', marginTop: '40px', marginBottom: '40px', paddingBottom: '40px' }}>\n                    <div style={{display: 'flex'}}>\n                        <Button variant=\"contained\">\n                            <NavLink style={{color: '#fff', textDecoration: 'none'}} to=\"/goodmanager/import\">Import</NavLink>\n                        </Button>\n                        <SearchBar style={{height: '120px'}}/>\n                        <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.handleAdd()} variant=\"contained\">\n                            add type\n                        </Button>\n                        <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.handleEditType()} variant=\"contained\">\n                            edit type\n                        </Button>\n                        {/* <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.handleConfirmDelete()} variant=\"contained\">\n                            Delete\n                        </Button>\n                        <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.handleConfirm()} variant=\"contained\">\n                            Edit\n                        </Button>\n                        <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.handleUpdateGood()} variant=\"contained\">\n                            Update Good\n                        </Button> */}\n\n                     </div>\n\n                    <GoodTable />\n\n                    {/* Đây là phần modal */}\n                    {this.props.addTypeStatus ? (\n                        <div className=\"modal-add\">\n                            <div onClick={() => {this.props.changeAddTypeStatus();}} className=\"modal-overlay\"></div>\n                            <AddTypeModal></AddTypeModal>\n                        </div>\n                    ): null}\n                    {this.props.confirmStatus ? (\n                        <div className=\"modal-add\">\n                            <div onClick={() => {this.props.changeConfirmStatus();}} className=\"modal-overlay\"></div>\n                            <ConfirmModal></ConfirmModal>\n                        </div>\n                    ): null}\n                    {this.props.updateGoodStatus ? (\n                        <div \n                            className=\"modal-add\"\n                        >\n                            <div onClick={() => {this.props.changeUpdateGoodStatus();}} className=\"modal-overlay\"></div>\n                            <UpdateGoodModal\n                                style={{\n                                    marginTop: 0\n                                }}\n                            >\n                            </UpdateGoodModal>\n                        </div>\n                    ): null}\n                     {this.props.editTypeStatus ? (\n                        <div className=\"modal-add\">\n                            <div onClick={() => {this.props.changeEditTypeStatus();}} className=\"modal-overlay\"></div>\n                            <EditTypeModal></EditTypeModal>\n                        </div>\n                    ): null}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        addTypeStatus: state.addTypeStatus,\n        confirmStatus: state.confirmStatus,\n        deleteStatus: state.deleteStatus,\n        updateGoodStatus: state.updateGoodStatus,\n        editTypeStatus: state.editTypeStatus,\n        isAddTypeStatus: state.isAddTypeStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeAddTypeStatus: () => {\n            dispatch({\n                type: \"CHANGE_ADD_TYPE_STATUS\",\n            });\n        },\n        changeConfirmStatus: () => {\n            dispatch({\n                type: \"CHANGE_CONFIRM_STATUS\",\n            });\n        },\n        unsetDelete: () => {\n            dispatch({\n                type: \"UNSET_DELETE_STATUS\",\n            })\n        },\n        changeUpdateGoodStatus: () => {\n            dispatch({\n                type: \"CHANGE_UPDATE_GOOD_STATUS\",\n            })\n        },\n        changeEditTypeStatus: () => {\n            dispatch({\n                type: \"CHANGE_EDIT_TYPE_STATUS\",\n            })\n        },\n        setAddTypeStatus: () => {\n            dispatch({\n                type: \"SET_ADD_TYPE_STATUS\",\n            });\n        },\n        setDeleteConfirm: () => {\n            dispatch({\n                type: \"SET_CONFIRM_DELETE_GOOD\",\n            }); \n        },\n        \n    }\n}\nexport default connect(mapStateToProps , mapDispatchToProps)(GoodManager);\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/GoodImport.js",["438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/SellProduct.js",["457"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/PayMoneyModal.js",["458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478"],"import React, { Component } from 'react';\nimport { Card, CardHeader, Divider, Grid, TextField, Box, CardContent, Button, InputLabel } from '@mui/material';\nimport { connect } from 'react-redux'\nimport { BiPlusMedical, BiEdit } from 'react-icons/bi';\nimport Stack from '@mui/material/Stack';\nimport { GiCancel } from 'react-icons/gi'\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport { Image } from 'cloudinary-react';\nimport axios from 'axios';\nimport '../../css/GoodManager.css';\nimport { withStyles } from '@material-ui/styles';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DatePicker from '@mui/lab/DatePicker';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport { AiFillPlusCircle} from \"react-icons/ai\";\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nvar productTypes =[\n    'food', 'detergent', 'cuisine'\n];\n\nvar typeSet = [];\n\nconst StyledTextField = withStyles((theme) => ({\n    root: {\n      \"& .MuiInputBase-root\": {\n        height: 36,\n        \"& input\": {\n          textAlign: \"right\",\n          marginLeft: '4px',\n        }\n      }\n    }\n  }))(TextField);\n\nclass PayEmployeeModal extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            goodID : \"\",\n            change: false,\n            imageSelect: \"null\",\n            type:'none',\n            url: 'http://res.cloudinary.com/databaseimg/image/upload/v1634117795/ubvxisehhpvnu2lbqmeg.png',\n        }; \n    }\n    \n\n    cancel = () => {\n        this.props.changeAddEmployeeStatus();\n    }\n\n    addEmployee = () => {\n        this.props.changeAddEmployeeStatus();\n    }\n    render() {\n        return (\n            <form style={{ zIndex: '10', width: '60%', justifyContent: 'center', marginTop: '80px'}} autoComplete=\"off\" noValidate>\n                <Card>\n                    <CardHeader style={{ color: 'blue', backgroundColor: '#efeeef' , textAlign: 'center'}} title=\"PAY EMPLOYEE\" />\n                        <div \n                        style={{ \n                            width: '100%', backgroundColor: 'rgb(221,235,255)'   \n                        }}\n                    >   \n                    <Grid className=\"import-container\" container >\n                        <Grid item md={12}  \n                            style={{\n                                display: 'flex', \n                                justifyContent:'center', \n                                flexDirection:'column',\n                                alignItems:'center',\n                                marginTop: '0px'\n                            }}\n                        >   \n                            <label className=\"profile-header__avatar\" for=\"profile-header-update-avatar\" style={{ overflow: 'hidden' }}>\n                                <Image style={{width: '150px',height: '150px' }} cloudName=\"databaseimg\" publicId={this.imgUrl=='none' ? 'http://res.cloudinary.com/databaseimg/image/upload/v1634358564/b9wj5lcklxitjglymxqh.png' : this.imgUrl}></Image>\n                            </label>\n                            {/* Ẩn đi */}\n                            <input id=\"profile-header-update-avatar\" type=\"file\" style={{ display: 'none' }} accept=\"image/png, image/jpeg\" onChange={(e) => this.profileImageChange(e)}></input>\n                        </Grid>\n                        <Grid item md={12}>\n\n                            <Card>\n                                \n                                <Grid container md={12}>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div \n                                            className=\"input-label\"\n                                            style={{\n                                                width: '116px'\n                                            }}\n                                        >\n                                            ID\n                                        </div>\n                                        <StyledTextField\n                                            classname='input-box' \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth \n                                            size=\"small\" \n                                            variant=\"outlined\" \n                                            readOnly={true}\n                                            disabled={true}\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>First Name</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>Last Name</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>ID CARD</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\" style={{width: '114px'}}>Old</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>Gender</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>Province</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>PhoneNumber</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '100%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>Email</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={6} \n                                        className='input-item'\n                                    >\n                                        <div className=\"input-label\"style={{width: '114px'}}>BirthDay</div>\n                                        <StyledTextField\n                                            classname='input-box'   \n                                            type=\"text\" \n                                            // class=\"input-val\" \n                                            style = {{width: '70%'}} \n                                            fullWidth\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item md={9}></Grid>\n                                    <Grid item md={3}\n                                        className='input-item'\n                                    >\n                                        <Button variant=\"contained\" onClick={() => this.props.changePayEmployeeStatus()}>\n                                            Pay employee\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                        <Grid item sm={12} md={12} >\n                            \n                        </Grid>\n                    </Grid> \n                </div>\n                </Card>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changePayEmployeeStatus: () => {\n            dispatch({\n                type: \"CHANGE_PAY_EMPLOYEE_STATUS\",\n            });\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PayEmployeeModal);\n\n               ","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/UpdateEmployeeModal.js",["479","480","481","482","483"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/AddEmployeeModal.js",["484","485","486","487","488","489","490"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/GroupButton.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/Statistic.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/Print.js",["491","492","493","494"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/ShoppingBags.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/EditTypeModal.js",["495","496","497","498"],"import React, { Component } from 'react';\nimport { Card, CardHeader, Divider, Grid, TextField, Box, CardContent, Button } from '@mui/material';\nimport { connect } from 'react-redux'\nimport { BiPlusMedical, BiEdit} from 'react-icons/bi';\nimport { TiDelete } from \"react-icons/ti\";\nimport Stack from '@mui/material/Stack';\nimport { GiCancel } from 'react-icons/gi'\nimport axios from 'axios';\nimport AddTypeModal from './AddTypeModal';\n\nvar productTypes =[];\nvar listTypeInfor = [];\n\nclass EditTypeModal extends Component {\n    constructor(props) {\n        super(props);\n        this.loadAllType();\n        this.state = {\n            change: false\n        }\n    }\n    confirm = () => {\n        // Thực hiện các lệnh xử lý tại đây\n        this.props.changeConfirmStatus();\n    }\n    cancel = () => {\n        // this.props.changeConfirmStatus();\n        this.props.changeEditTypeStatus();\n    }\n    edit = (type) => {\n        this.props.changeAddTypeStatus();\n        this.props.setEditTypeStatus();\n        this.props.typeToUpdate(type);\n        this.props.changeEditTypeStatus();\n    }\n    async delete(type){\n        const data = {\n            token: localStorage.getItem('token'),\n            productTypes:\n            [\n                {\n                    typeID: type._id.typeID,\n                    storeID: type._id.storeID\n                }\n            ]\n                \n        }\n        await axios.delete(`http://localhost:5000/api/product/type`,{data: data})\n            .then(res => {\n                console.log(\"delete success\");\n            })\n            .catch(err => {\n                alert(err);\n                // alert(\"Lỗi gì cmnr\")\n            })\n        // Ở đây mình phải cập nhật join nữa\n        // Phải get tất cả cái join mà có cái type là type hiện tại\n        var allJoinMatch = [];\n        const data1 = {\n            token: localStorage.getItem('token'),\n            filter: {\n                \"_id.storeID\": this.props.infoUser.email,\n                \"_id.typeID\": type._id.typeID,\n            }   \n        }\n        await axios.get(`http://localhost:5000/api/product/join`, \n        {\n            params: {...data1}\n        })\n            .then(res => {\n                allJoinMatch = res.data.data;\n            })\n            .catch(err => {\n                console.log(err);\n                alert(err);\n            })\n\n        var allProductJoin = [];\n        for(var i = 0 ; i < allJoinMatch.length; i++)\n        {\n            allProductJoin.push({\n                productID: allJoinMatch[i]._id.productID,\n                typeID: type._id.typeID,\n                importDate: allJoinMatch[i]._id.importDate,\n                storeID: this.props.infoUser.email,\n                \n            });\n        }\n        \n        const dataJoin = {\n            token: localStorage.getItem('token'),\n            productJoinTypes: allProductJoin,      \n        }\n\n        console.log(dataJoin);\n\n        await axios.delete(`http://localhost:5000/api/product/join`,{data: dataJoin})\n            .then(res => {\n                console.log(\"delete join success\");\n            })\n            .catch(err => {\n                alert(err);\n            })\n\n        this.loadAllType();\n        this.setState({change: !this.state.change})\n    }\n    \n\n\n    async loadAllType() {\n        var result = [];\n        const data = {\n            token: localStorage.getItem('token'),\n            filter: {\n                \"_id.storeID\": this.props.infoUser.email,\n            }   \n        }\n        await axios.get(`http://localhost:5000/api/product/type`, \n        {\n            params: {...data}\n        })\n            .then(res => {\n                result = res.data.data;\n            })\n            .catch(err => {\n                console.log(err);\n                alert(err); // 401 ở đây\n            })\n        //Get data và lưu các tên Type vào bảng\n        listTypeInfor=[];\n        for(var i=0; i < result.length ; i++)\n        {\n            listTypeInfor.push(result[i]);\n        }\n        productTypes=[];\n        for(var i=0 ; i< listTypeInfor.length ; i ++)\n        {\n            productTypes.push(listTypeInfor[i].name);\n        }\n        this.setState({change: true});\n    }\n\n    render() {\n        return (\n            <form style={{ zIndex: '10', minWidth: '500px', width: '600px', justifyContent: 'center', marginTop: '10%' }} autoComplete=\"off\" noValidate>\n                <Card>\n                    <CardHeader style={{ color: 'blue', backgroundColor: '#efeeef' }} title=\"All Good Type\" />\n                    <Divider />\n                    <CardContent>\n                        <Grid container spacing={2}>\n                            <Grid container item md={12} xs={12} spacing={0}>\n                                { listTypeInfor.map((type) => (\n                                    <Grid item md={3} style={{border:'1px solid #333', padding: 4}}>\n                                        <span>{type.name}</span>\n                                        <BiEdit onClick={() => this.edit(type)}/>\n                                        <TiDelete onClick={() => this.delete(type)}/>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                            <Grid item md={12} xs={12}>\n                                <Stack spacing={3}>\n                                   \n                                </Stack>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <Divider />\n                    <Box sx={{ display: 'flex', justifyContent: 'space-evenly', p: 2 }}>\n                        <Button style={{ backgroundColor: 'red' }} onClick={(e) => this.cancel(e)} variant=\"contained\" startIcon={<GiCancel />}>\n                            Thoát\n                        </Button>\n                    </Box>\n                </Card>\n                {/* {this.props.addTypeStatus ? (\n                        <div className=\"modal-add\">\n                            <div onClick={() => {this.props.changeAddTypeStatus();}} className=\"modal-overlay\"></div>\n                            <AddTypeModal></AddTypeModal>\n                        </div>\n                    ): null} */}\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        editTypeStatus: state.editTypeStatus,\n        addTypeStatus: state.addTypeStatus,\n        isAddTypeStatus: state.isAddTypeStatus,\n        infoUser: state.infoUser,\n        typeProductValue: state.typeProductValue,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeEditTypeStatus: () => {\n            dispatch({\n                type: \"CHANGE_EDIT_TYPE_STATUS\",\n            });\n        },\n        changeAddTypeStatus: () => {\n            dispatch({\n                type: \"CHANGE_ADD_TYPE_STATUS\",\n            });\n        },\n        setEditTypeStatus: () => {\n            dispatch({\n                type: \"SET_EDIT_TYPE_STATUS\",\n            })\n        },\n        changeConfirmStatus: () => {\n            dispatch({\n                type: \"CHANGE_CONFIRM_STATUS\",\n            });\n        },\n        typeToUpdate: (data) => {\n            dispatch({\n                type: \"UPDATE_PRODUCT_TYPE\",\n                _id: {\n                    typeID: data._id.typeID,\n                    storeID: data._id.storeID,\n                },\n                name: data.name\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTypeModal);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/BaseOptionChart.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/ComponentToPrint.js",["499","500","501"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/AddTypeModal.js",["502","503","504","505","506","507","508","509"],"import React, { Component } from 'react';\nimport { Card, CardHeader, Divider, Grid, TextField, Box, CardContent, Button, Alert } from '@mui/material';\nimport { connect } from 'react-redux'\nimport { BiPlusMedical, BiEdit } from 'react-icons/bi';\nimport Stack from '@mui/material/Stack';\nimport { GiCancel, GiVampireCape } from 'react-icons/gi'\nimport axios from 'axios';\n\nvar listTypeInfor = [];\n\nclass AddTypeModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state= {\n            change: 'false'\n        }\n        this.loadInitialData();\n        this.getAllTypeList();\n    }\n    storeID = \"\";\n    typeList = [];\n\n    async getAllTypeList(){\n        var result = [];\n        const data = {\n            token: localStorage.getItem('token'),\n            filter: {\n                \"_id.storeID\": this.props.infoUser.email,\n            }   \n        }\n        console.log(data.token);\n        // alert(data.token);\n        console.log(data.filter);\n        await axios.get(`http://localhost:5000/api/product/type`, \n        {\n            params: {...data}\n        })\n            .then(res => {\n                result = res.data.data;\n            })\n            .catch(err => {\n                alert(err);\n            })\n        //Get data và lưu các tên Type vào bảng\n        for(var i=0; i < result.length ; i++)\n        {\n            listTypeInfor.push(result[i]);\n        }\n    }\n    addType = () => {\n        var newTypeName = document.querySelector('input[name=\"typeName\"]').value.trim();\n        if(this.checkConstraint(newTypeName)==false)  return;\n        var genTypeID = 0;\n        if(listTypeInfor.length>0)\n        {\n            genTypeID = parseInt(listTypeInfor[listTypeInfor.length-1]._id.typeID) + 1;\n        } \n        const data = {\n            token: localStorage.getItem('token'),\n            productType: {\n                _id:{\n                    typeID: genTypeID,\n                    storeID: this.props.infoUser.email,\n                },\n                name: newTypeName,\n            }    \n        }\n        axios.post(`http://localhost:5000/api/product/type`, data)\n            .then(res => {\n                alert(\"Save success\");\n                //TODO: Cập nhật token ở đây nữa\n            })\n            .catch(err => {\n                alert(err);\n            })\n        this.props.changeAddTypeStatus();\n    }\n    \n    checkConstraint(typeName) {\n        //Constraint 1: Check name\n        for(var i=0;i<listTypeInfor.length;i++)\n        {\n            if(listTypeInfor[i].name==typeName)\n            {\n                if(!this.props.isAddTypeStatus && typeName.trim()==this.props.typeProductValue.name)\n                {\n                    alert(\"Không đổi tên à anh zai\");\n                    return false;\n                }\n                alert(\"Trùng tên rồi anh chai\");\n                return false;\n            }\n            \n        }        \n        // Constraint 2: Not blank\n        if(typeName.length==0)\n        {\n            alert(\"Không nhập gì à anh chai\")\n            return false;\n        }\n        return true;\n\n    }\n    cancel = () => {\n        this.props.changeAddTypeStatus();\n    }\n\n    handle = () => {\n        if (this.props.isAddTypeStatus)\n            this.addType();\n        else \n            this.editType();\n    }\n\n    editType = () => {\n        var newTypeName = this.typeName;\n        if(this.checkConstraint(newTypeName)==false) return;\n        const data = {\n            token: localStorage.getItem('token'),\n            productType: {\n                _id: {\n                    typeID: this.props.typeProductValue._id.typeID,\n                    storeID: this.props.infoUser.email,\n                }, \n                name: newTypeName,\n            }\n        }\n        // alert(data.product.name)\n        axios.put(`http://localhost:5000/api/product/type`, data)\n            .then(res => {\n                // Có khi mình sẽ cập nhật type ở dây\n                console.log(\"Update success\");\n                alert('update được rồi anh trai')\n            })\n            .catch(err => {\n                console.log(err);\n                alert(\"Lỗi gì cmnr\")\n            })\n        this.props.changeAddTypeStatus();\n        this.props.changeEditTypeStatus();\n    }\n    typeName = \"\";\n    loadInitialData = () => {\n        if (this.props.isAddTypeStatus) {\n            \n        }\n        else\n        {\n            this.typeName = this.props.typeProductValue.name;\n            this.setState({change: true});\n        } \n    }\n\n    changeTypeName(e)\n    {\n        this.typeName = e.target.value;\n    }\n    render() {\n        return (\n            <form style={{ zIndex: '10', minWidth: '500px', width: '600px', justifyContent: 'center', marginTop: '10%' }} autoComplete=\"off\" noValidate>\n                <Card>\n                    <CardHeader \n                        style={{ color: 'blue', backgroundColor: '#efeeef', textAlign: 'center' }} \n                        title={this.props.isAddTypeStatus? \"Add Type\" : \"Edit Type\"}\n                        />\n                    <Divider />\n                    <CardContent>\n                        <Grid \n                            container \n                            spacing={2}\n                            justifyContent={'center'}\n                            alignItems={'center'}\n                        >\n                            <Grid item md={2} xs={12}>\n                                TypeName\n                            </Grid>\n                            <Grid item md={10} xs={12}>\n                                <TextField\n                                    id=\"outlined-basic\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                    type=\"text\"\n                                    name=\"typeName\"\n                                    defaultValue={this.typeName}\n                                    onChange={(e) => this.changeTypeName(e)}\n                                />\n                            </Grid>\n                            <Grid item md={12} xs={12}>\n                                <Stack spacing={3}>\n                                   \n                                </Stack>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <Divider />\n                    <Box sx={{ display: 'flex', justifyContent: 'space-evenly', p: 2 }}>\n                        <Button \n                            style={{ backgroundColor: 'yellowgreen' }} \n                            // onClick={() => this.addShift()} \n                            onClick={() => this.handle()}\n                            variant=\"contained\" \n                            startIcon={<BiPlusMedical />}\n                        >\n                            Xác nhận\n                        </Button>\n                        <Button \n                            style={{ backgroundColor: 'red' }} \n                            // onClick={() => this.editShift()}\n                            onClick={() => this.cancel()}\n                            variant=\"contained\" \n                            startIcon={<GiCancel />}\n                        >\n                            Cancel\n                        </Button>\n                    </Box>\n                </Card>\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        addTypeStatus: state.addTypeStatus,\n        isAddTypeStatus: state.isAddTypeStatus,\n        infoUser: state.infoUser,\n        typeProductValue: state.typeProductValue\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeEditTypeStatus: () => {\n            dispatch({\n                type: \"CHANGE_EDIT_TYPE_STATUS\",\n            });\n        },\n        changeAddTypeStatus: () => {\n            dispatch({\n                type: \"CHANGE_ADD_TYPE_STATUS\",\n            });\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTypeModal);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/Tabs.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/ConfirmModal.js",["510","511","512","513","514","515"],"import React, { Component } from 'react';\nimport { Card, CardHeader, Divider, Grid, TextField, Box, CardContent, Button } from '@mui/material';\nimport { connect } from 'react-redux'\nimport { BiPlusMedical, BiEdit } from 'react-icons/bi';\nimport Stack from '@mui/material/Stack';\nimport { GiCancel } from 'react-icons/gi'\nimport axios from 'axios';\n\nclass ConfirmModal extends Component {\n    constructor(props) {\n        super(props);\n    }\n    confirm = () => {\n        // Thực hiện các lệnh xử lý tại đây\n        this.props.changeConfirmStatus();\n        this.props.setConfirm();\n    }\n\n    cancel = () => {\n        this.props.changeConfirmStatus();\n        this.props.setQuit();\n    }\n\n    getMessage = ()  => {\n        var message = \"Cái này chưa code\";\n        switch(this.props.confirmCode)\n        {\n            case 'confirm-delete-good':\n                message = \"Are you sure to delete this product ?\";\n            case 'confirm-import-good':\n                message = \"Are you sure to import this product ?\";\n        }\n        return (\n            <div>\n                {message}\n            </div>\n        );\n    }\n    render() {\n        console.log(this.props.objectEditShift);\n        return (\n            <form style={{ zIndex: '10', minWidth: '500px', width: '600px', justifyContent: 'center', marginTop: '10%' }} autoComplete=\"off\" noValidate>\n                <Card>\n                    <CardHeader style={{ color: 'blue', backgroundColor: '#efeeef' }} title=\"Confirm\" />\n                    <Divider />\n                    <CardContent>\n                        <Grid container spacing={2}>\n                            <Grid item md={12} xs={12}>\n                                {this.getMessage()}\n                            </Grid>\n                            <Grid item md={12} xs={12}>\n                                <Stack spacing={3}>\n                                   \n                                </Stack>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <Divider />\n                    <Box sx={{ display: 'flex', justifyContent: 'space-evenly', p: 2 }}>\n                        <Button style={{ backgroundColor: 'yellowgreen' }} onClick={() => this.confirm()} variant=\"contained\" startIcon={<BiPlusMedical />}>\n                            Xác nhận\n                        </Button>\n                        <Button style={{ backgroundColor: 'red' }} onClick={(e) => this.cancel(e)} variant=\"contained\" startIcon={<GiCancel />}>\n                            Hủy\n                        </Button>\n                    </Box>\n                </Card>\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        confirmStatus: state.confirmStatus,\n        deleteStatus: state.deleteStatus,\n        confirmCode: state.confirmCode,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeConfirmStatus: () => {\n            dispatch({\n                type: \"CHANGE_CONFIRM_STATUS\",\n            });\n        },\n        setConfirm: () => {\n            dispatch({\n                type: \"CONFIRM\",\n            });\n        },\n        setQuit: () => {\n            dispatch({\n                type: \"QUIT\",\n            });\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmModal);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/SearchBar.js",["516","517","518","519"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { MdClear} from \"react-icons/md\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport { withStyles } from '@material-ui/styles';\nimport classNames from \"classnames\";\n\nconst styles = theme => ({\n  root: {\n    // height: theme.spacing(6),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    height: \"80px\",\n  },\n//   iconButton: {\n//     color: theme.palette.action.active,\n//     transform: \"scale(1, 1)\",\n//     transition: theme.transitions.create([\"transform\", \"color\"], {\n//       duration: theme.transitions.duration.shorter,\n//       easing: theme.transitions.easing.easeInOut,\n//     }),\n//   },\n  iconButtonHidden: {\n    transform: \"scale(0, 0)\",\n    \"& > $icon\": {\n      opacity: 0,\n    },\n  },\n  searchIconButton: {\n    // marginRight: theme.spacing(-6),\n  },\n//   icon: {\n//     transition: theme.transitions.create([\"opacity\"], {\n//       duration: theme.transitions.duration.shorter,\n//       easing: theme.transitions.easing.easeInOut,\n//     }),\n//   },\n  input: {\n    width: \"100%\",\n  },\n  searchContainer: {\n    margin: \"4px 8px 4px 8px\",\n    height: \"40px\",\n    // width: `calc(100% - ${theme.spacing(6 + 4)}px)`, // 6 button + 4 margin\n  },\n});\nconst SearchBar = React.forwardRef(\n  (\n    {\n      cancelOnEscape,\n      className,\n      classes,\n      closeIcon,\n      disabled,\n      onCancelSearch,\n      onRequestSearch,\n      searchIcon,\n      style,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const inputRef = React.useRef();\n    const [value, setValue] = React.useState(inputProps.value);\n\n    React.useEffect(() => {\n      setValue(inputProps.value);\n    }, [inputProps.value]);\n\n    const handleFocus = React.useCallback(\n      (e) => {\n        if (inputProps.onFocus) {\n          inputProps.onFocus(e);\n        }\n      },\n      [inputProps.onFocus]\n    );\n\n    const handleBlur = React.useCallback(\n      (e) => {\n        setValue((v) => v.trim());\n        if (inputProps.onBlur) {\n          inputProps.onBlur(e);\n        }\n      },\n      [inputProps.onBlur]\n    );\n\n    const handleInput = React.useCallback(\n      (e) => {\n        setValue(e.target.value);\n        if (inputProps.onChange) {\n          inputProps.onChange(e.target.value);\n        }\n      },\n      [inputProps.onChange]\n    );\n\n    const handleCancel = React.useCallback(() => {\n      setValue(\"\");\n      if (onCancelSearch) {\n        onCancelSearch();\n      }\n    }, [onCancelSearch]);\n\n    const handleRequestSearch = React.useCallback(() => {\n      if (onRequestSearch) {\n        onRequestSearch(value);\n      }\n    }, [onRequestSearch, value]);\n\n    const handleKeyUp = React.useCallback(\n      (e) => {\n        if (e.charCode === 13 || e.key === \"Enter\") {\n          handleRequestSearch();\n        } else if (\n          cancelOnEscape &&\n          (e.charCode === 27 || e.key === \"Escape\")\n        ) {\n          handleCancel();\n        }\n        if (inputProps.onKeyUp) {\n          inputProps.onKeyUp(e);\n        }\n      },\n      [handleRequestSearch, cancelOnEscape, handleCancel, inputProps.onKeyUp]\n    );\n\n    React.useImperativeHandle(ref, () => ({\n      focus: () => {\n        inputRef.current.focus();\n      },\n      blur: () => {\n        inputRef.current.blur();\n      },\n    }));\n\n    return (\n      <Paper className={classNames(classes.root, className)} style={{height: '40px'}}>\n        <div className={classes.searchContainer}>\n          <Input\n            {...inputProps}\n            inputRef={inputRef}\n            onBlur={handleBlur}\n            value={value}\n            onChange={handleInput}\n            onKeyUp={handleKeyUp}\n            onFocus={handleFocus}\n            fullWidth\n            className={classes.input}\n            disableUnderline\n            disabled={disabled}\n          />\n        </div>\n        <IconButton\n          onClick={handleRequestSearch}\n          className={classNames(classes.iconButton, classes.searchIconButton, {\n            [classes.iconButtonHidden]: value !== \"\",\n          })}\n          disabled={disabled}\n        >\n          {React.cloneElement(searchIcon, {\n            classes: { root: classes.icon },\n          })}\n        </IconButton>\n        <IconButton\n          onClick={handleCancel}\n          className={classNames(classes.iconButton, {\n            [classes.iconButtonHidden]: value === \"\",\n          })}\n          disabled={disabled}\n        >\n          {React.cloneElement(closeIcon, {\n            classes: { root: classes.icon },\n          })}\n        </IconButton>\n      </Paper>\n    );\n  }\n);\n\nSearchBar.defaultProps = {\n  className: \"\",\n  closeIcon: <MdClear/>,\n  disabled: false,\n  placeholder: \"Search\",\n  searchIcon: <AiOutlineSearch />,\n  style: null,\n  value: \"\",\n};\n\nSearchBar.propTypes = {\n  cancelOnEscape: PropTypes.bool,\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  closeIcon: PropTypes.node,\n  disabled: PropTypes.bool,\n  onCancelSearch: PropTypes.func,\n  onChange: PropTypes.func,\n  onRequestSearch: PropTypes.func,\n  placeholder: PropTypes.string,\n  searchIcon: PropTypes.node,\n  style: PropTypes.object,\n  value: PropTypes.string,\n};\n\nexport default withStyles(styles)(SearchBar);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/Calendar.js",["520","521","522"],"import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport StaticDateRangePicker from '@mui/lab/StaticDateRangePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport Box from '@mui/material/Box';\n\nexport default function StaticDateRangePickerDemo() {\n    const [value, setValue] = React.useState([new Date(2021, 2, 2), new Date(2021, 2, 5)]);\n    const [date, setDate] = React.useState(new Date(2021, 4, 2))\n\n    const value1 = [\n        { date: '2021/01/11', count:2 },\n        { date: '2021/04/12', count:2 },\n        { date: '2021/05/01', count:5 },\n        { date: '2021/05/02', count:5 },\n        { date: '2021/05/03', count:1 },\n        { date: '2021/05/04', count:11 },\n        { date: '2021/05/08', count:32 },\n      ];\n\n    return (\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <StaticDateRangePicker\n                displayStaticWrapperAs=\"desktop\"\n                value={value}\n                onChange={(date) => {\n                    setDate(date);\n                }}\n                renderInput={(startProps, endProps) => (\n                    <React.Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                    </React.Fragment>\n                )}\n                calendars={4}\n                disableAutoMonthSwitching={true}\n            />\n        </LocalizationProvider>\n    );\n}\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/UpdateGoodModal.js",["523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/GoodTable.js",["550","551","552","553","554","555"],"import * as React from 'react';\nimport { Component } from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { withStyles } from '@material-ui/styles';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport GoodRow from './TableRow';\n\nfunction createData(index, id, name, quantity, originalPrice, sellPrice, importTime, productType, imgUrl, unit, expires, storeID) {\n    return {\n        storeID,\n        index,\n        id,\n        name,\n        quantity,\n        sellPrice,\n        importTime,\n        imgLink: imgUrl,\n        hidden:\n        {\n            expires: expires,\n            remaining: quantity,\n            originalPrice: originalPrice,\n            productType: productType,\n            unit: unit,\n        },\n    };\n}\n\n\nvar rows = [];\n\nconst styles = theme =>  ({\n    goodTable: {                                     \n        borderWidth: '1px',\n        borderColor: '#ccc',\n        borderStyle: 'solid'\n    },\n    goodTable_Cell: {                                     \n        borderWidth: '1px',\n        borderColor: '#ccc',\n        borderStyle: 'solid',\n        height: '40px',\n    } \n})\n\n\nvar listProductInfor = [];\nvar joinTypeInfor = [];\nvar listTypeInfor = [];\n\nclass GoodTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            update: false\n        }\n        this.loadAllType();\n        this.loadAllGood();\n    }\n    removeProduct= (row) => {\n        // Đây là xử lý ở phía dữ liệu, có thể await gì đó.\n        // Xử lý ở phía giao diện(tạm)\n\n        // Đây là câu lệnh để update nhẹ\n        this.setState({update: this.state.update})\n    }\n    async loadAllGood() {\n        var result = [];\n        const data = {\n            token: localStorage.getItem('token'),\n            filter: {\n                \"_id.storeID\": this.props.infoUser.email,\n            }   \n        }\n        await axios.get(`http://localhost:5000/api/product/`, {\n            params: {...data}\n        })\n            .then(res => {\n                // alert(\"Lấy hết đc product ròi anh chai\");\n                result = res.data.data;\n            })\n            .catch(err => {\n                console.log(err);\n                alert(err)\n            })\n        // Get data và lưu các tên Type vào dữ liệU\n        //Get data và lưu các tên Type vào bảng\n        listProductInfor=[];\n        for(var i=0; i < result.length ; i++)\n        {\n            listProductInfor.push(result[i]);\n        }\n        // Get hết từ cái productjoinType\n        const data1 = {\n            token: localStorage.getItem('token'),\n            filter: {\n                \"_id.storeID\": this.props.infoUser.email,\n            }   \n        }\n        await axios.get(`http://localhost:5000/api/product/join`, {\n            params: {...data}\n        })\n            .then(res => {\n                result = res.data.data;\n            })\n            .catch(err => {\n                console.log(err);\n                alert(err)\n            })  \n        // Lấy các cái jointype\n        joinTypeInfor = [];\n        for(var i = 0 ; i < result.length; i++)\n        {\n            joinTypeInfor.push(result[i]);\n        }\n\n        //createData(index, id, name, quantity, originalPrice, sellPrice, importTime, productType, imgUrl)\n        // Cập nhật vào cái row đi cho chắc\n        rows = [];\n        for(var i = 0; i < listProductInfor.length ; i++)\n        {\n            var obj = listProductInfor[i];\n\n            var joinType = '';\n            // // Lấy tất cả các type trong cái product\n            for(var j = 0; j < joinTypeInfor.length ; j++)\n            {\n\n                // console.log(\"joinTypeInfor[]\", j ,joinTypeInfor[j])\n                if(joinTypeInfor[j]._id.productID == obj._id.productID && joinTypeInfor[j]._id.storeID == obj._id.storeID)\n                {\n                    joinType = joinType + ' ' + this.getTypeNamebyTypeID(joinTypeInfor[j]._id.typeID);\n                }\n            }\n\n            rows.push(\n                createData((i+1), obj._id.productID, obj.name, obj.quantity, \n                    obj.importPrice, obj.sellPrice, obj._id.importDate, joinType, \n                    obj.imgUrl, obj.unit, obj.expires, obj._id.storeID)\n            );\n        }\n        \n        this.setState({change: !this.state.change});\n    }\n\n    async loadAllType() {\n        var result = [];\n        const data = {\n            token: localStorage.getItem('token'),\n            filter: {\n                \"_id.storeID\": this.props.infoUser.email,\n            }   \n        }\n\n        await axios.get(`http://localhost:5000/api/product/type`, \n        {\n            params: {...data}\n        })\n            .then(res => {\n                result = res.data.data;\n            })\n            .catch(err => {\n                console.log(err);\n                alert(err);\n            })\n        //Get data và lưu các tên Type vào bảng\n        listTypeInfor=[];\n        for(var i=0; i < result.length ; i++)\n        {\n            listTypeInfor.push(result[i]);\n        }\n\n        this.setState({change: true});\n    }\n    getTypeNamebyTypeID (typeID) {\n        var typeName='';\n        for(var i = 0; i<listTypeInfor.length;i++)\n        {   \n            if(listTypeInfor[i]._id.typeID == typeID)\n            {\n                typeName = listTypeInfor[i].name;\n                break;\n            }\n        }\n        return typeName;\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div style={{height: '550px', width: '100%', overflowY: 'scroll'}}>\n                <TableContainer component={Paper}>\n                    <Table className={classes.goodTable} aria-label=\"collapsible table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">Index</TableCell>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">ID</TableCell>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">GoodName</TableCell>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">Quantity</TableCell>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">Sell Price</TableCell>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">ImportTime</TableCell>\n                                <TableCell className={classes.goodTable_Cell}/>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map((row) => (\n                                <GoodRow key={row.name} row={row} />\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        addTypeStatus: state.addTypeStatus,\n        infoUser: state.infoUser,\n        isAddTypeStatus: state.isAddTypeStatus,\n        confirmStatus: state.confirmStatus\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)((withStyles(styles, {withTheme: true}))(GoodTable));\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/Regulation.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ChangePassword.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ModalAdd.js",["556","557","558","559"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileSetting.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ListShift.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileDetail.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileHeader.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/fakeData.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/EmployeeTableHeader.js",["560","561"],"import PropTypes from 'prop-types';\n// material\nimport { visuallyHidden } from '@mui/utils';\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nEmployeeTableHeader.propTypes = {\n  order: PropTypes.oneOf(['asc', 'desc']),\n  orderBy: PropTypes.string,\n  rowCount: PropTypes.number,\n  headLabel: PropTypes.array,\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func,\n  onSelectAllClick: PropTypes.func\n};\n\nexport default function EmployeeTableHeader({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick\n}) {\n  // const createSortHandler = (property) => (event) => {\n  //   onRequestSort(event, property);\n  // };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            // indeterminate={numSelected > 0 && numSelected < rowCount}\n            // checked={rowCount > 0 && numSelected === rowCount}\n            // onChange={onSelectAllClick}\n          />\n        </TableCell>\n        {headLabel.map((headCell) => (\n          <TableCell\n            // key={headCell.id}\n            // align={headCell.alignRight ? 'right' : 'left'}\n            // sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              // hideSortIcon\n              // active={orderBy === headCell.id}\n              // direction={orderBy === headCell.id ? order : 'asc'}\n              // onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {/* {orderBy === headCell.id ? (\n                <Box sx={{ ...visuallyHidden }}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null} */}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/EmployeeMoreMenu.js",["562"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/EmployeeToolbar.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/Scrollbar.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/SearchNotFound.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/Label.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/Page.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/DarkMode.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/TableRow.js",["563","564","565","566"],"import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport { Image } from 'cloudinary-react';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport { makeStyles } from '@material-ui/styles';\nimport GoodImage from './goodExample.jpg';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { useDispatch } from 'react-redux'\nimport axios from 'axios';\n\nconst useStyles = makeStyles(theme => ({\n    goodTable_Cell:{\n        borderWidth: '1px',\n        borderColor: '#ccc',\n        borderStyle: 'solid',\n        height: 4\n    }\n}));\n\n\n\nfunction GoodRow(props) {\n    const { row } = props;\n    const [open, setOpen] = React.useState(false);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const deleteProduct = async () =>\n    {\n        // Xoá sản phẩm\n        const data = {\n            token: localStorage.getItem('token'),\n            products:\n            [\n                {\n                    productID: row.id,\n                    importDate: row.importTime,\n                    storeID: row.storeID,\n                }\n            ]\n            \n        }\n        axios.delete(`http://localhost:5000/api/product`,{data: data})\n            .then(res => {\n                alert(\"delete product success\");\n            })\n            .catch(err => {\n                alert(err);\n            })\n        \n        // Get hết các cái join của sản phẩm\n        var allJoinMatch = [];\n        const data1 = {\n            token: localStorage.getItem('token'),\n            filter: {\n                \"_id.storeID\": row.storeID,\n                \"_id.productID\": row.id,\n            }   \n        }\n        await axios.get(`http://localhost:5000/api/product/join`, \n        {\n            params: {...data1}\n        })\n            .then(res => {\n                allJoinMatch = res.data.data;\n            })\n            .catch(err => {\n                console.log(err);\n                alert(err);\n            })\n        console.log(allJoinMatch);\n        // Xoá các join liên quan đến sản phẩm\n        var allProductJoin = [];\n        for(var i = 0 ; i < allJoinMatch.length; i++)\n        {\n            allProductJoin.push({\n                productID: row.id,\n                typeID: allJoinMatch[i]._id.typeID,\n                importDate: allJoinMatch[i]._id.importDate,\n                storeID: row.storeID,\n            });\n        }\n        const dataJoin = {\n            token: localStorage.getItem('token'),\n            productJoinTypes: allProductJoin,      \n        }\n\n        console.log(dataJoin);\n\n        await axios.delete(`http://localhost:5000/api/product/join`,{data: dataJoin})\n            .then(res => {\n                console.log(\"delete join success\");\n            })\n            .catch(err => {\n                alert(err);\n            })\n\n        // Tạm thời\n        // window.location.reload();\n    }\n    return (\n        <React.Fragment>\n            <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n                <TableCell className={classes.goodTable_Cell} component=\"th\" scope=\"row\">{row.index}</TableCell>\n                <TableCell className={classes.goodTable_Cell} component=\"th\" scope=\"row\">{row.id}</TableCell>\n                <TableCell className={classes.goodTable_Cell} component=\"th\" scope=\"row\">{row.name}</TableCell>\n                <TableCell className={classes.goodTable_Cell} align=\"right\">{row.quantity}</TableCell>\n                <TableCell className={classes.goodTable_Cell} align=\"right\">{row.sellPrice}</TableCell>\n                <TableCell className={classes.goodTable_Cell} align=\"right\">\n                    {/* {row.importTime == null ? '' : row.importTime.substring(0,row.importTime.indexOf('T'))} */}\n                    {row.importTime == null ? '': row.importTime.substring(0,row.importTime.indexOf('T'))}\n                </TableCell>\n                <TableCell className={classes.goodTable_Cell} align=\"right\">\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                        {open ? (<KeyboardArrowUpIcon />) : (<KeyboardArrowDownIcon />)}\n                    </IconButton>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell className={classes.goodTable_Cell} style={{ padding: 0}} colSpan={8}>\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <Box sx={{ margin: 1 }}>\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                Other information\n                            </Typography>\n                            <div style={{display: 'flex'}}>\n                                {  \n                                    row.imgLink == \"none\"\n                                    ? <div style={{width: '100px', height: '100px', objectFit:'cover'}}><img src={GoodImage} style={{width: '100px', height: '100px', objectFit:'cover'}}/></div>\n                                    \n                                    : <div style={{width: '100px', height: '100px', objectFit:'cover'}}><Image style={{width: '100px', height: '100px', objectFit:'cover'}} cloudName=\"databaseimg\" publicId={row.imgLink}>{row.imgLink}</Image></div>\n                                }\n                                \n                                \n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell className={classes.goodTable_Cell}>Expired Day</TableCell>\n                                            <TableCell className={classes.goodTable_Cell}>Original Price</TableCell>\n                                            <TableCell className={classes.goodTable_Cell}>Good Remain</TableCell>\n                                            <TableCell className={classes.goodTable_Cell}>Product Type</TableCell>\n                                            <TableCell className={classes.goodTable_Cell}>Unit</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell className={classes.goodTable_Cell} component=\"th\" scope=\"row\">\n                                                {/* {row.hidden.expires == null ? '': row.hidden.expires.substring(0,row.hidden.expires.indexOf('T'))} */}\n                                                {row.hidden.expires == null ? '': row.hidden.expires.substring(0,row.hidden.expires.indexOf('T'))}\n                                            </TableCell>\n                                            <TableCell className={classes.goodTable_Cell}>{row.hidden.originalPrice}</TableCell>\n                                            <TableCell className={classes.goodTable_Cell}>{row.hidden.remaining}</TableCell>\n                                            <TableCell className={classes.goodTable_Cell}>{row.hidden.productType}</TableCell>\n                                            <TableCell className={classes.goodTable_Cell}>{row.hidden.unit}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                                <div className=\"button-container\">\n                                    <Button \n                                        onClick={() => {\n                                            // Truyền cái data vào trong hàm đây luôn\n                                            dispatch({type: \"UPDATE_GOOD_DATA\", \n                                                _id: {\n                                                    productID: row.id,\n                                                    importDate: row.importTime,\n                                                },\n                                                name: row.name,\n                                                imgUrl: row.imgLink,\n                                                quantity: row.quantity,\n                                                remain: row.quantity,\n                                                unit: row.unit,\n                                                importPrice: row.hidden.originalPrice,\n                                                sellPrice: row.sellPrice,\n                                                expires: row.hidden.expires,  \n                                                unit: row.hidden.unit\n                                            });\n                                            dispatch({ type: \"CHANGE_UPDATE_GOOD_STATUS\", });\n                                        }}\n                                        variant=\"contained\"\n                                    >\n                                        Update\n                                    </Button>\n                                    <Button \n                                        variant=\"contained\"\n                                        onClick={deleteProduct}\n                                    >\n                                        Delete\n                                        \n                                    </Button>\n                                </div>\n                            </div>  \n                        </Box>\n                    </Collapse>\n                </TableCell>\n            </TableRow>\n        </React.Fragment>\n    );\n}\nexport default GoodRow;","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Employee/employeeListReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/SellProduct/InfomationBillEdit.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/SellProduct/ListRecieptReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/SellProduct/StatusShowHistoryRecieptReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/SellProduct/StatusEditInfomationBill.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Employee/employeeSackedListReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Employee/currentEditEmployeeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/UnShiftEmployee.js",["567"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/FixedCalendar.js",["568"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/HistoryReciept.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/FixedCalendarCell.js",["569"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/TableReciept.js",["570","571","572","573","574","575"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeePartials/SackedEmployeeMenu.js",["576"],{"ruleId":"577","replacedBy":"578"},{"ruleId":"579","replacedBy":"580"},{"ruleId":"581","severity":1,"message":"582","line":10,"column":10,"nodeType":"583","messageId":"584","endLine":10,"endColumn":24},{"ruleId":"585","severity":1,"message":"586","line":13,"column":3,"nodeType":"587","messageId":"588","endLine":15,"endColumn":4},{"ruleId":"589","severity":1,"message":"590","line":21,"column":45,"nodeType":"591","messageId":"592","endLine":21,"endColumn":47},{"ruleId":"593","severity":1,"message":"594","line":94,"column":28,"nodeType":"595","messageId":"596","endLine":94,"endColumn":29,"suggestions":"597"},{"ruleId":"593","severity":1,"message":"594","line":94,"column":44,"nodeType":"595","messageId":"596","endLine":94,"endColumn":45,"suggestions":"598"},{"ruleId":"581","severity":1,"message":"599","line":13,"column":8,"nodeType":"583","messageId":"584","endLine":13,"endColumn":15},{"ruleId":"593","severity":1,"message":"594","line":106,"column":30,"nodeType":"595","messageId":"596","endLine":106,"endColumn":31,"suggestions":"600"},{"ruleId":"593","severity":1,"message":"594","line":106,"column":46,"nodeType":"595","messageId":"596","endLine":106,"endColumn":47,"suggestions":"601"},{"ruleId":"581","severity":1,"message":"602","line":13,"column":8,"nodeType":"583","messageId":"584","endLine":13,"endColumn":13},{"ruleId":"581","severity":1,"message":"599","line":6,"column":8,"nodeType":"583","messageId":"584","endLine":6,"endColumn":15},{"ruleId":"593","severity":1,"message":"594","line":97,"column":28,"nodeType":"595","messageId":"596","endLine":97,"endColumn":29,"suggestions":"603"},{"ruleId":"593","severity":1,"message":"594","line":97,"column":44,"nodeType":"595","messageId":"596","endLine":97,"endColumn":45,"suggestions":"604"},{"ruleId":"581","severity":1,"message":"605","line":9,"column":11,"nodeType":"583","messageId":"584","endLine":9,"endColumn":32},{"ruleId":"606","severity":1,"message":"607","line":96,"column":29,"nodeType":"608","endLine":96,"endColumn":161},{"ruleId":"609","severity":1,"message":"610","line":103,"column":58,"nodeType":"611","messageId":"612","endLine":103,"endColumn":60},{"ruleId":"609","severity":1,"message":"610","line":123,"column":58,"nodeType":"611","messageId":"612","endLine":123,"endColumn":60},{"ruleId":"613","severity":1,"message":"614","line":170,"column":25,"nodeType":"608","endLine":175,"endColumn":26},{"ruleId":"613","severity":1,"message":"615","line":179,"column":25,"nodeType":"608","endLine":179,"endColumn":136},{"ruleId":"581","severity":1,"message":"616","line":2,"column":8,"nodeType":"583","messageId":"584","endLine":2,"endColumn":12},{"ruleId":"581","severity":1,"message":"617","line":3,"column":8,"nodeType":"583","messageId":"584","endLine":3,"endColumn":13},{"ruleId":"581","severity":1,"message":"618","line":4,"column":8,"nodeType":"583","messageId":"584","endLine":4,"endColumn":17},{"ruleId":"581","severity":1,"message":"619","line":5,"column":8,"nodeType":"583","messageId":"584","endLine":5,"endColumn":22},{"ruleId":"581","severity":1,"message":"620","line":7,"column":10,"nodeType":"583","messageId":"584","endLine":7,"endColumn":22},{"ruleId":"581","severity":1,"message":"621","line":14,"column":5,"nodeType":"583","messageId":"584","endLine":14,"endColumn":11},{"ruleId":"581","severity":1,"message":"622","line":23,"column":5,"nodeType":"583","messageId":"584","endLine":23,"endColumn":20},{"ruleId":"581","severity":1,"message":"623","line":25,"column":8,"nodeType":"583","messageId":"584","endLine":25,"endColumn":23},{"ruleId":"581","severity":1,"message":"624","line":38,"column":10,"nodeType":"583","messageId":"584","endLine":38,"endColumn":21},{"ruleId":"581","severity":1,"message":"625","line":70,"column":5,"nodeType":"583","messageId":"584","endLine":70,"endColumn":15},{"ruleId":"581","severity":1,"message":"626","line":71,"column":5,"nodeType":"583","messageId":"584","endLine":71,"endColumn":18},{"ruleId":"581","severity":1,"message":"627","line":73,"column":5,"nodeType":"583","messageId":"584","endLine":73,"endColumn":9},{"ruleId":"581","severity":1,"message":"628","line":74,"column":5,"nodeType":"583","messageId":"584","endLine":74,"endColumn":16},{"ruleId":"581","severity":1,"message":"629","line":8,"column":8,"nodeType":"583","messageId":"584","endLine":8,"endColumn":19},{"ruleId":"581","severity":1,"message":"630","line":2,"column":10,"nodeType":"583","messageId":"584","endLine":2,"endColumn":18},{"ruleId":"581","severity":1,"message":"631","line":6,"column":10,"nodeType":"583","messageId":"584","endLine":6,"endColumn":20},{"ruleId":"581","severity":1,"message":"632","line":6,"column":30,"nodeType":"583","messageId":"584","endLine":6,"endColumn":35},{"ruleId":"581","severity":1,"message":"633","line":11,"column":8,"nodeType":"583","messageId":"584","endLine":11,"endColumn":17},{"ruleId":"581","severity":1,"message":"634","line":15,"column":8,"nodeType":"583","messageId":"584","endLine":15,"endColumn":22},{"ruleId":"581","severity":1,"message":"635","line":16,"column":8,"nodeType":"583","messageId":"584","endLine":16,"endColumn":22},{"ruleId":"581","severity":1,"message":"636","line":17,"column":8,"nodeType":"583","messageId":"584","endLine":17,"endColumn":28},{"ruleId":"581","severity":1,"message":"637","line":20,"column":10,"nodeType":"583","messageId":"584","endLine":20,"endColumn":29},{"ruleId":"609","severity":1,"message":"610","line":185,"column":31,"nodeType":"611","messageId":"612","endLine":185,"endColumn":33},{"ruleId":"609","severity":1,"message":"610","line":192,"column":78,"nodeType":"611","messageId":"612","endLine":192,"endColumn":80},{"ruleId":"609","severity":1,"message":"610","line":206,"column":70,"nodeType":"611","messageId":"612","endLine":206,"endColumn":72},{"ruleId":"609","severity":1,"message":"610","line":214,"column":79,"nodeType":"611","messageId":"612","endLine":214,"endColumn":81},{"ruleId":"609","severity":1,"message":"610","line":227,"column":75,"nodeType":"611","messageId":"612","endLine":227,"endColumn":77},{"ruleId":"609","severity":1,"message":"610","line":263,"column":31,"nodeType":"611","messageId":"612","endLine":263,"endColumn":33},{"ruleId":"638","severity":1,"message":"639","line":299,"column":17,"nodeType":"583","messageId":"640","endLine":299,"endColumn":18},{"ruleId":"609","severity":1,"message":"610","line":347,"column":44,"nodeType":"611","messageId":"612","endLine":347,"endColumn":46},{"ruleId":"609","severity":1,"message":"610","line":359,"column":26,"nodeType":"611","messageId":"612","endLine":359,"endColumn":28},{"ruleId":"609","severity":1,"message":"610","line":383,"column":140,"nodeType":"611","messageId":"612","endLine":383,"endColumn":142},{"ruleId":"609","severity":1,"message":"610","line":575,"column":69,"nodeType":"611","messageId":"612","endLine":575,"endColumn":71},{"ruleId":"609","severity":1,"message":"641","line":606,"column":77,"nodeType":"611","messageId":"612","endLine":606,"endColumn":79},{"ruleId":"589","severity":1,"message":"590","line":176,"column":89,"nodeType":"591","messageId":"592","endLine":176,"endColumn":91},{"ruleId":"581","severity":1,"message":"642","line":2,"column":28,"nodeType":"583","messageId":"584","endLine":2,"endColumn":35},{"ruleId":"581","severity":1,"message":"643","line":2,"column":54,"nodeType":"583","messageId":"584","endLine":2,"endColumn":57},{"ruleId":"581","severity":1,"message":"644","line":2,"column":59,"nodeType":"583","messageId":"584","endLine":2,"endColumn":70},{"ruleId":"581","severity":1,"message":"631","line":2,"column":80,"nodeType":"583","messageId":"584","endLine":2,"endColumn":90},{"ruleId":"581","severity":1,"message":"645","line":4,"column":10,"nodeType":"583","messageId":"584","endLine":4,"endColumn":23},{"ruleId":"581","severity":1,"message":"646","line":4,"column":25,"nodeType":"583","messageId":"584","endLine":4,"endColumn":31},{"ruleId":"581","severity":1,"message":"647","line":5,"column":8,"nodeType":"583","messageId":"584","endLine":5,"endColumn":13},{"ruleId":"581","severity":1,"message":"648","line":6,"column":10,"nodeType":"583","messageId":"584","endLine":6,"endColumn":18},{"ruleId":"581","severity":1,"message":"649","line":7,"column":8,"nodeType":"583","messageId":"584","endLine":7,"endColumn":14},{"ruleId":"581","severity":1,"message":"650","line":8,"column":8,"nodeType":"583","messageId":"584","endLine":8,"endColumn":16},{"ruleId":"581","severity":1,"message":"651","line":9,"column":8,"nodeType":"583","messageId":"584","endLine":9,"endColumn":19},{"ruleId":"581","severity":1,"message":"602","line":11,"column":8,"nodeType":"583","messageId":"584","endLine":11,"endColumn":13},{"ruleId":"581","severity":1,"message":"636","line":14,"column":8,"nodeType":"583","messageId":"584","endLine":14,"endColumn":28},{"ruleId":"581","severity":1,"message":"635","line":15,"column":8,"nodeType":"583","messageId":"584","endLine":15,"endColumn":22},{"ruleId":"581","severity":1,"message":"652","line":16,"column":8,"nodeType":"583","messageId":"584","endLine":16,"endColumn":18},{"ruleId":"581","severity":1,"message":"634","line":17,"column":8,"nodeType":"583","messageId":"584","endLine":17,"endColumn":22},{"ruleId":"581","severity":1,"message":"653","line":18,"column":10,"nodeType":"583","messageId":"584","endLine":18,"endColumn":26},{"ruleId":"581","severity":1,"message":"654","line":19,"column":8,"nodeType":"583","messageId":"584","endLine":19,"endColumn":18},{"ruleId":"581","severity":1,"message":"655","line":21,"column":5,"nodeType":"583","messageId":"584","endLine":21,"endColumn":17},{"ruleId":"581","severity":1,"message":"656","line":25,"column":5,"nodeType":"583","messageId":"584","endLine":25,"endColumn":12},{"ruleId":"609","severity":1,"message":"610","line":81,"column":127,"nodeType":"611","messageId":"612","endLine":81,"endColumn":129},{"ruleId":"581","severity":1,"message":"642","line":2,"column":28,"nodeType":"583","messageId":"584","endLine":2,"endColumn":35},{"ruleId":"581","severity":1,"message":"643","line":2,"column":54,"nodeType":"583","messageId":"584","endLine":2,"endColumn":57},{"ruleId":"581","severity":1,"message":"644","line":2,"column":59,"nodeType":"583","messageId":"584","endLine":2,"endColumn":70},{"ruleId":"581","severity":1,"message":"631","line":2,"column":80,"nodeType":"583","messageId":"584","endLine":2,"endColumn":90},{"ruleId":"609","severity":1,"message":"610","line":124,"column":127,"nodeType":"611","messageId":"612","endLine":124,"endColumn":129},{"ruleId":"581","severity":1,"message":"642","line":2,"column":28,"nodeType":"583","messageId":"584","endLine":2,"endColumn":35},{"ruleId":"581","severity":1,"message":"643","line":2,"column":54,"nodeType":"583","messageId":"584","endLine":2,"endColumn":57},{"ruleId":"581","severity":1,"message":"644","line":2,"column":59,"nodeType":"583","messageId":"584","endLine":2,"endColumn":70},{"ruleId":"581","severity":1,"message":"631","line":2,"column":80,"nodeType":"583","messageId":"584","endLine":2,"endColumn":90},{"ruleId":"581","severity":1,"message":"655","line":9,"column":5,"nodeType":"583","messageId":"584","endLine":9,"endColumn":17},{"ruleId":"581","severity":1,"message":"656","line":13,"column":5,"nodeType":"583","messageId":"584","endLine":13,"endColumn":12},{"ruleId":"609","severity":1,"message":"610","line":139,"column":127,"nodeType":"611","messageId":"612","endLine":139,"endColumn":129},{"ruleId":"581","severity":1,"message":"602","line":5,"column":8,"nodeType":"583","messageId":"584","endLine":5,"endColumn":13},{"ruleId":"589","severity":1,"message":"657","line":43,"column":39,"nodeType":"591","messageId":"658","endLine":43,"endColumn":41},{"ruleId":"589","severity":1,"message":"657","line":51,"column":39,"nodeType":"591","messageId":"658","endLine":51,"endColumn":41},{"ruleId":"589","severity":1,"message":"657","line":63,"column":39,"nodeType":"591","messageId":"658","endLine":63,"endColumn":41},{"ruleId":"581","severity":1,"message":"659","line":2,"column":43,"nodeType":"583","messageId":"584","endLine":2,"endColumn":52},{"ruleId":"581","severity":1,"message":"645","line":4,"column":10,"nodeType":"583","messageId":"584","endLine":4,"endColumn":23},{"ruleId":"581","severity":1,"message":"660","line":9,"column":8,"nodeType":"583","messageId":"584","endLine":9,"endColumn":20},{"ruleId":"638","severity":1,"message":"639","line":137,"column":17,"nodeType":"583","messageId":"640","endLine":137,"endColumn":18},{"ruleId":"589","severity":1,"message":"657","line":31,"column":43,"nodeType":"591","messageId":"658","endLine":31,"endColumn":45},{"ruleId":"589","severity":1,"message":"657","line":39,"column":43,"nodeType":"591","messageId":"658","endLine":39,"endColumn":45},{"ruleId":"589","severity":1,"message":"657","line":50,"column":43,"nodeType":"591","messageId":"658","endLine":50,"endColumn":45},{"ruleId":"581","severity":1,"message":"661","line":2,"column":80,"nodeType":"583","messageId":"584","endLine":2,"endColumn":85},{"ruleId":"581","severity":1,"message":"646","line":4,"column":25,"nodeType":"583","messageId":"584","endLine":4,"endColumn":31},{"ruleId":"581","severity":1,"message":"662","line":6,"column":20,"nodeType":"583","messageId":"584","endLine":6,"endColumn":33},{"ruleId":"609","severity":1,"message":"610","line":52,"column":45,"nodeType":"611","messageId":"612","endLine":52,"endColumn":47},{"ruleId":"609","severity":1,"message":"610","line":83,"column":37,"nodeType":"611","messageId":"612","endLine":83,"endColumn":39},{"ruleId":"609","severity":1,"message":"610","line":85,"column":66,"nodeType":"611","messageId":"612","endLine":85,"endColumn":68},{"ruleId":"609","severity":1,"message":"610","line":96,"column":27,"nodeType":"611","messageId":"612","endLine":96,"endColumn":29},{"ruleId":"609","severity":1,"message":"610","line":117,"column":45,"nodeType":"611","messageId":"612","endLine":117,"endColumn":47},{"ruleId":"581","severity":1,"message":"659","line":2,"column":43,"nodeType":"583","messageId":"584","endLine":2,"endColumn":52},{"ruleId":"581","severity":1,"message":"646","line":4,"column":25,"nodeType":"583","messageId":"584","endLine":4,"endColumn":31},{"ruleId":"581","severity":1,"message":"602","line":7,"column":8,"nodeType":"583","messageId":"584","endLine":7,"endColumn":13},{"ruleId":"585","severity":1,"message":"586","line":10,"column":5,"nodeType":"587","messageId":"588","endLine":12,"endColumn":6},{"ruleId":"663","severity":1,"message":"664","line":26,"column":9,"nodeType":"665","messageId":"666","endLine":32,"endColumn":10},{"ruleId":"667","severity":1,"message":"668","line":30,"column":13,"nodeType":"669","messageId":"670","endLine":31,"endColumn":67},{"ruleId":"671","severity":1,"message":"672","line":79,"column":7,"nodeType":"673","endLine":79,"endColumn":27,"suggestions":"674"},{"ruleId":"671","severity":1,"message":"672","line":89,"column":7,"nodeType":"673","endLine":89,"endColumn":26,"suggestions":"675"},{"ruleId":"671","severity":1,"message":"672","line":99,"column":7,"nodeType":"673","endLine":99,"endColumn":28,"suggestions":"676"},{"ruleId":"671","severity":1,"message":"672","line":129,"column":7,"nodeType":"673","endLine":129,"endColumn":78,"suggestions":"677"},{"ruleId":"581","severity":1,"message":"678","line":9,"column":19,"nodeType":"583","messageId":"584","endLine":9,"endColumn":27},{"ruleId":"581","severity":1,"message":"679","line":10,"column":12,"nodeType":"583","messageId":"584","endLine":10,"endColumn":16},{"ruleId":"581","severity":1,"message":"680","line":12,"column":11,"nodeType":"583","messageId":"584","endLine":12,"endColumn":17},{"ruleId":"581","severity":1,"message":"642","line":2,"column":28,"nodeType":"583","messageId":"584","endLine":2,"endColumn":35},{"ruleId":"581","severity":1,"message":"643","line":2,"column":54,"nodeType":"583","messageId":"584","endLine":2,"endColumn":57},{"ruleId":"581","severity":1,"message":"644","line":2,"column":59,"nodeType":"583","messageId":"584","endLine":2,"endColumn":70},{"ruleId":"581","severity":1,"message":"631","line":2,"column":80,"nodeType":"583","messageId":"584","endLine":2,"endColumn":90},{"ruleId":"581","severity":1,"message":"645","line":4,"column":10,"nodeType":"583","messageId":"584","endLine":4,"endColumn":23},{"ruleId":"581","severity":1,"message":"646","line":4,"column":25,"nodeType":"583","messageId":"584","endLine":4,"endColumn":31},{"ruleId":"581","severity":1,"message":"647","line":5,"column":8,"nodeType":"583","messageId":"584","endLine":5,"endColumn":13},{"ruleId":"581","severity":1,"message":"648","line":6,"column":10,"nodeType":"583","messageId":"584","endLine":6,"endColumn":18},{"ruleId":"581","severity":1,"message":"633","line":13,"column":8,"nodeType":"583","messageId":"584","endLine":13,"endColumn":17},{"ruleId":"581","severity":1,"message":"636","line":16,"column":8,"nodeType":"583","messageId":"584","endLine":16,"endColumn":28},{"ruleId":"581","severity":1,"message":"635","line":17,"column":8,"nodeType":"583","messageId":"584","endLine":17,"endColumn":22},{"ruleId":"581","severity":1,"message":"652","line":18,"column":8,"nodeType":"583","messageId":"584","endLine":18,"endColumn":18},{"ruleId":"581","severity":1,"message":"634","line":19,"column":8,"nodeType":"583","messageId":"584","endLine":19,"endColumn":22},{"ruleId":"638","severity":1,"message":"639","line":98,"column":17,"nodeType":"583","messageId":"640","endLine":98,"endColumn":18},{"ruleId":"609","severity":1,"message":"610","line":138,"column":44,"nodeType":"611","messageId":"612","endLine":138,"endColumn":46},{"ruleId":"609","severity":1,"message":"610","line":151,"column":31,"nodeType":"611","messageId":"612","endLine":151,"endColumn":33},{"ruleId":"609","severity":1,"message":"610","line":157,"column":78,"nodeType":"611","messageId":"612","endLine":157,"endColumn":80},{"ruleId":"609","severity":1,"message":"610","line":168,"column":70,"nodeType":"611","messageId":"612","endLine":168,"endColumn":72},{"ruleId":"609","severity":1,"message":"610","line":174,"column":79,"nodeType":"611","messageId":"612","endLine":174,"endColumn":81},{"ruleId":"609","severity":1,"message":"610","line":185,"column":75,"nodeType":"611","messageId":"612","endLine":185,"endColumn":77},{"ruleId":"609","severity":1,"message":"610","line":218,"column":31,"nodeType":"611","messageId":"612","endLine":218,"endColumn":33},{"ruleId":"638","severity":1,"message":"639","line":309,"column":17,"nodeType":"583","messageId":"640","endLine":309,"endColumn":18},{"ruleId":"609","severity":1,"message":"610","line":391,"column":20,"nodeType":"611","messageId":"612","endLine":391,"endColumn":22},{"ruleId":"609","severity":1,"message":"610","line":400,"column":26,"nodeType":"611","messageId":"612","endLine":400,"endColumn":28},{"ruleId":"609","severity":1,"message":"610","line":426,"column":127,"nodeType":"611","messageId":"612","endLine":426,"endColumn":129},{"ruleId":"609","severity":1,"message":"610","line":630,"column":69,"nodeType":"611","messageId":"612","endLine":630,"endColumn":71},{"ruleId":"609","severity":1,"message":"641","line":660,"column":81,"nodeType":"611","messageId":"612","endLine":660,"endColumn":83},{"ruleId":"581","severity":1,"message":"681","line":101,"column":15,"nodeType":"583","messageId":"584","endLine":101,"endColumn":20},{"ruleId":"638","severity":1,"message":"639","line":119,"column":17,"nodeType":"583","messageId":"640","endLine":119,"endColumn":18},{"ruleId":"638","severity":1,"message":"639","line":127,"column":17,"nodeType":"583","messageId":"640","endLine":127,"endColumn":18},{"ruleId":"609","severity":1,"message":"610","line":137,"column":51,"nodeType":"611","messageId":"612","endLine":137,"endColumn":53},{"ruleId":"609","severity":1,"message":"610","line":137,"column":104,"nodeType":"611","messageId":"612","endLine":137,"endColumn":106},{"ruleId":"609","severity":1,"message":"610","line":186,"column":44,"nodeType":"611","messageId":"612","endLine":186,"endColumn":46},{"ruleId":"638","severity":1,"message":"682","line":24,"column":21,"nodeType":"583","messageId":"640","endLine":24,"endColumn":29},{"ruleId":"638","severity":1,"message":"683","line":25,"column":21,"nodeType":"583","messageId":"640","endLine":25,"endColumn":28},{"ruleId":"638","severity":1,"message":"684","line":35,"column":21,"nodeType":"583","messageId":"640","endLine":35,"endColumn":27},{"ruleId":"638","severity":1,"message":"685","line":36,"column":21,"nodeType":"583","messageId":"640","endLine":36,"endColumn":26},{"ruleId":"581","severity":1,"message":"686","line":3,"column":10,"nodeType":"583","messageId":"584","endLine":3,"endColumn":24},{"ruleId":"581","severity":1,"message":"643","line":4,"column":10,"nodeType":"583","messageId":"584","endLine":4,"endColumn":13},{"ruleId":"609","severity":1,"message":"610","line":65,"column":21,"nodeType":"611","messageId":"612","endLine":65,"endColumn":23},{"ruleId":"581","severity":1,"message":"687","line":15,"column":8,"nodeType":"583","messageId":"584","endLine":15,"endColumn":22},{"ruleId":"609","severity":1,"message":"610","line":137,"column":49,"nodeType":"611","messageId":"612","endLine":137,"endColumn":51},{"ruleId":"606","severity":1,"message":"607","line":138,"column":105,"nodeType":"608","endLine":138,"endColumn":188},{"ruleId":"688","severity":1,"message":"689","line":184,"column":49,"nodeType":"690","messageId":"612","endLine":184,"endColumn":53},{"ruleId":"581","severity":1,"message":"602","line":3,"column":8,"nodeType":"583","messageId":"584","endLine":3,"endColumn":13},{"ruleId":"581","severity":1,"message":"602","line":3,"column":8,"nodeType":"583","messageId":"584","endLine":3,"endColumn":13},{"ruleId":"581","severity":1,"message":"602","line":3,"column":8,"nodeType":"583","messageId":"584","endLine":3,"endColumn":13},{"ruleId":"581","severity":1,"message":"691","line":8,"column":10,"nodeType":"583","messageId":"584","endLine":8,"endColumn":14},{"ruleId":"581","severity":1,"message":"692","line":8,"column":16,"nodeType":"583","messageId":"584","endLine":8,"endColumn":26},{"ruleId":"581","severity":1,"message":"642","line":8,"column":28,"nodeType":"583","messageId":"584","endLine":8,"endColumn":35},{"ruleId":"581","severity":1,"message":"693","line":8,"column":48,"nodeType":"583","messageId":"584","endLine":8,"endColumn":54},{"ruleId":"581","severity":1,"message":"644","line":8,"column":56,"nodeType":"583","messageId":"584","endLine":8,"endColumn":67},{"ruleId":"589","severity":1,"message":"657","line":68,"column":35,"nodeType":"591","messageId":"658","endLine":68,"endColumn":37},{"ruleId":"581","severity":1,"message":"694","line":5,"column":9,"nodeType":"583","messageId":"584","endLine":5,"endColumn":19},"no-native-reassign",["695"],"no-negated-in-lhs",["696"],"no-unused-vars","'FiChevronRight' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["697","698"],["699","700"],"'emailjs' is defined but never used.",["701","702"],["703","704"],"'axios' is defined but never used.",["705","706"],["707","708"],"'statusConfirmPassword' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Page' is defined but never used.","'Label' is defined but never used.","'Scrollbar' is defined but never used.","'SearchNotFound' is defined but never used.","'sentenceCase' is defined but never used.","'Avatar' is defined but never used.","'TablePagination' is defined but never used.","'EmployeeToolbar' is defined but never used.","'EmployeeObj' is defined but never used.","'filterName' is assigned a value but never used.","'filteredUsers' is assigned a value but never used.","'page' is assigned a value but never used.","'rowsPerPage' is assigned a value but never used.","'SplitButton' is defined but never used.","'DataGrid' is defined but never used.","'InputLabel' is defined but never used.","'Modal' is defined but never used.","'GoodImage' is defined but never used.","'DateTimePicker' is defined but never used.","'AdapterDateFns' is defined but never used.","'LocalizationProvider' is defined but never used.","'GiConsoleController' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","Expected '!==' and instead saw '!='.","'Divider' is defined but never used.","'Box' is defined but never used.","'CardContent' is defined but never used.","'BiPlusMedical' is defined but never used.","'BiEdit' is defined but never used.","'Stack' is defined but never used.","'GiCancel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'DatePicker' is defined but never used.","'AiFillPlusCircle' is defined but never used.","'CancelIcon' is defined but never used.","'productTypes' is assigned a value but never used.","'typeSet' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'TextField' is defined but never used.","'AddTypeModal' is defined but never used.","'Alert' is defined but never used.","'GiVampireCape' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'inputProps'. Either include it or remove the dependency array.","ArrayExpression",["709"],["710"],["711"],["712"],"'setValue' is assigned a value but never used.","'date' is assigned a value but never used.","'value1' is assigned a value but never used.","'data1' is assigned a value but never used.","'fromHour' is already defined.","'fromMin' is already defined.","'toHour' is already defined.","'toMin' is already defined.","'visuallyHidden' is defined but never used.","'TableContainer' is defined but never used.","no-dupe-keys","Duplicate key 'unit'.","ObjectExpression","'Card' is defined but never used.","'CardHeader' is defined but never used.","'Button' is defined but never used.","'GiPayMoney' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"713","fix":"714","desc":"715"},{"messageId":"716","fix":"717","desc":"718"},{"messageId":"713","fix":"719","desc":"715"},{"messageId":"716","fix":"720","desc":"718"},{"messageId":"713","fix":"721","desc":"715"},{"messageId":"716","fix":"722","desc":"718"},{"messageId":"713","fix":"723","desc":"715"},{"messageId":"716","fix":"724","desc":"718"},{"messageId":"713","fix":"725","desc":"715"},{"messageId":"716","fix":"726","desc":"718"},{"messageId":"713","fix":"727","desc":"715"},{"messageId":"716","fix":"728","desc":"718"},{"desc":"729","fix":"730"},{"desc":"729","fix":"731"},{"desc":"729","fix":"732"},{"desc":"733","fix":"734"},"removeEscape",{"range":"735","text":"736"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"737","text":"738"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"739","text":"736"},{"range":"740","text":"738"},{"range":"741","text":"736"},{"range":"742","text":"738"},{"range":"743","text":"736"},{"range":"744","text":"738"},{"range":"745","text":"736"},{"range":"746","text":"738"},{"range":"747","text":"736"},{"range":"748","text":"738"},"Update the dependencies array to be: [inputProps]",{"range":"749","text":"750"},{"range":"751","text":"750"},{"range":"752","text":"750"},"Update the dependencies array to be: [cancelOnEscape, inputProps, handleRequestSearch, handleCancel]",{"range":"753","text":"754"},[3973,3974],"",[3973,3973],"\\",[3989,3990],[3989,3989],[3643,3644],[3643,3643],[3659,3660],[3659,3659],[3188,3189],[3188,3188],[3204,3205],[3204,3204],[1989,2009],"[inputProps]",[2200,2219],[2427,2448],[3164,3235],"[cancelOnEscape, inputProps, handleRequestSearch, handleCancel]"]