[{"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/index.js":"1","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/App.js":"2","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Store.js":"3","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/InfoUserReducer.js":"4","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ObjectEditShiftReducer.js":"5","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/TypeStatusReducer.js":"6","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/LoginStatusReducer.js":"7","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Router/DirectionURL.js":"8","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ProvinceReducer.js":"9","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/DistrictReducer.js":"10","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ListShiftReducer.js":"11","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/RoleReducer.js":"12","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddShiftReducer.js":"13","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusDarkModeReducer.js":"14","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusEditShiftReducer.js":"15","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusConfirmReducer.js":"16","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusDeleteConfirmReducer.js":"17","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusEditTypeReducer.js":"18","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusIsAddTypeReducer.js":"19","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusUpdateGoodReducer.js":"20","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddTypeReducer.js":"21","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusModalConfirmPassword.js":"22","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Body.js":"23","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/ForgotPassword.js":"24","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/Login.js":"25","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/Register.js":"26","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/LoginWithEmployee.js":"27","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/ModalConfirmPassword.js":"28","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Router/DashboardURL.js":"29","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Partials/SideNavBar.js":"30","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeeManager.js":"31","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/ReiceiptManager.js":"32","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodManager.js":"33","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/GoodImport.js":"34","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/DashBoard.js":"35","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/Profile.js":"36","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/SellProduct.js":"37","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/SearchBar.js":"38","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/GoodTable.js":"39","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/AddTypeModal.js":"40","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/EditTypeModal.js":"41","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileSetting.js":"42","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ChangePassword.js":"43","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/UpdateGoodModal.js":"44","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/ConfirmModal.js":"45","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ListShift.js":"46","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/Calendar.js":"47","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/GroupButton.js":"48","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ModalAdd.js":"49","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileHeader.js":"50","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/ComponentToPrint.js":"51","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileDetail.js":"52","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/Tabs.js":"53","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/Statistic.js":"54","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/DarkMode.js":"55","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/BaseOptionChart.js":"56"},{"size":295,"mtime":1633526918199,"results":"57","hashOfConfig":"58"},{"size":2571,"mtime":1634554437187,"results":"59","hashOfConfig":"58"},{"size":2269,"mtime":1634555131981,"results":"60","hashOfConfig":"58"},{"size":1294,"mtime":1634097955063,"results":"61","hashOfConfig":"58"},{"size":330,"mtime":1634050541311,"results":"62","hashOfConfig":"58"},{"size":331,"mtime":1633861365892,"results":"63","hashOfConfig":"58"},{"size":284,"mtime":1633526918189,"results":"64","hashOfConfig":"58"},{"size":2136,"mtime":1633861365892,"results":"65","hashOfConfig":"58"},{"size":372,"mtime":1634554437218,"results":"66","hashOfConfig":"58"},{"size":376,"mtime":1634554437216,"results":"67","hashOfConfig":"58"},{"size":1416,"mtime":1634554437217,"results":"68","hashOfConfig":"58"},{"size":304,"mtime":1634554437218,"results":"69","hashOfConfig":"58"},{"size":293,"mtime":1633939930791,"results":"70","hashOfConfig":"58"},{"size":292,"mtime":1634050541312,"results":"71","hashOfConfig":"58"},{"size":302,"mtime":1634050541312,"results":"72","hashOfConfig":"58"},{"size":293,"mtime":1634554437219,"results":"73","hashOfConfig":"58"},{"size":378,"mtime":1634554437220,"results":"74","hashOfConfig":"58"},{"size":299,"mtime":1634554437220,"results":"75","hashOfConfig":"58"},{"size":360,"mtime":1634554437221,"results":"76","hashOfConfig":"58"},{"size":309,"mtime":1634554437222,"results":"77","hashOfConfig":"58"},{"size":294,"mtime":1634554437218,"results":"78","hashOfConfig":"58"},{"size":360,"mtime":1634554437221,"results":"79","hashOfConfig":"58"},{"size":1627,"mtime":1634554839831,"results":"80","hashOfConfig":"58"},{"size":12996,"mtime":1634120194061,"results":"81","hashOfConfig":"58"},{"size":14532,"mtime":1634554437207,"results":"82","hashOfConfig":"58"},{"size":16316,"mtime":1634554437208,"results":"83","hashOfConfig":"58"},{"size":8440,"mtime":1634554437208,"results":"84","hashOfConfig":"58"},{"size":1908,"mtime":1634554437210,"results":"85","hashOfConfig":"58"},{"size":1324,"mtime":1634554437223,"results":"86","hashOfConfig":"58"},{"size":6850,"mtime":1634554437210,"results":"87","hashOfConfig":"58"},{"size":238,"mtime":1633939930777,"results":"88","hashOfConfig":"58"},{"size":234,"mtime":1633526918188,"results":"89","hashOfConfig":"58"},{"size":7075,"mtime":1634555132004,"results":"90","hashOfConfig":"58"},{"size":25075,"mtime":1634555132002,"results":"91","hashOfConfig":"58"},{"size":4258,"mtime":1634554437190,"results":"92","hashOfConfig":"58"},{"size":2255,"mtime":1634554437212,"results":"93","hashOfConfig":"58"},{"size":28242,"mtime":1634554437214,"results":"94","hashOfConfig":"58"},{"size":5332,"mtime":1634554437193,"results":"95","hashOfConfig":"58"},{"size":9528,"mtime":1634554437193,"results":"96","hashOfConfig":"58"},{"size":6591,"mtime":1634555131979,"results":"97","hashOfConfig":"58"},{"size":5660,"mtime":1634555131980,"results":"98","hashOfConfig":"58"},{"size":880,"mtime":1633939930786,"results":"99","hashOfConfig":"58"},{"size":6556,"mtime":1634554426409,"results":"100","hashOfConfig":"58"},{"size":24570,"mtime":1634555132000,"results":"101","hashOfConfig":"58"},{"size":3407,"mtime":1634555131980,"results":"102","hashOfConfig":"58"},{"size":6597,"mtime":1634554426411,"results":"103","hashOfConfig":"58"},{"size":1565,"mtime":1634554437190,"results":"104","hashOfConfig":"58"},{"size":2693,"mtime":1634554437190,"results":"105","hashOfConfig":"58"},{"size":10969,"mtime":1634555167861,"results":"106","hashOfConfig":"58"},{"size":3563,"mtime":1634554437243,"results":"107","hashOfConfig":"58"},{"size":689,"mtime":1634554437213,"results":"108","hashOfConfig":"58"},{"size":15074,"mtime":1634554437248,"results":"109","hashOfConfig":"58"},{"size":1107,"mtime":1634554437215,"results":"110","hashOfConfig":"58"},{"size":1776,"mtime":1634554437191,"results":"111","hashOfConfig":"58"},{"size":3038,"mtime":1634554437211,"results":"112","hashOfConfig":"58"},{"size":5405,"mtime":1634554437190,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"1evuik7",{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"116"},{"filePath":"120","messages":"121","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"116"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"116"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"116"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"116"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"116"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"116"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"116"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/index.js",[],["242","243"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/App.js",["244"],"import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport DirectionURL from './Router/DirectionURL';\nimport './css/App.css'\nimport { connect } from 'react-redux'\nimport axios from 'axios';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  async componentWillMount() {\n    if (localStorage.getItem('token') && localStorage.getItem('token') !== \"\") {\n      axios.post(`http://localhost:5000/refresh`, {\n        token: localStorage.getItem('token'),\n      }).then(res => {\n        console.log(res);\n        if (res.status === 200) {\n          localStorage.setItem('token', res.data.token);\n          const data = {\n            email: res.data.data._id,\n            firstName: res.data.data.firstName ? res.data.data.firstName : \"\",\n            lastName: res.data.data.lastName ? res.data.data.lastName : \"\",\n            old: res.data.data.old ? res.data.data.old : \"\",\n            gender: res.data.data.gender ? res.data.data.gender : \"0\",\n            storeName: res.data.data.storeName ? res.data.data.storeName : \"\",\n            tel: res.data.data.phoneNumber ? res.data.data.phoneNumber : \"\",\n            province: res.data.data.province ? res.data.data.province : \"0\",\n            district: res.data.data.district ? res.data.data.district : \"0\",\n            address: res.data.data.address ? res.data.data.address : \"\",\n          }\n          this.props.updateProfile(data);\n          this.props.changeLoginStatus();\n        }\n      }).catch(err => {\n        console.log(\"thất bại\");\n      })\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <DirectionURL></DirectionURL>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isLogin: state.loginStatus,\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    changeLoginStatus: () => {\n      dispatch({\n        type: \"CHANGE_LOGIN_STATUS\",\n      });\n    },\n    updateProvince: (data) => {\n      dispatch({\n        type: \"UPDATE_DATA\",\n        data: data,\n      })\n    },\n    updateProfile: (data) => {\n      dispatch({\n          type: \"UPDATA_DATA_USER\",\n          email: data.email,\n          firstName: data.firstName,\n          lastName: data.lastName,\n          old: data.old,\n          gender: data.gender,\n          storeName: data.storeName,\n          tel: data.tel,\n          province: data.province,\n          district: data.district,\n          address: data.address,\n      })\n  }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Store.js",["245"],"import loginStatusReducer from './LoginStatusReducer';\nimport typeUserReducer from './TypeStatusReducer';\nimport countryReducer from './ProvinceReducer';\nimport districtReducer from './DistrictReducer';\nimport statusAddShiftReducer from './Status/StatusAddShiftReducer';\nimport infoUserReducer from './InfoUserReducer';\nimport listShiftReducer from './ListShiftReducer';\nimport statusEditShiftReducer from  './Status/StatusEditShiftReducer';\nimport objectEditShiftReducer from './ObjectEditShiftReducer';\nimport statusDarkmodeReducer from './Status/StatusDarkModeReducer';\nimport statusModalConfirmPasswordReducer from './Status/StatusModalConfirmPassword';\nimport statusConfirmReducer from './Status/StatusConfirmReducer';\nimport statusDeleteConfirmReducer from './Status/StatusDeleteConfirmReducer';\nimport statusUpdateGoodReducer from './Status/StatusUpdateGoodReducer';\nimport statusEditTypeReducer from './Status/StatusEditTypeReducer';\nimport statusAddTypeReducer from './Status/StatusAddTypeReducer';\nimport statusIsAddTypeReducer from './Status/StatusIsAddTypeReducer';\nimport statusModalConfirmPasswordReducer from './Status/StatusModalConfirmPassword';\nimport roleReducer from './RoleReducer';\nimport confirmModalReducer from './ConfirmModalReducer';\nimport statusYesConfirmReducer from './Status/StatusYesConfirmReducer';\nvar redux = require('redux');\n\nconst allReducers = redux.combineReducers({\n    loginStatus: loginStatusReducer,\n    typeUser: typeUserReducer,\n    country: countryReducer,\n    district: districtReducer,\n    addStatus: statusAddShiftReducer,\n    confirmStatus: statusConfirmReducer,\n    deleteStatus: statusDeleteConfirmReducer,\n    editTypeStatus: statusEditTypeReducer,\n    addTypeStatus: statusAddTypeReducer,\n    isAddTypeStatus: statusIsAddTypeReducer,\n    updateGoodStatus: statusUpdateGoodReducer,\n    infoUser: infoUserReducer,\n    listShift: listShiftReducer,\n    role: roleReducer,\n    confirmCode: confirmModalReducer,\n    yesConfirm: statusYesConfirmReducer,\n    editShiftStatus: statusEditShiftReducer,\n    objectEditShift: objectEditShiftReducer,\n    statusDarkmode: statusDarkmodeReducer,\n    statusConfirmPassword: statusModalConfirmPasswordReducer,\n})\n\n\nvar Store = redux.createStore(allReducers);\n\nexport default Store;","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/InfoUserReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ObjectEditShiftReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/TypeStatusReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/LoginStatusReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Router/DirectionURL.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ProvinceReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/DistrictReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/ListShiftReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/RoleReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddShiftReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusDarkModeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusEditShiftReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusConfirmReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusDeleteConfirmReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusEditTypeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusIsAddTypeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusUpdateGoodReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusAddTypeReducer.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Reducer/Status/StatusModalConfirmPassword.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Body.js",["246"],"import React, { Component } from 'react';\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport DashboardURL from '../Router/DashboardURL';\nimport { connect } from 'react-redux';\nimport SideNavBar from './Partials/SideNavBar';\n\nimport '../css/Body.css'\nimport ModalConfirmPassword from './ModalConfirmPassword';\n\nclass Body extends Component {\n    render() {\n        return (\n            <div>\n                <SideNavBar />\n                <div \n                    className=\"body-content\"\n                    style={{\n                        width: 'calc(100% - 224px)',\n                        position: 'fixed', top: 0, right: 0, backgroundColor: this.props.statusDarkmode ? 'rgb(221,235,255)' : 'rgba(20,20,20,0.4)', borderLeft: '2px solid #99999975',\n                    }}\n                >\n                    <DashboardURL></DashboardURL>\n                </div>\n                {this.props.statusConfirmPassword ?\n                    <div className=\"modal-comfirm-password\">\n                        <ModalConfirmPassword></ModalConfirmPassword>\n                    </div> : null\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isLogin: state.loginStatus,\n        statusDarkmode: state.statusDarkmode,\n        statusConfirmPassword: state.statusConfirmPassword,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeLoginStatus: () => {\n            dispatch({\n                type: \"CHANGE_LOGIN_STATUS\",\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Body);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/ForgotPassword.js",["247","248","249"],"import React, { Component } from 'react';\nimport Avatar from '@mui/material/Avatar'\nimport { IconContext } from \"react-icons\";\nimport { FiSend, FiXSquare } from \"react-icons/fi\";\nimport { BsFillEnvelopeFill, BsLockFill, BsBoxArrowInLeft, BsCodeSlash } from \"react-icons/bs\";\nimport emailjs from 'emailjs-com';\nimport Alert from '@mui/material/Alert';\nimport axios from 'axios';\nimport {\n    NavLink\n} from \"react-router-dom\";\nvar bcrypt = require('bcryptjs');\n\n\nclass ForgotPassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: \"\",\n            statusSendCode: true,\n            statusFailed: false,\n            statusSuccess: false,\n        }\n    }\n\n    message = \"\"\n\n    // Send code tới người dùng\n    sendCode = (a = this.makeCode(6)) => {\n        this.setState({\n            code: \"123456\"\n        })\n        // this.setState({\n        //     code: a,\n        // })\n        // emailjs.init(\"user_K1g5N5hUDI0rjsa1uRoI4\");\n        // emailjs.send(\"gmail_main\", \"template_plasdgf\", {\n        //     To_mail: `${document.querySelector('#email').value}`,\n        //     code: `${a}`,\n        // })\n        //     .then((response) => {\n        //         console.log('SUCCESS!', response.status, response.text);\n        //     }, (err) => {\n        //         console.log('FAILED...', err);\n        //     });\n    }\n\n    // Tạo code để xác nhận\n    makeCode = (length) => {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() *\n                charactersLength));\n        }\n        return result;\n    }\n\n    // Hashpassword\n    hash = (pass) => {\n        var hash = bcrypt.hashSync(pass, 12)\n        return hash;\n    }\n\n\n    // Out Alert\n    OutAlert = () => {\n        this.setState({\n            statusFailed: false,\n            statusSuccess: false,\n        })\n    }\n\n    //Check tìm lại mật khẩu\n    findPassword = (e) => {\n        this.OutAlert();\n        if (this.blurEmail() && this.blurCode() && this.blurPassword() && this.blurRePassword()) {\n            const form = document.getElementById('findpass-form');\n            axios.post(`http://localhost:5000/find-password`, {\n                email: document.querySelector('#email').value,\n                password: this.hash(document.getElementById('password').value),\n            })\n                .then(res => {\n                    form.reset();\n                    console.log(res.data.status);\n                    switch (res.data.status) {\n                        case 1:\n                            this.message = res.data.message;\n                            this.setState({\n                                statusSuccess: true,\n                            })\n                            break;\n                        case -1:\n                            this.message = res.data.message;\n                            this.setState({\n                                statusFailed: true,\n                            })\n                            break;\n                        default:\n                            break;\n                    }\n                })\n                .catch(err => {\n                    this.message = \"Error system\";\n                    this.setState({\n                        statusFailed: true,\n                    })\n                })\n        }\n    }\n\n\n    // Handle user blue change in input\n    blurEmail = () => {\n        var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const event = document.querySelector('#email');\n        const elementValue = event.value;\n        const formGroup = event.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            this.setState({\n                statusSendCode: true,\n            })\n            return false;\n        } else if (!regex.test(elementValue)) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\n            this.setState({\n                statusSendCode: true,\n            })\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            this.setState({\n                statusSendCode: false,\n            })\n            return true;\n        }\n    }\n\n    blurPassword = () => {\n        const e = document.getElementById('password');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\n            return false;\n        } else if (e.value.length < 6) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    blurCode = () => {\n        const e = document.getElementById('code');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (this.state.code === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please press Send Code\"\n            return false\n        } else if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter code here\"\n            return false\n        } else if (elementValue !== this.state.code) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Code is incorrect\"\n            return false\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    blurRePassword = () => {\n        const e = document.getElementById('re-password')\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else if (document.getElementById('password').value !== elementValue) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Re-password not correct\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true\n        }\n    }\n\n    changeInput = (e) => {\n        const formGroup = e.target.parentElement.parentElement;\n        formGroup.classList.remove('invalid');\n        formGroup.querySelector('.form-message').innerText = \"\";\n    }\n\n    render() {\n        const enterPress = this.findPassword;\n        document.onkeydown = function (e) {\n            switch (e.which) {\n                case 13:\n                    enterPress(e);\n                    break;\n                default:\n                    break;\n            }\n        }\n        return (\n            <div className=\"Login\">\n                <div className=\"form-findpass\">\n                    <div className=\"auth-form\">\n                        <Avatar className=\"auth-form__avatar\">\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\n                                <FiSend></FiSend>\n                            </IconContext.Provider>\n                        </Avatar>\n                        <div className=\"auth-form__container\">\n                            <div className=\"auth-form__header\">\n                                <div className=\"auth-form__heading\">Find password</div>\n                                <NavLink onclick=\"\" to=\"/login\" className=\"auth-form__switch-btn\"><BsBoxArrowInLeft className=\"arrow-return\"></BsBoxArrowInLeft></NavLink>\n                            </div>\n                        </div>\n                        <div className=\"auth-form__body\">\n                            <form action=\"/findpass-submit?_method=PUT\" method=\"POST\" id=\"findpass-form\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                                    <div className=\"input-custom\">\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"Ex: abc@gmail.com\" type=\"text\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"code\" className=\"form-label\">Code</label>\n                                    <div className=\"input-custom\">\n                                        <span><BsCodeSlash className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurCode()} name=\"code\" rules=\"required|email\" id=\"code\" placeholder=\"Ex: ABC321\" type=\"text\" />\n                                        <button type=\"button\" disabled={this.state.statusSendCode} onClick={() => this.sendCode()} class=\"btn btn-primary disabel send-code\">SEND</button>\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\" className=\"form-label\">New password</label>\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurPassword()} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\" className=\"form-label\">Re-password</label>\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurRePassword()} name=\"password\" rules=\"required|min:6\" id=\"re-password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"auth-form__btn\">\n                                    <div onClick={(e) => this.findPassword(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Find Password</div>\n                                </div>\n\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                {this.state.statusSuccess ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n            </div>\n        );\n    }\n}\n\n\n\n\nexport default ForgotPassword;\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/Login.js",["250","251"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../css/Login.css'\nimport { BsFillEnvelopeFill, BsLockFill } from \"react-icons/bs\";\nimport { FiChevronRight, FiXSquare } from \"react-icons/fi\";\nimport { BiUser } from \"react-icons/bi\";\nimport { Avatar } from '@mui/material'\nimport { IconContext } from \"react-icons\";\nimport { GoogleLogin } from 'react-google-login';\nimport axios from 'axios';\nimport Alert from '@mui/material/Alert';\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            appId: \"543752153590340\",\n            clientId: \"826925109796-mi95l41fi57bdlolpvnfdg5bpt9oc81h.apps.googleusercontent.com\",\n            statusFailed: false,\n            statusSucces: false,\n        }\n    }\n\n    message = \"\";\n\n    // Login with google\n    onLoginSuccess = (res) => {\n        this.OutAlert();\n        this.props.setRole();\n        axios.post(`http://localhost:5000/sign-in-with-google`, res.profileObj)\n            .then(res => {\n                console.log(\"thành công\");\n                console.log(res.data);\n                switch (res.data.status) {\n                    case 1:\n                        this.message = res.data.message;\n                        this.setState({\n                            statusSucces: true,\n                        })\n                        localStorage.setItem('token', res.data.token);\n                        const data = {\n                            email: res.data.data._id,\n                            firstName: res.data.data.firstName ? res.data.data.firstName : \"\",\n                            lastName: res.data.data.lastName ? res.data.data.lastName : \"\",\n                            old: res.data.data.old ? res.data.data.old : \"\",\n                            gender: res.data.data.gender ? res.data.data.gender : \"0\",\n                            storeName: res.data.data.storeName ? res.data.data.storeName : \"\",\n                            tel: res.data.data.phoneNumber ? res.data.data.phoneNumber : \"\",\n                            province: res.data.data.province ? res.data.data.province : \"0\",\n                            district: res.data.data.district ? res.data.data.district : \"0\",\n                            address: res.data.data.address ? res.data.data.address : \"\",\n                        }\n                        this.props.updateProfile(data);\n                        this.props.changeLoginStatus();\n                        break;\n                    case -1:\n                        this.message = res.data.message;\n                        this.setState({\n                            statusFailed: true,\n                        })\n                        break;\n                    default:\n                        break;\n                }\n            })\n            .catch(err => {\n                this.message = \"Error, server don't active\";\n                this.setState({\n                    statusFailed: true,\n                })\n            })\n    }\n\n    onFailureSuccess = (res) => {\n        this.setState({\n            statusFailed: true,\n            statusSucces: false,\n        })\n    }\n\n    // Out Alert\n    OutAlert = () => {\n        this.setState({\n            statusFailed: false,\n            statusSucces: false,\n        })\n    }\n\n    // Check để thay đổi trạng thái đã login hay chưa\n    isLoginCheck = (e) => {\n        this.OutAlert();\n        this.props.setRole();\n        if (this.blurEmail() && this.blurPassword()) {\n            axios.post(`http://localhost:5000/sign-in-with-gmail-password`, {\n                email: document.querySelector('#email').value,\n                password: document.getElementById('password').value,\n            })\n                .then(res => {\n                    console.log(res.data);\n                    console.log(res.data.email);\n                    switch (res.data.status) {\n                        case 1:\n                            this.message = res.data.message;\n                            this.setState({\n                                statusSucces: true,\n                            })\n                            localStorage.setItem('token', res.data.token);\n                            const data = {\n                                email: res.data.email? res.data.email : res.data.data._id,\n                                firstName: res.data.data.firstName ? res.data.data.firstName : \"cc\",\n                                lastName: res.data.data.lastName ? res.data.data.lastName : \"abc\",\n                                old: res.data.data.old ? res.data.data.old : \"\",\n                                gender: res.data.data.gender ? res.data.data.gender : \"0\",\n                                storeName: res.data.data.storeName ? res.data.data.storeName : \"\",\n                                tel: res.data.data.phoneNumber ? res.data.data.phoneNumber : \"\",\n                                salary: res.data.data.salary ? res.data.data.salary : \"\",\n                                province: res.data.data.province ? res.data.data.province : \"0\",\n                                district: res.data.data.district ? res.data.data.district : \"0\",\n                                address: res.data.data.address ? res.data.data.address : \"\",\n                            }\n                            this.props.updateProfile(data);\n                            this.props.changeLoginStatus();\n                            break;\n                        case -1:\n                            this.message = res.data.message;\n                            this.setState({\n                                statusFailed: true,\n                            })\n                            break;\n                        default:\n                            break;\n                    }\n                })\n                .catch(err => {\n                    this.message = \"Enter again\";\n                    this.setState({\n                        statusFailed: true,\n                    })\n                })\n        }\n    }\n\n\n    // Handle user : blur , change in input\n    blurEmail = () => {\n        var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const event = document.querySelector('#email');\n        let elementValue = event.value;\n        const formGroup = event.parentElement.parentElement;\n        // check validate\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else if (!regex.test(elementValue)) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n\n    blurPassword = () => {\n        const e = document.getElementById('password');\n        let elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\n            return false;\n        } else if (e.value.length < 6) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    changeInput = (e) => {\n        const formGroup = e.target.parentElement.parentElement;\n        formGroup.classList.remove('invalid');\n        formGroup.querySelector('.form-message').innerText = \"\";\n    }\n\n\n    render() {\n        const enterPress = this.isLoginCheck;\n        document.onkeydown = function (e) {\n            switch (e.which) {\n                case 13:\n                    enterPress(e);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return (\n            <div className=\"Login\">\n                <div className=\"form-login\">\n                    <div className=\"auth-form\">\n                        <Avatar className=\"auth-form__avatar\">\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\n                                <BiUser></BiUser>\n                            </IconContext.Provider>\n                        </Avatar>\n                        <div className=\"auth-form__container\">\n                            <div className=\"auth-form__header\">\n                                <div className=\"auth-form__heading\">Login</div>\n                                <NavLink to=\"/register\" className=\"auth-form__switch-btn\">Register <FiChevronRight className=\"auth-form__arrow-return\"></FiChevronRight></NavLink>\n                            </div>\n                        </div>\n                        <div className=\"auth-form__body\">\n                            <form action=\"/login-submit\" method=\"POST\" id=\"login-form\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                                    <div className=\"input-custom\">\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"VD: abc@gmail.com\" type=\"text\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={(e) => this.blurPassword(e)} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"auth-form__support\">\n                                    <span className=\"auth-form__support-forget\">\n                                        <NavLink onclick=\"\" to=\"/forgot\" className=\"auth-form__switch-btn\">Forgot password</NavLink>\n                                    </span>\n                                    <span className=\"auth-form__help-separate\" />\n                                    <span className=\"auth-form__support-need-support\">Need help?</span>\n                                </div>\n                                <div className=\"auth-form__support\">\n                                    <GoogleLogin\n                                        className=\"auth-form__support-google\"\n                                        clientId={this.state.clientId}\n                                        buttonText=\"Login with Google\"\n                                        onSuccess={this.onLoginSuccess}\n                                        onFailure={this.onFailureSuccess}\n                                        cookiePolicy={'single_host_origin'}\n                                    />\n                                </div>\n                                <div className=\"auth-form__btn\">\n                                    <div to=\"/home\" id=\"navlink\" onClick={(e) => this.isLoginCheck(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign In</div>\n                                </div>\n                                <div className=\"auth-form__btn\">\n                                    <NavLink to=\"/employee\" id=\"navlink\" className=\"auth-form__btn-log-in auth-form__switch-btn auth-form-employee\">\n                                        Employee\n                                        <FiChevronRight className=\"auth-form__arrow-return\"></FiChevronRight>\n                                    </NavLink>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                {this.state.statusSucces ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isLogin: state.loginStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeLoginStatus: () => {\n            dispatch({\n                type: \"CHANGE_LOGIN_STATUS\",\n            });\n        },\n        updateProfile: (data) => {\n            dispatch({\n                type: \"UPDATA_DATA_USER\",\n                email: data.email,\n                firstName: data.firstName,\n                lastName: data.lastName,\n                old: data.old,\n                gender: data.gender,\n                storeName: data.storeName,\n                tel: data.tel,\n                province: data.province,\n                district: data.district,\n                address: data.address,\n            })\n        },\n        setRole: () => {\n            dispatch({\n                type: \"ADMIN_ROLE\"\n            });\n            localStorage.setItem('role', 'admin');\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/Register.js",["252","253","254"],"import React, { Component } from 'react';\nimport '../../css/Login.css'\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport Avatar from '@mui/material/Avatar'\nimport { IconContext } from \"react-icons\";\nimport { FiChevronLeft, FiUserPlus, FiXSquare } from \"react-icons/fi\";\nimport { BsFillEnvelopeFill, BsLockFill, BsCodeSlash } from \"react-icons/bs\";\nimport { FaPhoneSquare } from \"react-icons/fa\";\nimport axios from 'axios';\nimport Alert from '@mui/material/Alert';\nimport emailjs from 'emailjs-com';\nvar bcrypt = require('bcryptjs');\n\n\nclass Register extends Component {\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            code: \"\",\n            statusSendCode: true,\n            statusFailed: false,\n            statusSuccess: false,\n        }\n    }\n\n    message = \"\";\n\n    // Send code tới người dùng\n    sendCode = (a = this.makeCode(6)) => {\n        this.setState({\n            code: \"123456\"\n        })\n        // this.setState({\n        //     code: a,\n        // })\n        // emailjs.init(\"user_K1g5N5hUDI0rjsa1uRoI4\");\n        // emailjs.send(\"gmail_main\", \"template_plasdgf\", {\n        //     To_mail: `${document.getElementById('email').value}`,\n        //     code: `${a}`,\n        // })\n        //     .then((response) => {\n        //         console.log('SUCCESS!', response.status, response.text);\n        //     }, (err) => {\n        //         console.log('FAILED...', err);\n        //     });\n    }\n\n    // status SignUp \n    SignUp = (e) => {\n        this.OutAlert();\n        if (this.blurEmail() && this.blurCode() && this.blurPassword() && this.blurRePassword() && this.blurTel()) {\n            axios.post(`http://localhost:5000/register-with-email`, {\n                email: document.getElementById('email').value,\n                password: this.hash(document.getElementById('password').value),\n                tel: document.getElementById('tel').value,\n            })\n                .then(res => {\n                    console.log(res.data);\n                    switch (res.data.status) {\n                        case 1:\n                            this.message = res.data.message;\n                            this.setState({\n                                statusSuccess: true,\n                            })\n                            localStorage.setItem('token', res.data.token);\n                            const data = {\n                                email: res.data.email,\n                                firstName: \"\",\n                                lastName:  \"\",\n                                old:  \"\",\n                                gender: \"0\",\n                                storeName: \"\",\n                                tel: document.getElementById('tel').value,\n                                province: \"0\",\n                                district:  \"0\",\n                                address:  \"\",\n                            }\n                            this.props.updateProfile(data);\n                            this.props.changeLoginStatus();\n                            break;\n                        case -1:\n                            this.message = res.data.message;;\n                            this.setState({\n                                statusFailed: true,\n                            })\n                            break;\n                        default:\n                            break;\n                    }\n                })\n                .catch(err => {\n                    this.message = \"Error system\";\n                    this.setState({\n                        statusFailed: true,\n                    })\n                })\n\n        }\n    }\n\n    // Out Alert\n    OutAlert = () => {\n        this.setState({\n            statusFailed: false,\n            statusSuccess: false,\n        })\n    }\n\n    // Tạo mã code cho người dùng xác nhận\n    makeCode = (length) => {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() *\n                charactersLength));\n        }\n        return result;\n    }\n\n    // Hashpassword\n    hash = (pass) => {\n        var hash = bcrypt.hashSync(pass, 12)\n        return hash;\n    }\n\n\n    // Handle user : blur, change in input\n    blurEmail = () => {\n        const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const e = document.getElementById('email');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            this.setState({\n                statusSendCode: true,\n            })\n            return false;\n        } else if (!regex.test(elementValue)) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\n            this.setState({\n                statusSendCode: true,\n            })\n            return false\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            this.setState({\n                statusSendCode: false,\n            })\n            return true;\n        }\n    }\n\n    blurCode = () => {\n        const e = document.getElementById('code');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (this.state.code === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please press Send Code\"\n            return false\n        } else if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter code here\"\n            return false\n        } else if (elementValue !== this.state.code) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Code is incorrect\"\n            return false\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    blurPassword = () => {\n        const e = document.getElementById('password');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\n            return false;\n        } else if (e.value.length < 6) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    blurRePassword = () => {\n        const e = document.getElementById('re-password')\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else if (document.getElementById('password').value !== elementValue) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Re-password not correct\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true\n        }\n    }\n\n    blurTel = () => {\n        const e = document.getElementById('tel');\n        const elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        const regex = /^\\d+$/;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else if (!regex.test(elementValue)) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Phone is not in the correct format\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    changeInput = (e) => {\n        const formGroup = e.target.parentElement.parentElement;\n        formGroup.classList.remove('invalid');\n        formGroup.querySelector('.form-message').innerText = \"\";\n    }\n\n    render() {\n        const enterPress = this.SignUp;\n        document.onkeydown = function (e) {\n            switch (e.which) {\n                case 13:\n                    enterPress(e);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return (\n            <div className=\"Login\">\n                <div className=\"form-register\">\n                    <div className=\"auth-form\">\n                        <Avatar className=\"auth-form__avatar\">\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\n                                <FiUserPlus></FiUserPlus>\n                            </IconContext.Provider>\n                        </Avatar>\n                        <div className=\"auth-form__container\">\n                            <div className=\"auth-form__header\">\n                                <div className=\"auth-form__heading\">Register</div>\n                                <NavLink to=\"/login\" className=\"auth-form__switch-btn\"> <FiChevronLeft className=\"auth-form__arrow-return\"></FiChevronLeft>Login</NavLink>\n                            </div>\n                        </div>\n                        <div className=\"auth-form__body\">\n                            <form action=\"/register-submit\" method=\"post\" id=\"register-form\">\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"VD: abc@gmail.com\" type=\"text\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span><BsCodeSlash className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurCode()} name=\"code\" rules=\"required|email\" id=\"code\" placeholder=\"Ex: ABC321\" type=\"text\" />\n                                        <button type=\"button\" disabled={this.state.statusSendCode} onClick={() => this.sendCode()} class=\"btn btn-primary disabel send-code\">SEND</button>\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurPassword()} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurRePassword()} name=\"re-password\" id=\"re-password\" placeholder=\"Emter re-password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <FaPhoneSquare className=\"input-custom-icon\" ></FaPhoneSquare>\n                                        </span>\n                                        <input className=\"form-control\" onBlur={(e) => this.blurTel(e)} onChange={(e) => this.changeInput(e)} name=\"tel\" rules=\"required\" id=\"tel\" placeholder=\"Ex: 0303030303\" type=\"tel\" />\n\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"register-description\">Bằng cách ấn vào nút\n                                    <span className=\"register-description__keyword\">“ĐĂNG KÝ”</span>\n                                    , tôi đồng ý với\n                                    <span className=\"register-description__keyword\">Điều Khoản Sử Dụng</span> và\n                                    <div className=\"register-description__keyword\"> Chính Sách Bảo Mật</div>\n                                </div>\n                                <div className=\"auth-form__btn\">\n                                    <div onClick={(e) => this.SignUp(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign Up</div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div >\n                {this.state.statusSuccess ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isLogin: state.loginStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeLoginStatus: () => {\n            dispatch({\n                type: \"CHANGE_LOGIN_STATUS\",\n            });\n        },\n        updateProfile: (data) => {\n            dispatch({\n                type: \"UPDATA_DATA_USER\",\n                email: data.email,\n                firstName: data.firstName,\n                lastName: data.lastName,\n                old: data.old,\n                gender: data.gender,\n                storeName: data.storeName,\n                tel: data.tel,\n                province: data.province,\n                district: data.district,\n                address: data.address,\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Login/LoginWithEmployee.js",["255"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../css/Login.css'\nimport { BsFillEnvelopeFill, BsLockFill } from \"react-icons/bs\";\nimport {  FiXSquare,FiChevronLeft } from \"react-icons/fi\";\nimport {FaUserTie} from 'react-icons/fa'\nimport { Avatar } from '@mui/material'\nimport { IconContext } from \"react-icons\";\nimport axios from 'axios';\nimport Alert from '@mui/material/Alert';\n\nclass LoginWithEmployee extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            statusFailed: false,\n            statusSucces: false,\n        }\n    }\n\n    message = \"Login success\";\n\n    // Out Alert\n    OutAlert = () => {\n        this.setState({\n            statusFailed: false,\n            statusSucces: false,\n        })\n    }\n\n    // Check để thay đổi trạng thái đã login hay chưa\n    isLoginCheck = (e) => {\n        // this.OutAlert();\n        // if (this.blurEmail() && this.blurPassword()) {\n        //     axios.post(`http://localhost:5000/sign-in-employee`, {\n        //         username: document.querySelector('#username').value,\n        //         password: document.getElementById('password').value,\n        //     })\n        //         .then(res => {\n        //             switch (res.data.status) {\n        //                 case 1:\n        //                     this.message = res.data.message;\n        //                     this.setState({\n        //                         statusSucces: true,\n        //                     })\n        //                     localStorage.setItem('token', res.data.token);\n        //                     this.props.changeLoginStatus();\n        //                     break;\n        //                 case -1:\n        //                     this.message = res.data.message;\n        //                     this.setState({\n        //                         statusFailed: true,\n        //                     })\n        //                     break;\n        //                 default:\n        //                     break;\n        //             }\n        //         })\n        //         .catch(err => {\n        //             this.message = \"Enter again\";\n        //             this.setState({\n        //                 statusFailed: true,\n        //             })\n        //         })\n        // }\n        this.setState({\n            statusSucces: true,\n        })\n        this.props.setRole()\n    }\n\n\n    // Handle user : blur , change in input\n    blurEmail = () => {\n        const event = document.querySelector('#username');\n        let elementValue = event.value;\n        const formGroup = event.parentElement.parentElement;\n        // check validate\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n\n    blurPassword = () => {\n        const e = document.getElementById('password');\n        let elementValue = e.value;\n        const formGroup = e.parentElement.parentElement;\n        if (elementValue === \"\") {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\n            return false;\n        } else if (e.value.length < 6) {\n            formGroup.className = 'invalid form-group'\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\n            return false;\n        } else {\n            formGroup.classList.remove('invalid');\n            formGroup.querySelector('.form-message').innerText = \"\";\n            return true;\n        }\n    }\n\n    changeInput = (e) => {\n        const formGroup = e.target.parentElement.parentElement;\n        formGroup.classList.remove('invalid');\n        formGroup.querySelector('.form-message').innerText = \"\";\n    }\n\n\n    render() {\n        const enterPress = this.isLoginCheck;\n        document.onkeydown = function (e) {\n            switch (e.which) {\n                case 13:\n                    enterPress(e);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return (\n            <div className=\"Login\">\n                <div className=\"form-login\">\n                    <div className=\"auth-form\">\n                        <Avatar className=\"auth-form__avatar\">\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\n                                <FaUserTie></FaUserTie>\n                            </IconContext.Provider>\n                        </Avatar>\n                        <div className=\"auth-form__container\">\n                            <div className=\"auth-form__header\">\n                                <div className=\"auth-form__heading\">Employee</div>\n                                <NavLink to=\"/login\" className=\"auth-form__switch-btn\"> <FiChevronLeft className=\"auth-form__arrow-return\"></FiChevronLeft>Login</NavLink>\n                            </div>\n                        </div>\n                        <div className=\"auth-form__body\">\n                            <form action=\"/login-submit\" method=\"POST\" id=\"login-form\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\" className=\"form-label\">Username</label>\n                                    <div className=\"input-custom\">\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"username\"  id=\"username\" placeholder=\"VD: phuoc123\" type=\"text\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                                    <div className=\"input-custom\">\n                                        <span>\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\n                                        </span>\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={(e) => this.blurPassword(e)} name=\"password\"  id=\"password\" placeholder=\"Emter password\" type=\"password\" />\n                                    </div>\n                                    <span className=\"form-message\" />\n                                </div>\n                                <div className=\"auth-form__btn\">\n                                    <div to=\"/sellproduct\" id=\"navlink\" onClick={(e) => this.isLoginCheck(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign In</div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                {this.state.statusSucces ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isLogin: state.loginStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeLoginStatus: () => {\n            dispatch({\n                type: \"CHANGE_LOGIN_STATUS\",\n            });\n        },\n        setRole: () => {\n            dispatch({\n                type: \"EMPLOYEE_ROLE\",\n            });\n            localStorage.setItem('role', 'employee');\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps , mapDispatchToProps)(LoginWithEmployee);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/ModalConfirmPassword.js",["256"],"import React from 'react';\nimport {Card,CardHeader,Divider,CardContent,Grid,TextField,Box,Button} from '@mui/material';\nimport {BiPlusMedical} from 'react-icons/bi'\nimport { GiCancel } from 'react-icons/gi'\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction ModalConfirmPassword(props) {\n\n    const statusConfirmPassword = useSelector(state => state.statusConfirmPassword)\n    const dispatch = useDispatch();\n\n    const handleCancel = () => {\n        dispatch({\n            type:\"CHANGE_MODAL_CONFIRM_PASSWORD_STATUS\",\n        })\n    }\n\n    return (\n        <Card className=\"card-confirm-password\" style={{ minWidth: '500px', width: '600px', justifyContent: 'center', marginTop: '10%' }}>\n            <CardHeader style={{ color: 'blue', backgroundColor: '#efeeef' }} title=\"Confirm password\" />\n            <Divider />\n            <CardContent>\n                <Grid container spacing={2}>\n                    <Grid item md={12} xs={12}>\n                        <TextField\n                            id=\"outlined-basic\"\n                            variant=\"outlined\"\n                            fullWidth\n                            label=\"Your password\"\n                            required\n                            type=\"password\"\n                        />\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <Divider />\n            <Box sx={{ display: 'flex', justifyContent: 'space-evenly', p: 2 }}>\n                <Button style={{ backgroundColor: 'yellowgreen' }} variant=\"contained\" startIcon={<BiPlusMedical />}>\n                    Xác nhận\n                </Button>\n                <Button style={{ backgroundColor: 'red' }} onClick={() => handleCancel()} variant=\"contained\" startIcon={<GiCancel />}>\n                    Hủy\n                </Button>\n            </Box>\n        </Card>\n    );\n}\n\nexport default ModalConfirmPassword;","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Router/DashboardURL.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Partials/SideNavBar.js",["257","258","259","260"],"import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport {\n    AiOutlineDashboard,\n    AiFillDashboard,\n    AiOutlineContainer,\n    AiFillContainer\n} from \"react-icons/ai\";\nimport { BsInfoCircleFill} from \"react-icons/bs\";\nimport { \n    IoPeopleOutline,\n    IoPeopleSharp,\n    IoReceiptOutline,\n    IoReceiptSharp,\n} from \"react-icons/io5\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { RiProfileFill, RiProfileLine } from \"react-icons/ri\";\nimport { FaSignOutAlt } from \"react-icons/fa\";\nimport {GiSellCard} from 'react-icons/gi'\nimport Avatar from '../../img/avatar_default.jpg';\nimport { NavLink } from 'react-router-dom';\n\nimport '../../css/SideNavBar.css';\n\nclass SideNavBar extends Component {\n    \n    render() {\n\n        const navbarContainer = document.querySelector('.navbar-container');\n        console.log(navbarContainer);\n        // navbarContainer.setAttribute(\"style\",\"width:20px\");\n        return (\n            <div \n                class=\"navbar-container\"\n                style={{\n                    width: 0\n                }}\n            >\n                <div class=\"navibar sidebar\">\n                    <div className=\"nav-icon\" >\n                        <IoIosArrowBack\n                            size={20}\n                        />\n                    </div>\n                    <div class=\"nav-heading\">\n                        <div class=\"navbar-heading-container\">\n                            <img src={this.props.infoUser.avatar ? this.props.infoUser.avatar: Avatar} style ={{width: 40, height: 40, borderRadius: '100%'}}></img>\n                            <span class=\"user-name\">{this.props.infoUser.lastName +\" \" + this.props.infoUser.firstName}</span>\n                        </div>\n                    </div>\n                    <div class=\"nav-container\">\n                        {   \n                            // this.props.role == true ?\n                            localStorage.getItem('role')=='admin' ?\n                            (<NavLink className=\"nav-item\" to=\"/dashboard\">\n                                <AiOutlineDashboard class=\"nav-item-icon\" />\n                                <AiFillDashboard class=\"nav-item-icon icon-activate\" />\n                                <span className=\"nav-item-lable\">Dashboard</span>\n                            </NavLink>):(null)\n                        }\n                        \n                        <NavLink to=\"/profile\" className=\"nav-item\" href=\"#\">\n                            <RiProfileLine class=\"nav-item-icon\" />\n                            <RiProfileFill class=\"nav-item-icon icon-activate\" />\n                            <span className=\"nav-item-lable\">Profile</span>\n                        </NavLink>\n\n                        {   \n                            // this.props.role == true ?\n                            localStorage.getItem('role')=='admin' ?\n                            (   \n                                <div>\n                                    <NavLink\n                                        to=\"/employeemanager\"\n                                        className=\"nav-item\"\n                                        href=\"#\"\n                                    >\n                                        <IoPeopleOutline class=\"nav-item-icon\" />\n                                        <IoPeopleSharp class=\"nav-item-icon icon-activate\" />\n                                        <span className=\"nav-item-lable\">Employee Manager</span>\n                                    </NavLink>\n                                    <NavLink\n                                        to=\"/goodmanager\"\n                                        className=\"nav-item\"\n                                        href=\"#\"\n                                    >\n                                        <AiOutlineContainer className=\"nav-item-icon\" />\n                                        <AiFillContainer className=\"nav-item-icon icon-activate\" />\n                                        <span className=\"nav-item-lable\">Goods Manager</span>\n                                    </NavLink>\n                                    <NavLink\n                                        to=\"/receiptmanager\"\n                                        className=\"nav-item\"\n                                        href=\"#\"\n                                    >\n                                        <IoReceiptOutline class=\"nav-item-icon\" />\n                                        <IoReceiptSharp class=\"nav-item-icon icon-activate\" />\n                                        <span className=\"nav-item-lable\">Receipt Manager</span>\n                                    </NavLink>\n                                </div>    \n                            ):(null)\n                        }   \n                        \n                        <NavLink to=\"/sellproduct\" className=\"nav-item\" href='#'>\n                            <GiSellCard class=\"nav-item-icon\"/>\n                            <GiSellCard class=\"nav-item-icon icon-activate\"/>\n                            <span className=\"nav-item-lable\">Sell Product</span>\n                        </NavLink>\n                    </div>\n\n                    <div class=\"nav-footer\">\n                        <NavLink\n                            to=\"/login\"\n                            onClick={() => this.props.changeLoginStatus()}\n                            className=\"nav-item\"\n                            style={{ flex: 5 }}\n                        >\n                            <FaSignOutAlt class=\"nav-item-icon\" />\n                            <span className=\"nav-item-lable\">Sign out</span>\n                        </NavLink>\n                        {/* <a href=\"#\" className=\"nav-item\" style={{ flex: 4 }}>\n                            <BsInfoCircleFill class=\"nav-item-icon\" /> */}\n                        <a href=\"#\" className=\"nav-item\" onClick={() => this.props.changeConfirmPasswordTest()} style={{flex: 4}}>\n                            <BsInfoCircleFill class=\"nav-item-icon\"/>\n                            <span className=\"nav-item-lable\">About</span>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isLogin: state.loginStatus,\n        infoUser: state.infoUser,\n        role: state.role,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeLoginStatus: () => {\n            dispatch({\n                type: \"CHANGE_LOGIN_STATUS\",\n            })\n        },\n        changeConfirmPasswordTest: () => {\n            dispatch({\n                type:\"CHANGE_MODAL_CONFIRM_PASSWORD_STATUS\",\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavBar);\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/EmployeeManager.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/ReiceiptManager.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodManager.js",["261","262","263"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/GoodImport.js",["264","265","266","267","268","269"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/DashBoard.js",["270"],"import React, { Component } from 'react';\nimport '../../css/Dashboard.css'\nimport { Container, Grid } from '@mui/material';\nimport { Typography } from '@mui/material';\nimport { DiApple } from 'react-icons/di'\nimport StaticDateRangePickerDemo from './Calendar'\nimport AppWebsiteVisits from './Statistic';\nimport SplitButton from './GroupButton';\n\n\nclass DashBoard extends Component {\n    render() {\n        return (\n            <div className=\"dashboard\" style={{ overflow: 'scroll', overflowX: 'hidden', height: '100vh' }}>\n                <Container style={{ marginTop: '40px' }} maxWidth=\"xl\">\n                    <Grid container spacing={3}>\n                        <Grid className=\"dashboard-item\" item md={3} sm={12} >\n                            <div className=\"dashboard-css\">\n                                <div className=\"dashboard-item-img\" style={{ marginBottom: '30px' }}>\n                                    <DiApple className=\"dashboard-item-icon\"></DiApple>\n                                </div>\n                                <Typography style={{ marginBottom: '10px' }} variant=\"h4\">256</Typography>\n                                <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n                                    Total money\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid className=\"dashboard-item\" item md={3} sm={12} >\n                            <div className=\"dashboard-css sold-good\">\n                                <div className=\"dashboard-item-img sold-good\" style={{ marginBottom: '30px' }}>\n                                    <DiApple className=\"dashboard-item-icon sold-good\"></DiApple>\n                                </div>\n                                <Typography style={{ marginBottom: '10px' }} variant=\"h4\">256</Typography>\n                                <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n                                    Sold good\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid className=\"dashboard-item\" item md={3} sm={12} >\n                            <div className=\"dashboard-css imported-good\">\n                                <div className=\"dashboard-item-img imported-good\" style={{ marginBottom: '30px' }}>\n                                    <DiApple className=\"dashboard-item-icon imported-good\"></DiApple>\n                                </div>\n                                <Typography style={{ marginBottom: '10px' }} variant=\"h4\">256</Typography>\n                                <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n                                    Imported good\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid className=\"dashboard-item\" item md={3} sm={12} >\n                            <div className=\"dashboard-css error-receipt\">\n                                <div className=\"dashboard-item-img error-receipt\" style={{ marginBottom: '30px' }}>\n                                    <DiApple className=\"dashboard-item-icon error-receipt\"></DiApple>\n                                </div>\n                                <Typography style={{ marginBottom: '10px' }} variant=\"h4\">256</Typography>\n                                <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n                                    Error receipt\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid className=\"dashboard-item\" item md={12} sm={12} >\n                            <div style={{ borderRadius: '20px' }}>\n                                <StaticDateRangePickerDemo></StaticDateRangePickerDemo>\n                            </div>\n                        </Grid>\n                        <Grid className=\"dashboard-item\" item md={12} sm={12} >\n                            <AppWebsiteVisits></AppWebsiteVisits>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default DashBoard;","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/Profile.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/SellProduct.js",["271","272"],"import React, { Component } from 'react';\nimport ReactToPrint from 'react-to-print';\nimport { Container, Grid } from '@mui/material';\nimport { ComponentToPrint } from './ComponentToPrint';\nimport '../../css/SellProduct.css'\nimport Tabs from './Tabs'\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nclass SellProduct extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0,\n        }\n    }\n\n\n    handleChange = (event, newValue) => {\n        this.setState({\n            value: newValue,\n        })\n    };\n\n    bull = (\n        <Box\n            component=\"span\"\n            sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\n        >\n            •\n        </Box>\n    );\n\n    render() {\n        return (\n            <div className=\"sell-product\" >\n                <Container  maxWidth=\"xl\">\n                    <Grid  container spacing={2}>\n                        <Grid style={{borderRadius: '10px'}} item md={8} sm={4}  >\n                            <div style={{ borderRadius: '8px' ,marginTop: '20px', backgroundColor: 'beige', height: 'calc(100vh - 40px)', overflow: 'scroll', overflow: 'hidden' }}>\n                                <div style={{ overflow: 'hidden' }}>\n                                    <Tabs></Tabs>\n                                </div>\n                                <Container id=\"choses-product\" style={{height: '94%' , overflowY: 'scroll'}}  maxWidth=\"xl\">\n                                    <Grid container spacing={2}>\n                                        <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid> <Grid item md={3} sm={3}>\n                                            <Card>\n                                                <CardContent>\n                                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                                        Word of the Day\n                                                    </Typography>\n                                                    <Typography variant=\"body2\">\n                                                        well meaning and kindly.\n                                                        <br />\n                                                        {'\"a benevolent smile\"'}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                    <Button size=\"small\">Learn More</Button>\n                                                </CardActions>\n                                            </Card>\n                                        </Grid>\n                                    </Grid>\n                                </Container>\n                            </div>\n                        </Grid>\n                        <Grid item md={4} sm={4} >\n                            <div style={{ marginTop: '20px', backgroundColor: 'beige', height: 'calc(100vh - 40px)', overflow: 'hidden', overflowX: 'hidden' }}>\n                                <ReactToPrint\n                                    trigger={() => {\n                                        return <a href=\"#\">Print this out!</a>;\n                                    }}\n                                    content={() => this.componentRef}\n                                />\n                                <div style={{ display: 'none' }}>\n                                    <ComponentToPrint ref={el => (this.componentRef = el)} />\n                                </div>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default SellProduct;","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/SearchBar.js",["273","274","275","276"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { MdClear} from \"react-icons/md\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport { withStyles } from '@material-ui/styles';\nimport classNames from \"classnames\";\n\nconst styles = theme => ({\n  root: {\n    // height: theme.spacing(6),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    height: \"80px\",\n  },\n//   iconButton: {\n//     color: theme.palette.action.active,\n//     transform: \"scale(1, 1)\",\n//     transition: theme.transitions.create([\"transform\", \"color\"], {\n//       duration: theme.transitions.duration.shorter,\n//       easing: theme.transitions.easing.easeInOut,\n//     }),\n//   },\n  iconButtonHidden: {\n    transform: \"scale(0, 0)\",\n    \"& > $icon\": {\n      opacity: 0,\n    },\n  },\n  searchIconButton: {\n    // marginRight: theme.spacing(-6),\n  },\n//   icon: {\n//     transition: theme.transitions.create([\"opacity\"], {\n//       duration: theme.transitions.duration.shorter,\n//       easing: theme.transitions.easing.easeInOut,\n//     }),\n//   },\n  input: {\n    width: \"100%\",\n  },\n  searchContainer: {\n    margin: \"4px 8px 4px 8px\",\n    height: \"40px\",\n    // width: `calc(100% - ${theme.spacing(6 + 4)}px)`, // 6 button + 4 margin\n  },\n});\nconst SearchBar = React.forwardRef(\n  (\n    {\n      cancelOnEscape,\n      className,\n      classes,\n      closeIcon,\n      disabled,\n      onCancelSearch,\n      onRequestSearch,\n      searchIcon,\n      style,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const inputRef = React.useRef();\n    const [value, setValue] = React.useState(inputProps.value);\n\n    React.useEffect(() => {\n      setValue(inputProps.value);\n    }, [inputProps.value]);\n\n    const handleFocus = React.useCallback(\n      (e) => {\n        if (inputProps.onFocus) {\n          inputProps.onFocus(e);\n        }\n      },\n      [inputProps.onFocus]\n    );\n\n    const handleBlur = React.useCallback(\n      (e) => {\n        setValue((v) => v.trim());\n        if (inputProps.onBlur) {\n          inputProps.onBlur(e);\n        }\n      },\n      [inputProps.onBlur]\n    );\n\n    const handleInput = React.useCallback(\n      (e) => {\n        setValue(e.target.value);\n        if (inputProps.onChange) {\n          inputProps.onChange(e.target.value);\n        }\n      },\n      [inputProps.onChange]\n    );\n\n    const handleCancel = React.useCallback(() => {\n      setValue(\"\");\n      if (onCancelSearch) {\n        onCancelSearch();\n      }\n    }, [onCancelSearch]);\n\n    const handleRequestSearch = React.useCallback(() => {\n      if (onRequestSearch) {\n        onRequestSearch(value);\n      }\n    }, [onRequestSearch, value]);\n\n    const handleKeyUp = React.useCallback(\n      (e) => {\n        if (e.charCode === 13 || e.key === \"Enter\") {\n          handleRequestSearch();\n        } else if (\n          cancelOnEscape &&\n          (e.charCode === 27 || e.key === \"Escape\")\n        ) {\n          handleCancel();\n        }\n        if (inputProps.onKeyUp) {\n          inputProps.onKeyUp(e);\n        }\n      },\n      [handleRequestSearch, cancelOnEscape, handleCancel, inputProps.onKeyUp]\n    );\n\n    React.useImperativeHandle(ref, () => ({\n      focus: () => {\n        inputRef.current.focus();\n      },\n      blur: () => {\n        inputRef.current.blur();\n      },\n    }));\n\n    return (\n      <Paper className={classNames(classes.root, className)} style={{height: '40px'}}>\n        <div className={classes.searchContainer}>\n          <Input\n            {...inputProps}\n            inputRef={inputRef}\n            onBlur={handleBlur}\n            value={value}\n            onChange={handleInput}\n            onKeyUp={handleKeyUp}\n            onFocus={handleFocus}\n            fullWidth\n            className={classes.input}\n            disableUnderline\n            disabled={disabled}\n          />\n        </div>\n        <IconButton\n          onClick={handleRequestSearch}\n          className={classNames(classes.iconButton, classes.searchIconButton, {\n            [classes.iconButtonHidden]: value !== \"\",\n          })}\n          disabled={disabled}\n        >\n          {React.cloneElement(searchIcon, {\n            classes: { root: classes.icon },\n          })}\n        </IconButton>\n        <IconButton\n          onClick={handleCancel}\n          className={classNames(classes.iconButton, {\n            [classes.iconButtonHidden]: value === \"\",\n          })}\n          disabled={disabled}\n        >\n          {React.cloneElement(closeIcon, {\n            classes: { root: classes.icon },\n          })}\n        </IconButton>\n      </Paper>\n    );\n  }\n);\n\nSearchBar.defaultProps = {\n  className: \"\",\n  closeIcon: <MdClear/>,\n  disabled: false,\n  placeholder: \"Search\",\n  searchIcon: <AiOutlineSearch />,\n  style: null,\n  value: \"\",\n};\n\nSearchBar.propTypes = {\n  cancelOnEscape: PropTypes.bool,\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  closeIcon: PropTypes.node,\n  disabled: PropTypes.bool,\n  onCancelSearch: PropTypes.func,\n  onChange: PropTypes.func,\n  onRequestSearch: PropTypes.func,\n  placeholder: PropTypes.string,\n  searchIcon: PropTypes.node,\n  style: PropTypes.object,\n  value: PropTypes.string,\n};\n\nexport default withStyles(styles)(SearchBar);","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/GoodTable.js",["277"],"import * as React from 'react';\nimport { Component } from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport { makeStyles } from '@material-ui/styles';\nimport { withStyles } from '@material-ui/styles';\nimport GoodImage from './goodExample.jpg';\n\n\n\nfunction createData(index, id, name, quantity, originalPrice, sellPrice, importTime, productType) {\n    return {\n        index,\n        id,\n        name,\n        quantity,\n        sellPrice,\n        importTime,\n        hidden: [\n            {\n                date: '2020-01-05',\n                remaining: 100,\n                originalPrice: originalPrice,\n                productType: productType,\n            }\n        ],\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    goodTable_Cell:{\n        borderWidth: '1px',\n        borderColor: '#ccc',\n        borderStyle: 'solid'\n    }\n}));\n\n\n\nfunction Row(props) {\n    const { row } = props;\n    const [open, setOpen] = React.useState(false);\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n                <TableCell className={classes.goodTable_Cell} component=\"th\" scope=\"row\">{row.index}</TableCell>\n                <TableCell className={classes.goodTable_Cell} component=\"th\" scope=\"row\">{row.id}</TableCell>\n                <TableCell className={classes.goodTable_Cell} component=\"th\" scope=\"row\">{row.name}</TableCell>\n                <TableCell className={classes.goodTable_Cell} align=\"right\">{row.quantity}</TableCell>\n                <TableCell className={classes.goodTable_Cell} align=\"right\">{row.sellPrice}</TableCell>\n                <TableCell className={classes.goodTable_Cell} align=\"right\">{row.importTime}</TableCell>\n                <TableCell className={classes.goodTable_Cell} align=\"right\">\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                        {open ? (<KeyboardArrowUpIcon />) : (<KeyboardArrowDownIcon />)}\n                    </IconButton>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell className={classes.goodTable_Cell} style={{ padding: 0}} colSpan={8}>\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <Box sx={{ margin: 1 }}>\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                Other information\n                            </Typography>\n                            <div style={{display: 'flex'}}>\n                                <img src={GoodImage} style={{width: '100px', height: '100px', objectFit:'cover'}}/>\n                                <Table size=\"small\" aria-label=\"purchases\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell className={classes.goodTable_Cell}>Expired Day</TableCell>\n                                            <TableCell className={classes.goodTable_Cell}>Original Price</TableCell>\n                                            <TableCell className={classes.goodTable_Cell}>Good Remain</TableCell>\n                                            <TableCell className={classes.goodTable_Cell}>Product Type</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {row.hidden.map((hiddenRow) => (\n                                            <TableRow key={hiddenRow.date}>\n                                                <TableCell className={classes.goodTable_Cell} component=\"th\" scope=\"row\">\n                                                    {hiddenRow.date}\n                                                </TableCell>\n                                                <TableCell className={classes.goodTable_Cell}>{hiddenRow.originalPrice}</TableCell>\n                                                <TableCell className={classes.goodTable_Cell}>{hiddenRow.remaining}</TableCell>\n                                                <TableCell className={classes.goodTable_Cell}>{hiddenRow.productType}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                                <div className=\"button-container\">\n                                    <Button \n                                        onClick={() => {\n                                            removeRow(row)\n                                        }}\n                                        variant=\"contained\"\n                                    >\n                                        Update\n                                    </Button>\n                                    <Button variant=\"contained\">Delete</Button>\n                                </div>\n                            </div>  \n                        </Box>\n                    </Collapse>\n                </TableCell>\n            </TableRow>\n        </React.Fragment>\n    );\n}\n\nfunction removeRow(row)\n{\n    rows = rows.filter(function(item) {\n        return item !== row;\n    })   \n    alert(rows.length);\n    // Tới đây là ổn, tìm cách gọi hàm trong class nữa là ok\n    \n}\n\nvar rows = [\n    createData(1,10001,'Frozen yoghurt', 159, 20, 24, '1/1/2021','food'),\n    createData(2,10002,'Ice cream sandwich', 237, 27, 37, '2/2/2021', 'food'),\n    createData(3,10003,'Eclair', 262, 16, 24, '3/3/2021', 'food'),\n    createData(4,10004,'Cupcake', 305, 47, 67, '4/4/2021', 'cuisine'),\n    createData(5,10005,'Gingerbread', 356, 26, 49, '31/1/2021', 'cuisine'),\n    createData(6,10006,'Frozen yoghurt', 159, 20, 24, '1/1/2021','cuisine'),\n    createData(7,10007,'Ice cream sandwich', 237, 27, 37, '2/2/2021', 'food'),\n    createData(8,10008,'Eclair', 262, 16, 24, '3/3/2021', 'food'),\n    createData(9,10009,'Cupcake', 305, 47, 67, '4/4/2021', 'detergent'),\n    createData(10,10010,'Gingerbread', 356, 26, 49, '31/1/2021', 'detergent'),\n    createData(11,10011,'Frozen yoghurt', 159, 20, 24, '1/1/2021','detergent'),\n    createData(12,10012,'Ice cream sandwich', 237, 27, 37, '2/2/2021', 'food'),\n    createData(13,10013,'Eclair', 262, 16, 24, '3/3/2021', 'food'),\n    createData(14,10014,'Cupcake', 305, 47, 67, '4/4/2021', 'food'),\n    createData(15,10015,'Gingerbread', 356, 26, 49, '31/1/2021', 'food'),\n];\nconst styles = theme =>  ({\n    goodTable: {                                     \n        borderWidth: '1px',\n        borderColor: '#ccc',\n        borderStyle: 'solid'\n    },\n    goodTable_Cell: {                                     \n        borderWidth: '1px',\n        borderColor: '#ccc',\n        borderStyle: 'solid',\n        height: '40px',\n    } \n})\n\n\n\nclass GoodTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            update: false\n        }\n    }\n    removeProduct= (row) => {\n        // Đây là xử lý ở phía dữ liệu, có thể await gì đó.\n        // Xử lý ở phía giao diện(tạm)\n\n        // Đây là câu lệnh để update nhẹ\n        this.setState({update: this.state.update})\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <TableContainer component={Paper}>\n                    <Table className={classes.goodTable} aria-label=\"collapsible table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">Index</TableCell>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">ID</TableCell>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">GoodName</TableCell>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">Quantity</TableCell>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">Sell Price</TableCell>\n                                <TableCell className={classes.goodTable_Cell} align=\"center\">ImportTime</TableCell>\n                                <TableCell className={classes.goodTable_Cell}/>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map((row) => (\n                                <Row key={row.name} row={row} />\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        );\n    }\n}\n\nexport default (withStyles(styles, {withTheme: true}))(GoodTable);\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/AddTypeModal.js",["278","279"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/EditTypeModal.js",["280","281"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileSetting.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ChangePassword.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/UpdateGoodModal.js",["282","283","284","285","286","287","288","289","290","291","292","293"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/GoodPartials/ConfirmModal.js",["294","295","296","297","298","299"],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ListShift.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/Calendar.js",["300","301","302"],"import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport StaticDateRangePicker from '@mui/lab/StaticDateRangePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport Box from '@mui/material/Box';\n\nexport default function StaticDateRangePickerDemo() {\n    const [value, setValue] = React.useState([new Date(2021, 2, 2), new Date(2021, 2, 5)]);\n    const [date, setDate] = React.useState(new Date(2021, 4, 2))\n\n    const value1 = [\n        { date: '2021/01/11', count:2 },\n        { date: '2021/04/12', count:2 },\n        { date: '2021/05/01', count:5 },\n        { date: '2021/05/02', count:5 },\n        { date: '2021/05/03', count:1 },\n        { date: '2021/05/04', count:11 },\n        { date: '2021/05/08', count:32 },\n      ];\n\n    return (\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <StaticDateRangePicker\n                displayStaticWrapperAs=\"desktop\"\n                value={value}\n                onChange={(date) => {\n                    setDate(date);\n                }}\n                renderInput={(startProps, endProps) => (\n                    <React.Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                    </React.Fragment>\n                )}\n                calendars={4}\n                disableAutoMonthSwitching={true}\n            />\n        </LocalizationProvider>\n    );\n}\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/GroupButton.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ModalAdd.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileHeader.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/ComponentToPrint.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/ProfileDetail.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/SellProduct/Tabs.js",["303"],"import * as React from 'react';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport { BiAddToQueue } from 'react-icons/bi';\n\nexport default function IconLabelTabs() {\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n\n        <Tabs\n            value={value}\n            onChange={handleChange}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            aria-label=\"scrollable auto tabs example\"\n        >\n            <Tab label=\"Item One\" />\n            <Tab label=\"Item Two\" />\n            <Tab label=\"Item Three\" />\n            <Tab label=\"Item Four\" />\n            <Tab label=\"Item Five\" />\n            <Tab label=\"Item Six\" />\n            <Tab label=\"Item Seven\" />\n            <Tab label=\"Item One\" />\n            <Tab label=\"Item Two\" />\n            <Tab label=\"Item Three\" />\n            <Tab label=\"Item Four\" />\n            <Tab label=\"Item Five\" />\n            <Tab label=\"Item Six\" />\n            <Tab label=\"Item Seven\" />\n        </Tabs>\n    );\n}\n","/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/Statistic.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Profile/DarkMode.js",[],"/Users/nguyenanhtuan/Desktop/GitHub/SE100Project/client/src/Components/Dashboard/BaseOptionChart.js",[],{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","severity":1,"message":"309","line":12,"column":3,"nodeType":"310","messageId":"311","endLine":15,"endColumn":4},{"ruleId":null,"fatal":true,"severity":2,"message":"312","line":18,"column":8},{"ruleId":"313","severity":1,"message":"314","line":3,"column":5,"nodeType":"315","messageId":"316","endLine":3,"endColumn":12},{"ruleId":"313","severity":1,"message":"317","line":6,"column":8,"nodeType":"315","messageId":"316","endLine":6,"endColumn":15},{"ruleId":"318","severity":1,"message":"319","line":116,"column":28,"nodeType":"320","messageId":"321","endLine":116,"endColumn":29,"suggestions":"322"},{"ruleId":"318","severity":1,"message":"319","line":116,"column":44,"nodeType":"320","messageId":"321","endLine":116,"endColumn":45,"suggestions":"323"},{"ruleId":"318","severity":1,"message":"319","line":151,"column":28,"nodeType":"320","messageId":"321","endLine":151,"endColumn":29,"suggestions":"324"},{"ruleId":"318","severity":1,"message":"319","line":151,"column":44,"nodeType":"320","messageId":"321","endLine":151,"endColumn":45,"suggestions":"325"},{"ruleId":"313","severity":1,"message":"317","line":14,"column":8,"nodeType":"315","messageId":"316","endLine":14,"endColumn":15},{"ruleId":"318","severity":1,"message":"319","line":134,"column":30,"nodeType":"320","messageId":"321","endLine":134,"endColumn":31,"suggestions":"326"},{"ruleId":"318","severity":1,"message":"319","line":134,"column":46,"nodeType":"320","messageId":"321","endLine":134,"endColumn":47,"suggestions":"327"},{"ruleId":"313","severity":1,"message":"328","line":13,"column":8,"nodeType":"315","messageId":"316","endLine":13,"endColumn":13},{"ruleId":"313","severity":1,"message":"329","line":9,"column":11,"nodeType":"315","messageId":"316","endLine":9,"endColumn":32},{"ruleId":"330","severity":1,"message":"331","line":48,"column":29,"nodeType":"332","endLine":48,"endColumn":159},{"ruleId":"333","severity":1,"message":"334","line":55,"column":57,"nodeType":"335","messageId":"336","endLine":55,"endColumn":59},{"ruleId":"333","severity":1,"message":"334","line":71,"column":57,"nodeType":"335","messageId":"336","endLine":71,"endColumn":59},{"ruleId":"337","severity":1,"message":"338","line":124,"column":25,"nodeType":"332","endLine":124,"endColumn":131},{"ruleId":"313","severity":1,"message":"339","line":2,"column":10,"nodeType":"315","messageId":"316","endLine":2,"endColumn":18},{"ruleId":"313","severity":1,"message":"340","line":14,"column":7,"nodeType":"315","messageId":"316","endLine":14,"endColumn":14},{"ruleId":"313","severity":1,"message":"341","line":37,"column":9,"nodeType":"315","messageId":"316","endLine":37,"endColumn":13},{"ruleId":"313","severity":1,"message":"342","line":6,"column":10,"nodeType":"315","messageId":"316","endLine":6,"endColumn":20},{"ruleId":"313","severity":1,"message":"343","line":6,"column":30,"nodeType":"315","messageId":"316","endLine":6,"endColumn":35},{"ruleId":"313","severity":1,"message":"344","line":11,"column":8,"nodeType":"315","messageId":"316","endLine":11,"endColumn":17},{"ruleId":"333","severity":1,"message":"334","line":269,"column":140,"nodeType":"335","messageId":"336","endLine":269,"endColumn":142},{"ruleId":"333","severity":1,"message":"334","line":460,"column":68,"nodeType":"335","messageId":"336","endLine":460,"endColumn":70},{"ruleId":"333","severity":1,"message":"345","line":489,"column":81,"nodeType":"335","messageId":"336","endLine":489,"endColumn":83},{"ruleId":"313","severity":1,"message":"346","line":8,"column":8,"nodeType":"315","messageId":"316","endLine":8,"endColumn":19},{"ruleId":"347","severity":1,"message":"348","line":45,"column":159,"nodeType":"349","messageId":"336","endLine":45,"endColumn":167},{"ruleId":"337","severity":1,"message":"338","line":412,"column":48,"nodeType":"332","endLine":412,"endColumn":60},{"ruleId":"350","severity":1,"message":"351","line":79,"column":7,"nodeType":"352","endLine":79,"endColumn":27,"suggestions":"353"},{"ruleId":"350","severity":1,"message":"351","line":89,"column":7,"nodeType":"352","endLine":89,"endColumn":26,"suggestions":"354"},{"ruleId":"350","severity":1,"message":"351","line":99,"column":7,"nodeType":"352","endLine":99,"endColumn":28,"suggestions":"355"},{"ruleId":"350","severity":1,"message":"351","line":129,"column":7,"nodeType":"352","endLine":129,"endColumn":78,"suggestions":"356"},{"ruleId":"330","severity":1,"message":"331","line":79,"column":33,"nodeType":"332","endLine":79,"endColumn":116},{"ruleId":"313","severity":1,"message":"357","line":2,"column":80,"nodeType":"315","messageId":"316","endLine":2,"endColumn":85},{"ruleId":"313","severity":1,"message":"358","line":4,"column":25,"nodeType":"315","messageId":"316","endLine":4,"endColumn":31},{"ruleId":"313","severity":1,"message":"359","line":2,"column":43,"nodeType":"315","messageId":"316","endLine":2,"endColumn":52},{"ruleId":"313","severity":1,"message":"360","line":4,"column":10,"nodeType":"315","messageId":"316","endLine":4,"endColumn":23},{"ruleId":"313","severity":1,"message":"361","line":2,"column":28,"nodeType":"315","messageId":"316","endLine":2,"endColumn":35},{"ruleId":"313","severity":1,"message":"362","line":2,"column":54,"nodeType":"315","messageId":"316","endLine":2,"endColumn":57},{"ruleId":"313","severity":1,"message":"363","line":2,"column":59,"nodeType":"315","messageId":"316","endLine":2,"endColumn":70},{"ruleId":"313","severity":1,"message":"342","line":2,"column":80,"nodeType":"315","messageId":"316","endLine":2,"endColumn":90},{"ruleId":"313","severity":1,"message":"360","line":4,"column":10,"nodeType":"315","messageId":"316","endLine":4,"endColumn":23},{"ruleId":"313","severity":1,"message":"358","line":4,"column":25,"nodeType":"315","messageId":"316","endLine":4,"endColumn":31},{"ruleId":"313","severity":1,"message":"364","line":5,"column":8,"nodeType":"315","messageId":"316","endLine":5,"endColumn":13},{"ruleId":"313","severity":1,"message":"365","line":6,"column":10,"nodeType":"315","messageId":"316","endLine":6,"endColumn":18},{"ruleId":"313","severity":1,"message":"344","line":13,"column":8,"nodeType":"315","messageId":"316","endLine":13,"endColumn":17},{"ruleId":"333","severity":1,"message":"334","line":182,"column":127,"nodeType":"335","messageId":"336","endLine":182,"endColumn":129},{"ruleId":"333","severity":1,"message":"334","line":385,"column":72,"nodeType":"335","messageId":"336","endLine":385,"endColumn":74},{"ruleId":"333","severity":1,"message":"345","line":414,"column":85,"nodeType":"335","messageId":"336","endLine":414,"endColumn":87},{"ruleId":"313","severity":1,"message":"359","line":2,"column":43,"nodeType":"315","messageId":"316","endLine":2,"endColumn":52},{"ruleId":"313","severity":1,"message":"358","line":4,"column":25,"nodeType":"315","messageId":"316","endLine":4,"endColumn":31},{"ruleId":"313","severity":1,"message":"328","line":7,"column":8,"nodeType":"315","messageId":"316","endLine":7,"endColumn":13},{"ruleId":"308","severity":1,"message":"309","line":10,"column":5,"nodeType":"310","messageId":"311","endLine":12,"endColumn":6},{"ruleId":"366","severity":1,"message":"367","line":26,"column":9,"nodeType":"368","messageId":"369","endLine":32,"endColumn":10},{"ruleId":"370","severity":1,"message":"371","line":30,"column":13,"nodeType":"372","messageId":"373","endLine":31,"endColumn":67},{"ruleId":"313","severity":1,"message":"374","line":9,"column":19,"nodeType":"315","messageId":"316","endLine":9,"endColumn":27},{"ruleId":"313","severity":1,"message":"375","line":10,"column":12,"nodeType":"315","messageId":"316","endLine":10,"endColumn":16},{"ruleId":"313","severity":1,"message":"376","line":12,"column":11,"nodeType":"315","messageId":"316","endLine":12,"endColumn":17},{"ruleId":"313","severity":1,"message":"377","line":4,"column":10,"nodeType":"315","messageId":"316","endLine":4,"endColumn":22},"no-native-reassign",["378"],"no-negated-in-lhs",["379"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","Parsing error: Identifier 'statusModalConfirmPasswordReducer' has already been declared.\n\n\u001b[0m \u001b[90m 16 |\u001b[39m \u001b[36mimport\u001b[39m statusAddTypeReducer \u001b[36mfrom\u001b[39m \u001b[32m'./Status/StatusAddTypeReducer'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 |\u001b[39m \u001b[36mimport\u001b[39m statusIsAddTypeReducer \u001b[36mfrom\u001b[39m \u001b[32m'./Status/StatusIsAddTypeReducer'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m \u001b[36mimport\u001b[39m statusModalConfirmPasswordReducer \u001b[36mfrom\u001b[39m \u001b[32m'./Status/StatusModalConfirmPassword'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 |\u001b[39m \u001b[36mimport\u001b[39m roleReducer \u001b[36mfrom\u001b[39m \u001b[32m'./RoleReducer'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 |\u001b[39m \u001b[36mimport\u001b[39m confirmModalReducer \u001b[36mfrom\u001b[39m \u001b[32m'./ConfirmModalReducer'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 |\u001b[39m \u001b[36mimport\u001b[39m statusYesConfirmReducer \u001b[36mfrom\u001b[39m \u001b[32m'./Status/StatusYesConfirmReducer'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m","no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'emailjs' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["380","381"],["382","383"],["384","385"],["386","387"],["388","389"],["390","391"],"'axios' is defined but never used.","'statusConfirmPassword' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'DataGrid' is defined but never used.","'columns' is assigned a value but never used.","'rows' is assigned a value but never used.","'InputLabel' is defined but never used.","'Modal' is defined but never used.","'GoodImage' is defined but never used.","Expected '!==' and instead saw '!='.","'SplitButton' is defined but never used.","no-dupe-keys","Duplicate key 'overflow'.","ObjectExpression","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'inputProps'. Either include it or remove the dependency array.","ArrayExpression",["392"],["393"],["394"],["395"],"'Alert' is defined but never used.","'BiEdit' is defined but never used.","'TextField' is defined but never used.","'BiPlusMedical' is defined but never used.","'Divider' is defined but never used.","'Box' is defined but never used.","'CardContent' is defined but never used.","'Stack' is defined but never used.","'GiCancel' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'setValue' is assigned a value but never used.","'date' is assigned a value but never used.","'value1' is assigned a value but never used.","'BiAddToQueue' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"396","fix":"397","desc":"398"},{"messageId":"399","fix":"400","desc":"401"},{"messageId":"396","fix":"402","desc":"398"},{"messageId":"399","fix":"403","desc":"401"},{"messageId":"396","fix":"404","desc":"398"},{"messageId":"399","fix":"405","desc":"401"},{"messageId":"396","fix":"406","desc":"398"},{"messageId":"399","fix":"407","desc":"401"},{"messageId":"396","fix":"408","desc":"398"},{"messageId":"399","fix":"409","desc":"401"},{"messageId":"396","fix":"410","desc":"398"},{"messageId":"399","fix":"411","desc":"401"},{"desc":"412","fix":"413"},{"desc":"412","fix":"414"},{"desc":"412","fix":"415"},{"desc":"416","fix":"417"},"removeEscape",{"range":"418","text":"419"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"420","text":"421"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"422","text":"419"},{"range":"423","text":"421"},{"range":"424","text":"419"},{"range":"425","text":"421"},{"range":"426","text":"419"},{"range":"427","text":"421"},{"range":"428","text":"419"},{"range":"429","text":"421"},{"range":"430","text":"419"},{"range":"431","text":"421"},"Update the dependencies array to be: [inputProps]",{"range":"432","text":"433"},{"range":"434","text":"433"},{"range":"435","text":"433"},"Update the dependencies array to be: [cancelOnEscape, inputProps, handleRequestSearch, handleCancel]",{"range":"436","text":"437"},[3620,3621],"",[3620,3620],"\\",[3636,3637],[3636,3636],[6248,6249],[6248,6248],[6264,6265],[6264,6264],[4483,4484],[4483,4483],[4499,4500],[4499,4499],[1989,2009],"[inputProps]",[2200,2219],[2427,2448],[3164,3235],"[cancelOnEscape, inputProps, handleRequestSearch, handleCancel]"]