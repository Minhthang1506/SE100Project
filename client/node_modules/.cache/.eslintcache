[{"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\index.js":"1","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\App.js":"2","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Reducer\\Store.js":"3","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Reducer\\LoginStatusReducer.js":"4","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Router\\DirectionURL.js":"5","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Body.js":"6","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Login\\Login.js":"7","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Login\\ForgotPassword.js":"8","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Login\\Register.js":"9","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Router\\DashboardURL.js":"10","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Partials\\SideNavBar.js":"11","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\GoodManager.js":"12","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\DashBoard.js":"13","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\EmployeeManager.js":"14","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\ReiceiptManager.js":"15","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Profile.js":"16","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Controllers\\Token.js":"17","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Profile\\ProfileHeader.js":"18","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Profile\\ProfileDetail.js":"19","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Profile\\ProfileAvt.js":"20","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Login\\LoginWithEmployee.js":"21","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Reducer\\TypeStatusReducer.js":"22","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\index.js":"23","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\App.js":"24","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Store.js":"25","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\LoginStatusReducer.js":"26","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\TypeStatusReducer.js":"27","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Router\\DirectionURL.js":"28","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\ForgotPassword.js":"29","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Body.js":"30","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\Register.js":"31","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\LoginWithEmployee.js":"32","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\Login.js":"33","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Router\\DashboardURL.js":"34","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Partials\\SideNavBar.js":"35","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\DashBoard.js":"36","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeeManager.js":"37","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\ReiceiptManager.js":"38","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodManager.js":"39","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileHeader.js":"40","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileDetail.js":"41","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ProvinceReducer.js":"42","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ChangePassword.js":"43","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ListShift.js":"44","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileSetting.js":"45","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ModalAdd.js":"46","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\Profile.js":"47","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddShiftReducer.js":"48","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\DarkMode.js":"49","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\test.js":"50","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\InfoUserReducer.js":"51","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ListShiftReducer.js":"52","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusEditShiftReducer.js":"53","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\objectEditShiftReducer.js":"54","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ObjectEditShiftReducer.js":"55","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusDarkModeReducer.js":"56","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\Test.js":"57"},{"size":309,"mtime":1633446686404,"results":"58","hashOfConfig":"59"},{"size":1047,"mtime":1633617449305,"results":"60","hashOfConfig":"59"},{"size":334,"mtime":1633615227079,"results":"61","hashOfConfig":"59"},{"size":295,"mtime":1633446686400,"results":"62","hashOfConfig":"59"},{"size":2219,"mtime":1633617234499,"results":"63","hashOfConfig":"59"},{"size":1100,"mtime":1633614912289,"results":"64","hashOfConfig":"59"},{"size":12317,"mtime":1633613907127,"results":"65","hashOfConfig":"59"},{"size":13186,"mtime":1633614656285,"results":"66","hashOfConfig":"59"},{"size":15498,"mtime":1633608161542,"results":"67","hashOfConfig":"59"},{"size":1035,"mtime":1633446686401,"results":"68","hashOfConfig":"59"},{"size":3917,"mtime":1633446686398,"results":"69","hashOfConfig":"59"},{"size":237,"mtime":1633446686396,"results":"70","hashOfConfig":"59"},{"size":262,"mtime":1633446686395,"results":"71","hashOfConfig":"59"},{"size":249,"mtime":1633446686395,"results":"72","hashOfConfig":"59"},{"size":246,"mtime":1633446686399,"results":"73","hashOfConfig":"59"},{"size":960,"mtime":1633598074558,"results":"74","hashOfConfig":"59"},{"size":292,"mtime":1633450273864,"results":"75","hashOfConfig":"59"},{"size":1386,"mtime":1633590523416,"results":"76","hashOfConfig":"59"},{"size":6336,"mtime":1633598500864,"results":"77","hashOfConfig":"59"},{"size":241,"mtime":1633598471230,"results":"78","hashOfConfig":"59"},{"size":8328,"mtime":1633614738343,"results":"79","hashOfConfig":"59"},{"size":343,"mtime":1633615683301,"results":"80","hashOfConfig":"59"},{"size":309,"mtime":1633620080535,"results":"81","hashOfConfig":"82"},{"size":1092,"mtime":1634026298484,"results":"83","hashOfConfig":"82"},{"size":1028,"mtime":1634024806607,"results":"84","hashOfConfig":"82"},{"size":295,"mtime":1633620080530,"results":"85","hashOfConfig":"82"},{"size":343,"mtime":1633620080530,"results":"86","hashOfConfig":"82"},{"size":2219,"mtime":1633620080531,"results":"87","hashOfConfig":"82"},{"size":13186,"mtime":1633620080524,"results":"88","hashOfConfig":"82"},{"size":1166,"mtime":1634027221904,"results":"89","hashOfConfig":"82"},{"size":16667,"mtime":1633962882334,"results":"90","hashOfConfig":"82"},{"size":8267,"mtime":1633937517249,"results":"91","hashOfConfig":"82"},{"size":14803,"mtime":1633962152571,"results":"92","hashOfConfig":"82"},{"size":1043,"mtime":1633708052447,"results":"93","hashOfConfig":"82"},{"size":3960,"mtime":1633663347019,"results":"94","hashOfConfig":"82"},{"size":236,"mtime":1633620080523,"results":"95","hashOfConfig":"82"},{"size":250,"mtime":1633620080523,"results":"96","hashOfConfig":"82"},{"size":246,"mtime":1633620080528,"results":"97","hashOfConfig":"82"},{"size":31159,"mtime":1633680244583,"results":"98","hashOfConfig":"82"},{"size":3679,"mtime":1633937031014,"results":"99","hashOfConfig":"82"},{"size":16046,"mtime":1633962181291,"results":"100","hashOfConfig":"82"},{"size":375,"mtime":1634010377414,"results":"101","hashOfConfig":"82"},{"size":6686,"mtime":1634027281614,"results":"102","hashOfConfig":"82"},{"size":6495,"mtime":1634011362755,"results":"103","hashOfConfig":"82"},{"size":911,"mtime":1634025262634,"results":"104","hashOfConfig":"82"},{"size":8710,"mtime":1634013256175,"results":"105","hashOfConfig":"82"},{"size":2320,"mtime":1634009525760,"results":"106","hashOfConfig":"82"},{"size":303,"mtime":1633750983527,"results":"107","hashOfConfig":"82"},{"size":3212,"mtime":1634026913255,"results":"108","hashOfConfig":"82"},{"size":511,"mtime":1633844265929,"results":"109","hashOfConfig":"82"},{"size":1329,"mtime":1633961955812,"results":"110","hashOfConfig":"82"},{"size":1493,"mtime":1634013053069,"results":"111","hashOfConfig":"82"},{"size":312,"mtime":1634008852965,"results":"112","hashOfConfig":"82"},{"size":340,"mtime":1634011413237,"results":"113","hashOfConfig":"82"},{"size":340,"mtime":1634011413237,"results":"114","hashOfConfig":"82"},{"size":302,"mtime":1634026314587,"results":"115","hashOfConfig":"82"},{"size":609,"mtime":1634025049039,"results":"116","hashOfConfig":"82"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"1r6ia0c",{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"119"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"119"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"119"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"119"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"119"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"119"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"119"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"1ieljoc",{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"172"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"172"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"172"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"172"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"172"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"172"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"172"},"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\index.js",[],["248","249"],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\App.js",["250","251"],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Reducer\\Store.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Reducer\\LoginStatusReducer.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Router\\DirectionURL.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Body.js",["252"],"import React, { Component } from 'react';\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport DashboardURL from '../Router/DashboardURL';\r\nimport {connect} from 'react-redux';\r\nimport SideNavBar from './Partials/SideNavBar';\r\n\r\nclass Body extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{display: 'flex'}}>\r\n                <SideNavBar/>\r\n                <div className=\"dashboard\" style={{ width: '100%', display: 'flex', borderLeft: '2px solid #99999975',  \r\n                backgroundColor: 'rgb(221,235,255)'}}>\r\n                    <DashboardURL></DashboardURL>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isLogin: state.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Body);","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Login\\Login.js",["253","254","255","256","257"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../CSS/Login.css'\r\nimport { BsFillEnvelopeFill, BsLockFill } from \"react-icons/bs\";\r\nimport { FiChevronRight, FiXSquare } from \"react-icons/fi\";\r\nimport { BiUser } from \"react-icons/bi\";\r\nimport { Avatar, Button } from '@mui/material'\r\nimport { IconContext } from \"react-icons\";\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport axios from 'axios';\r\nimport Alert from '@mui/material/Alert';\r\nimport bcrypt from 'bcryptjs';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            appId: \"543752153590340\",\r\n            clientId: \"826925109796-mi95l41fi57bdlolpvnfdg5bpt9oc81h.apps.googleusercontent.com\",\r\n            statusFailed: false,\r\n            statusSucces: false,\r\n        }\r\n    }\r\n\r\n    message = \"Login success\";\r\n\r\n    // Login with google\r\n    onLoginSuccess = (res) => {\r\n        this.OutAlert();\r\n        axios.post(`http://localhost:5000/sign-in-with-google`, res.profileObj)\r\n            .then(res => {\r\n                console.log(\"thành công\");\r\n                switch (res.data.status) {\r\n                    case 1:\r\n                        this.message = \"Login success\";\r\n                        this.setState({\r\n                            statusSucces: true,\r\n                        })\r\n                        localStorage.setItem('token', res.data.token);\r\n                        break;\r\n                    case 0:\r\n                        this.message = \"Incorrect password\";\r\n                        this.setState({\r\n                            statusFailed: true,\r\n                        })\r\n                        break;\r\n                    case -2:\r\n                        this.message = \"This account has signin by Email the first\";\r\n                        this.setState({\r\n                            statusFailed: true,\r\n                        })\r\n                        break;\r\n                    default:\r\n                        this.message = \"Enter again\";\r\n                        this.setState({\r\n                            statusFailed: true,\r\n                        })\r\n                        break;\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.message = \"Error, server don't active\";\r\n                this.setState({\r\n                    statusFailed: true,\r\n                })\r\n                console.log(\"lỗi\");\r\n            })\r\n    }\r\n\r\n    onFailureSuccess = (res) => {\r\n        this.setState({\r\n            statusFailed: true,\r\n            statusSucces: false,\r\n        })\r\n    }\r\n\r\n    // Out Alert\r\n    OutAlert = () => {\r\n        this.setState({\r\n            statusFailed: false,\r\n            statusSucces: false,\r\n        })\r\n    }\r\n\r\n    // Check để thay đổi trạng thái đã login hay chưa\r\n    isLoginCheck = (e) => {\r\n        this.OutAlert();\r\n        const form = document.getElementById('login-form');\r\n        if (this.blurEmail() && this.blurPassword()) {\r\n            axios.post(`http://localhost:5000/sign-in-with-gmail-password`, {\r\n                email: document.querySelector('#email').value,\r\n                password: document.getElementById('password').value,\r\n            })\r\n                .then(res => {\r\n                    switch (res.data.status) {\r\n                        case 1:\r\n                            this.message = res.data.message;\r\n                            this.setState({\r\n                                statusSucces: true,\r\n                            })\r\n                            localStorage.setItem('token', res.data.token);\r\n                            this.props.changeLoginStatus();\r\n                            break;\r\n                        case -1:\r\n                            this.message = res.data.message;\r\n                            this.setState({\r\n                                statusFailed: true,\r\n                            })\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.message = \"Enter again\";\r\n                    this.setState({\r\n                        statusFailed: true,\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    // Handle user : blur , change in input\r\n    blurEmail = () => {\r\n        var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        const event = document.querySelector('#email');\r\n        let elementValue = event.value;\r\n        const formGroup = event.parentElement.parentElement;\r\n        // check validate\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    blurPassword = () => {\r\n        const e = document.getElementById('password');\r\n        let elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\r\n            return false;\r\n        } else if (e.value.length < 6) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    changeInput = (e) => {\r\n        const formGroup = e.target.parentElement.parentElement;\r\n        formGroup.classList.remove('invalid');\r\n        formGroup.querySelector('.form-message').innerText = \"\";\r\n    }\r\n\r\n\r\n    render() {\r\n        const enterPress = this.isLoginCheck;\r\n        document.onkeydown = function (e) {\r\n            switch (e.which) {\r\n                case 13:\r\n                    enterPress(e);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"form-login\">\r\n                    <div className=\"auth-form\">\r\n                        <Avatar className=\"auth-form__avatar\">\r\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\r\n                                <BiUser></BiUser>\r\n                            </IconContext.Provider>\r\n                        </Avatar>\r\n                        <div className=\"auth-form__container\">\r\n                            <div className=\"auth-form__header\">\r\n                                <div className=\"auth-form__heading\">Login</div>\r\n                                <NavLink to=\"/register\" className=\"auth-form__switch-btn\">Register <FiChevronRight className=\"auth-form__arrow-return\"></FiChevronRight></NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"auth-form__body\">\r\n                            <form action=\"/login-submit\" method=\"POST\" id=\"login-form\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"VD: abc@gmail.com\" type=\"text\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={(e) => this.blurPassword(e)} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"auth-form__support\">\r\n                                    <span className=\"auth-form__support-forget\">\r\n                                        <NavLink onclick=\"\" to=\"/forgot\" className=\"auth-form__switch-btn\">Forgot password</NavLink>\r\n                                    </span>\r\n                                    <span className=\"auth-form__help-separate\" />\r\n                                    <span className=\"auth-form__support-need-support\">Need help?</span>\r\n                                </div>\r\n                                <div className=\"auth-form__support\">\r\n                                    <GoogleLogin\r\n                                        className=\"auth-form__support-google\"\r\n                                        clientId={this.state.clientId}\r\n                                        buttonText=\"Login with Google\"\r\n                                        onSuccess={this.onLoginSuccess}\r\n                                        onFailure={this.onFailureSuccess}\r\n                                        cookiePolicy={'single_host_origin'}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"auth-form__btn\">\r\n                                    <div to=\"/home\" id=\"navlink\" onClick={(e) => this.isLoginCheck(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign In</div>\r\n                                </div>\r\n                                <div className=\"auth-form__btn\">\r\n                                    <NavLink to=\"/employee\" id=\"navlink\" className=\"auth-form__btn-log-in auth-form__switch-btn auth-form-employee\">\r\n                                        Employee\r\n                                        <FiChevronRight className=\"auth-form__arrow-return\"></FiChevronRight>\r\n                                    </NavLink>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.statusSucces ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isLogin: state.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Login\\ForgotPassword.js",["258","259"],"import React, { Component } from 'react';\r\nimport Avatar from '@mui/material/Avatar'\r\nimport { IconContext } from \"react-icons\";\r\nimport { FiSend, FiXSquare } from \"react-icons/fi\";\r\nimport { BsFillEnvelopeFill, BsLockFill, BsBoxArrowInLeft, BsCodeSlash } from \"react-icons/bs\";\r\nimport emailjs from 'emailjs-com';\r\nimport Alert from '@mui/material/Alert';\r\nimport axios from 'axios';\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nvar bcrypt = require('bcryptjs');\r\n\r\n\r\nclass ForgotPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            code: \"\",\r\n            statusSendCode: true,\r\n            statusFailed: false,\r\n            statusSuccess: false,\r\n        }\r\n    }\r\n\r\n    message = \"\"\r\n\r\n    // Send code tới người dùng\r\n    sendCode = (a = this.makeCode(6)) => {\r\n        this.setState({\r\n            code: a,\r\n        })\r\n        emailjs.init(\"user_K1g5N5hUDI0rjsa1uRoI4\");\r\n        emailjs.send(\"gmail_main\", \"template_plasdgf\", {\r\n            To_mail: `${document.querySelector('#email').value}`,\r\n            code: `${a}`,\r\n        })\r\n            .then((response) => {\r\n                console.log('SUCCESS!', response.status, response.text);\r\n            }, (err) => {\r\n                console.log('FAILED...', err);\r\n            });\r\n    }\r\n\r\n    // Tạo code để xác nhận\r\n    makeCode = (length) => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() *\r\n                charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // Hashpassword\r\n    hash = (pass) => {\r\n        var hash = bcrypt.hashSync(pass, 12)\r\n        return hash;\r\n    }\r\n\r\n\r\n    // Out Alert\r\n    OutAlert = () => {\r\n        this.setState({\r\n            statusFailed: false,\r\n            statusSuccess: false,\r\n        })\r\n    }\r\n\r\n    //Check tìm lại mật khẩu\r\n    findPassword = (e) => {\r\n        this.OutAlert();\r\n        if (this.blurEmail() && this.blurCode() && this.blurPassword() && this.blurRePassword()) {\r\n            const form = document.getElementById('findpass-form');\r\n            axios.post(`http://localhost:5000/find-password`, {\r\n                email: document.querySelector('#email').value,\r\n                password: this.hash(document.getElementById('password').value),\r\n            })\r\n                .then(res => {\r\n                    form.reset();\r\n                    console.log(res.data.status);\r\n                    switch (res.data.status) {\r\n                        case 1:\r\n                            this.message = res.data.message;\r\n                            this.setState({\r\n                                statusSuccess: true,\r\n                            })\r\n                            break;\r\n                        case -1:\r\n                            this.message = res.data.message;\r\n                            this.setState({\r\n                                statusFailed: true,\r\n                            })\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.message = \"Error system\";\r\n                    this.setState({\r\n                        statusFailed: true,\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    // Handle user blue change in input\r\n    blurEmail = () => {\r\n        var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        const event = document.querySelector('#email');\r\n        const elementValue = event.value;\r\n        const formGroup = event.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            this.setState({\r\n                statusSendCode: false,\r\n            })\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurPassword = () => {\r\n        const e = document.getElementById('password');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\r\n            return false;\r\n        } else if (e.value.length < 6) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurCode = () => {\r\n        const e = document.getElementById('code');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (this.state.code === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please press Send Code\"\r\n            return false\r\n        } else if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter code here\"\r\n            return false\r\n        } else if (elementValue !== this.state.code) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Code is incorrect\"\r\n            return false\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurRePassword = () => {\r\n        const e = document.getElementById('re-password')\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (document.getElementById('password').value !== elementValue) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Re-password not correct\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true\r\n        }\r\n    }\r\n\r\n    changeInput = (e) => {\r\n        const formGroup = e.target.parentElement.parentElement;\r\n        formGroup.classList.remove('invalid');\r\n        formGroup.querySelector('.form-message').innerText = \"\";\r\n    }\r\n\r\n    render() {\r\n        const enterPress = this.findPassword;\r\n        document.onkeydown = function (e) {\r\n            switch (e.which) {\r\n                case 13:\r\n                    enterPress(e);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"form-findpass\">\r\n                    <div className=\"auth-form\">\r\n                        <Avatar className=\"auth-form__avatar\">\r\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\r\n                                <FiSend></FiSend>\r\n                            </IconContext.Provider>\r\n                        </Avatar>\r\n                        <div className=\"auth-form__container\">\r\n                            <div className=\"auth-form__header\">\r\n                                <div className=\"auth-form__heading\">Find password</div>\r\n                                <NavLink onclick=\"\" to=\"/login\" className=\"auth-form__switch-btn\"><BsBoxArrowInLeft className=\"arrow-return\"></BsBoxArrowInLeft></NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"auth-form__body\">\r\n                            <form action=\"/findpass-submit?_method=PUT\" method=\"POST\" id=\"findpass-form\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"Ex: abc@gmail.com\" type=\"text\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"code\" className=\"form-label\">Code</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsCodeSlash className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurCode()} name=\"code\" rules=\"required|email\" id=\"code\" placeholder=\"Ex: ABC321\" type=\"text\" />\r\n                                        <button type=\"button\" disabled={this.state.statusSendCode} onClick={() => this.sendCode()} class=\"btn btn-primary disabel send-code\">SEND</button>\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\" className=\"form-label\">New password</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurPassword()} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\" className=\"form-label\">Re-password</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurRePassword()} name=\"password\" rules=\"required|min:6\" id=\"re-password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"auth-form__btn\">\r\n                                    <div onClick={(e) => this.findPassword(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Find Password</div>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.statusSuccess ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ForgotPassword;\r\n","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Login\\Register.js",["260","261","262","263"],"import React, { Component } from 'react';\r\nimport '../../CSS/Login.css'\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport Avatar from '@mui/material/Avatar'\r\nimport { IconContext } from \"react-icons\";\r\nimport { FiChevronLeft, FiUserPlus, FiXSquare } from \"react-icons/fi\";\r\nimport { BsFillEnvelopeFill, BsLockFill, BsCodeSlash } from \"react-icons/bs\";\r\nimport { FaPhoneSquare } from \"react-icons/fa\";\r\nimport axios from 'axios';\r\nimport Alert from '@mui/material/Alert';\r\nimport emailjs from 'emailjs-com';\r\nimport { touchRippleClasses } from '@mui/material';\r\nvar bcrypt = require('bcryptjs');\r\n\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n            code: \"\",\r\n            statusSendCode: true,\r\n            statusFailed: false,\r\n            statusSuccess: false,\r\n        }\r\n    }\r\n\r\n    message = \"\";\r\n\r\n    // Send code tới người dùng\r\n    sendCode = (a = this.makeCode(6)) => {\r\n        this.setState({\r\n            code: a,\r\n        })\r\n        emailjs.init(\"user_K1g5N5hUDI0rjsa1uRoI4\");\r\n        emailjs.send(\"gmail_main\", \"template_plasdgf\", {\r\n            To_mail: `${document.getElementById('email').value}`,\r\n            code: `${a}`,\r\n        })\r\n            .then((response) => {\r\n                console.log('SUCCESS!', response.status, response.text);\r\n            }, (err) => {\r\n                console.log('FAILED...', err);\r\n            });\r\n    }\r\n\r\n    // status SignUp \r\n    SignUp = (e) => {\r\n        this.OutAlert();\r\n        if (this.blurEmail() && this.blurCode() && this.blurPassword() && this.blurRePassword() && this.blurTel()) {\r\n            axios.post(`http://localhost:5000/register-with-email`, {\r\n                email: document.getElementById('email').value,\r\n                password: this.hash(document.getElementById('password').value),\r\n                tel: document.getElementById('tel').value,\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    console.log(\"thành công\");\r\n                    switch (res.data.status) {\r\n                        case 1:\r\n                            this.message = res.data.message;\r\n                            this.setState({\r\n                                statusSuccess: true,\r\n                            })\r\n                            localStorage.setItem('token', res.data.token);\r\n                            break;\r\n                        case -1:\r\n                            this.message = res.data.message;;\r\n                            this.setState({\r\n                                statusFailed: true,\r\n                            })\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.message = \"Error system\";\r\n                    this.setState({\r\n                        statusFailed: true,\r\n                    })\r\n                })\r\n\r\n        }\r\n    }\r\n\r\n    // Out Alert\r\n    OutAlert = () => {\r\n        this.setState({\r\n            statusFailed: false,\r\n            statusSuccess: false,\r\n        })\r\n    }\r\n\r\n    // Tạo mã code cho người dùng xác nhận\r\n    makeCode = (length) => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() *\r\n                charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // Hashpassword\r\n    hash = (pass) => {\r\n        var hash = bcrypt.hashSync(pass, 12)\r\n        return hash;\r\n    }\r\n\r\n\r\n    // Handle user : blur, change in input\r\n    blurEmail = () => {\r\n        const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        const e = document.getElementById('email');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            this.setState({\r\n                statusSendCode: false,\r\n            })\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurCode = () => {\r\n        const e = document.getElementById('code');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (this.state.code === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please press Send Code\"\r\n            return false\r\n        } else if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter code here\"\r\n            return false\r\n        } else if (elementValue !== this.state.code) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Code is incorrect\"\r\n            return false\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurPassword = () => {\r\n        const e = document.getElementById('password');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\r\n            return false;\r\n        } else if (e.value.length < 6) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurRePassword = () => {\r\n        const e = document.getElementById('re-password')\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (document.getElementById('password').value !== elementValue) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Re-password not correct\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true\r\n        }\r\n    }\r\n\r\n    blurTel = () => {\r\n        const e = document.getElementById('tel');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        const regex = /^\\d+$/;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Phone is not in the correct format\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    changeInput = (e) => {\r\n        const elementValue = e.target.value;\r\n        const formGroup = e.target.parentElement.parentElement;\r\n        formGroup.classList.remove('invalid');\r\n        formGroup.querySelector('.form-message').innerText = \"\";\r\n    }\r\n\r\n    render() {\r\n        const enterPress = this.SignUp;\r\n        document.onkeydown = function (e) {\r\n            switch (e.which) {\r\n                case 13:\r\n                    enterPress(e);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"form-register\">\r\n                    <div className=\"auth-form\">\r\n                        <Avatar className=\"auth-form__avatar\">\r\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\r\n                                <FiUserPlus></FiUserPlus>\r\n                            </IconContext.Provider>\r\n                        </Avatar>\r\n                        <div className=\"auth-form__container\">\r\n                            <div className=\"auth-form__header\">\r\n                                <div className=\"auth-form__heading\">Register</div>\r\n                                <NavLink to=\"/login\" className=\"auth-form__switch-btn\"> <FiChevronLeft className=\"auth-form__arrow-return\"></FiChevronLeft>Login</NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"auth-form__body\">\r\n                            <form action=\"/register-submit\" method=\"post\" id=\"register-form\">\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"VD: abc@gmail.com\" type=\"text\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsCodeSlash className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurCode()} name=\"code\" rules=\"required|email\" id=\"code\" placeholder=\"Ex: ABC321\" type=\"text\" />\r\n                                        <button type=\"button\" disabled={this.state.statusSendCode} onClick={() => this.sendCode()} class=\"btn btn-primary disabel send-code\">SEND</button>\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurPassword()} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurRePassword()} name=\"re-password\" id=\"re-password\" placeholder=\"Emter re-password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <FaPhoneSquare className=\"input-custom-icon\" ></FaPhoneSquare>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onBlur={(e) => this.blurTel(e)} onChange={(e) => this.changeInput(e)} name=\"tel\" rules=\"required\" id=\"tel\" placeholder=\"Ex: 0303030303\" type=\"tel\" />\r\n\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"register-description\">Bằng cách ấn vào nút\r\n                                    <span className=\"register-description__keyword\">“ĐĂNG KÝ”</span>\r\n                                    , tôi đồng ý với\r\n                                    <span className=\"register-description__keyword\">Điều Khoản Sử Dụng</span> và\r\n                                    <div className=\"register-description__keyword\"> Chính Sách Bảo Mật</div>\r\n                                </div>\r\n                                <div className=\"auth-form__btn\">\r\n                                    <div onClick={(e) => this.SignUp(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign Up</div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n                {this.state.statusSuccess ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isLogin: state.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Router\\DashboardURL.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Partials\\SideNavBar.js",["264","265","266","267"],"import React, { Component } from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport { \r\n    AiOutlineDashboard,\r\n    AiFillDashboard,\r\n    AiOutlineContainer,\r\n    AiFillContainer\r\n} from \"react-icons/ai\";\r\nimport { ImProfile } from \"react-icons/im\";\r\nimport { BsFillPeopleFill,BsInfoCircleFill} from \"react-icons/bs\";\r\nimport { \r\n    IoPeopleOutline,\r\n    IoPeopleSharp,\r\n    IoReceiptOutline,\r\n    IoReceiptSharp\r\n} from \"react-icons/io5\";\r\nimport { RiProfileFill, RiProfileLine } from \"react-icons/ri\";\r\nimport { FaSignOutAlt } from \"react-icons/fa\";\r\n\r\nimport Kurisu from '../../img/kurisu.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport '../../CSS/DashBoard.css'\r\n\r\n\r\nclass SideNavBar extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"navibar sidebar\">\r\n                    <div class=\"nav-heading\">\r\n                        <img src={Kurisu} style ={{width: 50, height: 50, borderRadius: '100%'}}></img>\r\n                        <span class=\"user-name\" style ={{marginLeft: 10, color: '#fff'}}>Makise Kurisu</span>\r\n                    </div>\r\n                    <div class=\"nav-container\">\r\n                        <NavLink className=\"nav-item\" to=\"/dashboard\">\r\n                            <AiOutlineDashboard class=\"nav-item-icon\"/>\r\n                            <AiFillDashboard class=\"nav-item-icon icon-activate\"/>   \r\n                            <span>Dashboard</span>\r\n                        </NavLink>\r\n                        <NavLink to='/profile' className=\"nav-item\" href='#'>\r\n                            <RiProfileLine class=\"nav-item-icon\"/>\r\n                            <RiProfileFill class=\"nav-item-icon icon-activate\"/>\r\n                            <span>Profile</span>\r\n                        </NavLink>\r\n                        <NavLink to='/employeemanager' className=\"nav-item\" href='#'>\r\n                            <IoPeopleOutline class=\"nav-item-icon\"/>\r\n                            <IoPeopleSharp class=\"nav-item-icon icon-activate\"/>\r\n                            <span>Employee Manager</span>\r\n                        </NavLink>\r\n                        <NavLink to=\"/goodmanager\" className=\"nav-item\" href='#'>\r\n                            <AiOutlineContainer className=\"nav-item-icon\"/>\r\n                            <AiFillContainer className=\"nav-item-icon icon-activate\"/>\r\n                            <span>Goods Manager</span>\r\n                        </NavLink>\r\n                        <NavLink to=\"/receiptmanager\" className=\"nav-item\" href='#'>\r\n                            <IoReceiptOutline class=\"nav-item-icon\"/>\r\n                            <IoReceiptSharp class=\"nav-item-icon icon-activate\"/>\r\n                            <span>Receipt Manager</span>\r\n                        </NavLink>\r\n                    </div>\r\n                    \r\n                    <div class=\"nav-footer\">\r\n                        <NavLink to=\"/login\" onClick={() => this.props.changeLoginStatus()} className=\"nav-item\" style={{flex: 5}}>\r\n                            <FaSignOutAlt class=\"nav-item-icon\"/>\r\n                            <span>Sign out</span>\r\n                        </NavLink>\r\n                        <a href=\"#\" className=\"nav-item\" style={{flex: 4}}>\r\n                            <BsInfoCircleFill class=\"nav-item-icon\"/>\r\n                            <span>About</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isLogin: state.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavBar);","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\GoodManager.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\DashBoard.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\EmployeeManager.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\ReiceiptManager.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Profile.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Controllers\\Token.js",[],["268","269"],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Profile\\ProfileHeader.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Profile\\ProfileDetail.js",["270"],"import React, { Component } from 'react';\r\nimport { Card, CardHeader, Divider, Grid, TextField, Box, Button, CardContent } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\n\r\nclass ProfileDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: \"\",\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var listCountry;\r\n\r\n        axios.get(`https://provinces.open-api.vn/api/?depth=2`)\r\n            .then(res => {\r\n                this.setState({\r\n                    list: res.data,\r\n                })\r\n                console.log(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(\"fail\");\r\n            })\r\n\r\n        return (\r\n            <form autoComplete=\"off\" noValidate>\r\n                <Card>\r\n                    <CardHeader subheader=\"The information can be edited\" title=\"Profile\" />\r\n                    <Divider />\r\n                    <CardContent>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item md={6} xs={12}>\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    label=\"First name\"\r\n                                    required\r\n                                    name=\"firstName\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item md={6} xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Last name\"\r\n                                    name=\"lastName\"\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item md={6} xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item md={6} xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    label=\"Phone Number\"\r\n                                    name=\"phone\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item md={6} xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Select province\"\r\n                                    name=\"state\"\r\n                                    required\r\n                                    select\r\n                                    SelectProps={{ native: true }}\r\n                                    variant=\"outlined\"\r\n                                >\r\n                                    <option\r\n                                    >\r\n                                        An giang\r\n                                    </option>\r\n                                </TextField>\r\n                            </Grid>\r\n                            <Grid item md={6} xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Select province\"\r\n                                    name=\"state\"\r\n                                    required\r\n                                    disabled\r\n                                    select\r\n                                    SelectProps={{ native: true }}\r\n                                    variant=\"outlined\"\r\n                                >\r\n                                    <option\r\n                                    >\r\n                                        An giang\r\n                                    </option>\r\n                                </TextField>\r\n                            </Grid>\r\n                            <Grid item md={6} xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Select province\"\r\n                                    name=\"state\"\r\n                                    required\r\n                                    disabled\r\n                                    select\r\n                                    SelectProps={{ native: true }}\r\n                                    variant=\"outlined\"\r\n                                >\r\n                                    <option\r\n                                    >\r\n                                        An giang\r\n                                    </option>\r\n                                </TextField>\r\n                            </Grid>\r\n                            <Grid item md={6} xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Adress details\"\r\n                                    name=\"adress\"\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                    <Divider />\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-end',\r\n                            p: 2\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            Save details\r\n                        </Button>\r\n                    </Box>\r\n                </Card>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileDetail;","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Profile\\ProfileAvt.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Login\\LoginWithEmployee.js",["271"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../CSS/Login.css'\r\nimport { BsFillEnvelopeFill, BsLockFill } from \"react-icons/bs\";\r\nimport {  FiXSquare,FiChevronLeft } from \"react-icons/fi\";\r\nimport {FaUserTie} from 'react-icons/fa'\r\nimport { Avatar } from '@mui/material'\r\nimport { IconContext } from \"react-icons\";\r\nimport axios from 'axios';\r\nimport Alert from '@mui/material/Alert';\r\n\r\nclass LoginWithEmployee extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            statusFailed: false,\r\n            statusSucces: false,\r\n        }\r\n    }\r\n\r\n    message = \"Login success\";\r\n\r\n    // Out Alert\r\n    OutAlert = () => {\r\n        this.setState({\r\n            statusFailed: false,\r\n            statusSucces: false,\r\n        })\r\n    }\r\n\r\n    // Check để thay đổi trạng thái đã login hay chưa\r\n    isLoginCheck = (e) => {\r\n        this.OutAlert();\r\n        const form = document.getElementById('login-form');\r\n        if (this.blurEmail() && this.blurPassword()) {\r\n            axios.post(`http://localhost:5000/sign-in-employee`, {\r\n                username: document.querySelector('#username').value,\r\n                password: document.getElementById('password').value,\r\n            })\r\n                .then(res => {\r\n                    switch (res.data.status) {\r\n                        case 1:\r\n                            this.message = res.data.message;\r\n                            this.setState({\r\n                                statusSucces: true,\r\n                            })\r\n                            localStorage.setItem('token', res.data.token);\r\n                            this.props.changeLoginStatus();\r\n                            break;\r\n                        case -1:\r\n                            this.message = res.data.message;\r\n                            this.setState({\r\n                                statusFailed: true,\r\n                            })\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.message = \"Enter again\";\r\n                    this.setState({\r\n                        statusFailed: true,\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    // Handle user : blur , change in input\r\n    blurEmail = () => {\r\n        const event = document.querySelector('#username');\r\n        let elementValue = event.value;\r\n        const formGroup = event.parentElement.parentElement;\r\n        // check validate\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    blurPassword = () => {\r\n        const e = document.getElementById('password');\r\n        let elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\r\n            return false;\r\n        } else if (e.value.length < 6) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    changeInput = (e) => {\r\n        const formGroup = e.target.parentElement.parentElement;\r\n        formGroup.classList.remove('invalid');\r\n        formGroup.querySelector('.form-message').innerText = \"\";\r\n    }\r\n\r\n\r\n    render() {\r\n        const enterPress = this.isLoginCheck;\r\n        document.onkeydown = function (e) {\r\n            switch (e.which) {\r\n                case 13:\r\n                    enterPress(e);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"form-login\">\r\n                    <div className=\"auth-form\">\r\n                        <Avatar className=\"auth-form__avatar\">\r\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\r\n                                <FaUserTie></FaUserTie>\r\n                            </IconContext.Provider>\r\n                        </Avatar>\r\n                        <div className=\"auth-form__container\">\r\n                            <div className=\"auth-form__header\">\r\n                                <div className=\"auth-form__heading\">Employee</div>\r\n                                <NavLink to=\"/login\" className=\"auth-form__switch-btn\"> <FiChevronLeft className=\"auth-form__arrow-return\"></FiChevronLeft>Login</NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"auth-form__body\">\r\n                            <form action=\"/login-submit\" method=\"POST\" id=\"login-form\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\" className=\"form-label\">Username</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"username\"  id=\"username\" placeholder=\"VD: phuoc123\" type=\"text\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={(e) => this.blurPassword(e)} name=\"password\"  id=\"password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"auth-form__btn\">\r\n                                    <div to=\"/thungan\" id=\"navlink\" onClick={(e) => this.isLoginCheck(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign In</div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.statusSucces ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isLogin: state.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps)(LoginWithEmployee);","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Reducer\\TypeStatusReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\index.js",[],["272","273"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\App.js",["274"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Store.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\LoginStatusReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\TypeStatusReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Router\\DirectionURL.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\ForgotPassword.js",["275","276"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Body.js",["277"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\Register.js",["278","279"],"import React, { Component } from 'react';\r\nimport '../../CSS/Login.css'\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport Avatar from '@mui/material/Avatar'\r\nimport { IconContext } from \"react-icons\";\r\nimport { FiChevronLeft, FiUserPlus, FiXSquare } from \"react-icons/fi\";\r\nimport { BsFillEnvelopeFill, BsLockFill, BsCodeSlash } from \"react-icons/bs\";\r\nimport { FaPhoneSquare } from \"react-icons/fa\";\r\nimport axios from 'axios';\r\nimport Alert from '@mui/material/Alert';\r\nimport emailjs from 'emailjs-com';\r\nvar bcrypt = require('bcryptjs');\r\n\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n            code: \"\",\r\n            statusSendCode: true,\r\n            statusFailed: false,\r\n            statusSuccess: false,\r\n        }\r\n    }\r\n\r\n    message = \"\";\r\n\r\n    // Send code tới người dùng\r\n    sendCode = (a = this.makeCode(6)) => {\r\n        this.setState({\r\n            code: a,\r\n        })\r\n        emailjs.init(\"user_K1g5N5hUDI0rjsa1uRoI4\");\r\n        emailjs.send(\"gmail_main\", \"template_plasdgf\", {\r\n            To_mail: `${document.getElementById('email').value}`,\r\n            code: `${a}`,\r\n        })\r\n            .then((response) => {\r\n                console.log('SUCCESS!', response.status, response.text);\r\n            }, (err) => {\r\n                console.log('FAILED...', err);\r\n            });\r\n    }\r\n\r\n    // status SignUp \r\n    SignUp = (e) => {\r\n        this.OutAlert();\r\n        if (this.blurEmail() && this.blurCode() && this.blurPassword() && this.blurRePassword() && this.blurTel()) {\r\n            axios.post(`http://localhost:5000/register-with-email`, {\r\n                email: document.getElementById('email').value,\r\n                password: this.hash(document.getElementById('password').value),\r\n                tel: document.getElementById('tel').value,\r\n            })\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    switch (res.data.status) {\r\n                        case 1:\r\n                            this.message = res.data.message;\r\n                            this.setState({\r\n                                statusSuccess: true,\r\n                            })\r\n                            localStorage.setItem('token', res.data.token);\r\n                            const data = {\r\n                                email: res.data.email,\r\n                                firstName: \"\",\r\n                                lastName:  \"\",\r\n                                old:  \"\",\r\n                                gender: \"0\",\r\n                                storeName: \"\",\r\n                                tel: document.getElementById('tel').value,\r\n                                salary:  \"\",\r\n                                province: \"0\",\r\n                                district:  \"0\",\r\n                                address:  \"\",\r\n                            }\r\n                            this.props.updateProfile(data);\r\n                            this.props.changeLoginStatus();\r\n                            break;\r\n                        case -1:\r\n                            this.message = res.data.message;;\r\n                            this.setState({\r\n                                statusFailed: true,\r\n                            })\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.message = \"Error system\";\r\n                    this.setState({\r\n                        statusFailed: true,\r\n                    })\r\n                })\r\n\r\n        }\r\n    }\r\n\r\n    // Out Alert\r\n    OutAlert = () => {\r\n        this.setState({\r\n            statusFailed: false,\r\n            statusSuccess: false,\r\n        })\r\n    }\r\n\r\n    // Tạo mã code cho người dùng xác nhận\r\n    makeCode = (length) => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() *\r\n                charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // Hashpassword\r\n    hash = (pass) => {\r\n        var hash = bcrypt.hashSync(pass, 12)\r\n        return hash;\r\n    }\r\n\r\n\r\n    // Handle user : blur, change in input\r\n    blurEmail = () => {\r\n        const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        const e = document.getElementById('email');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            this.setState({\r\n                statusSendCode: false,\r\n            })\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurCode = () => {\r\n        const e = document.getElementById('code');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (this.state.code === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please press Send Code\"\r\n            return false\r\n        } else if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter code here\"\r\n            return false\r\n        } else if (elementValue !== this.state.code) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Code is incorrect\"\r\n            return false\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurPassword = () => {\r\n        const e = document.getElementById('password');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\r\n            return false;\r\n        } else if (e.value.length < 6) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurRePassword = () => {\r\n        const e = document.getElementById('re-password')\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (document.getElementById('password').value !== elementValue) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Re-password not correct\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true\r\n        }\r\n    }\r\n\r\n    blurTel = () => {\r\n        const e = document.getElementById('tel');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        const regex = /^\\d+$/;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Phone is not in the correct format\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    changeInput = (e) => {\r\n        const formGroup = e.target.parentElement.parentElement;\r\n        formGroup.classList.remove('invalid');\r\n        formGroup.querySelector('.form-message').innerText = \"\";\r\n    }\r\n\r\n    render() {\r\n        const enterPress = this.SignUp;\r\n        document.onkeydown = function (e) {\r\n            switch (e.which) {\r\n                case 13:\r\n                    enterPress(e);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"form-register\">\r\n                    <div className=\"auth-form\">\r\n                        <Avatar className=\"auth-form__avatar\">\r\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\r\n                                <FiUserPlus></FiUserPlus>\r\n                            </IconContext.Provider>\r\n                        </Avatar>\r\n                        <div className=\"auth-form__container\">\r\n                            <div className=\"auth-form__header\">\r\n                                <div className=\"auth-form__heading\">Register</div>\r\n                                <NavLink to=\"/login\" className=\"auth-form__switch-btn\"> <FiChevronLeft className=\"auth-form__arrow-return\"></FiChevronLeft>Login</NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"auth-form__body\">\r\n                            <form action=\"/register-submit\" method=\"post\" id=\"register-form\">\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"VD: abc@gmail.com\" type=\"text\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsCodeSlash className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurCode()} name=\"code\" rules=\"required|email\" id=\"code\" placeholder=\"Ex: ABC321\" type=\"text\" />\r\n                                        <button type=\"button\" disabled={this.state.statusSendCode} onClick={() => this.sendCode()} class=\"btn btn-primary disabel send-code\">SEND</button>\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurPassword()} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurRePassword()} name=\"re-password\" id=\"re-password\" placeholder=\"Emter re-password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <FaPhoneSquare className=\"input-custom-icon\" ></FaPhoneSquare>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onBlur={(e) => this.blurTel(e)} onChange={(e) => this.changeInput(e)} name=\"tel\" rules=\"required\" id=\"tel\" placeholder=\"Ex: 0303030303\" type=\"tel\" />\r\n\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"register-description\">Bằng cách ấn vào nút\r\n                                    <span className=\"register-description__keyword\">“ĐĂNG KÝ”</span>\r\n                                    , tôi đồng ý với\r\n                                    <span className=\"register-description__keyword\">Điều Khoản Sử Dụng</span> và\r\n                                    <div className=\"register-description__keyword\"> Chính Sách Bảo Mật</div>\r\n                                </div>\r\n                                <div className=\"auth-form__btn\">\r\n                                    <div onClick={(e) => this.SignUp(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign Up</div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n                {this.state.statusSuccess ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isLogin: state.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            });\r\n        },\r\n        updateProfile: (data) => {\r\n            dispatch({\r\n                type: \"UPDATA_DATA_USER\",\r\n                email: data.email,\r\n                firstName: data.firstName,\r\n                lastName: data.lastName,\r\n                old: data.old,\r\n                gender: data.gender,\r\n                storeName: data.storeName,\r\n                tel: data.tel,\r\n                salary: data.salary,\r\n                province: data.province,\r\n                district: data.district,\r\n                address: data.address,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\LoginWithEmployee.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Login\\Login.js",["280","281"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../CSS/Login.css'\r\nimport { BsFillEnvelopeFill, BsLockFill } from \"react-icons/bs\";\r\nimport { FiChevronRight, FiXSquare } from \"react-icons/fi\";\r\nimport { BiUser } from \"react-icons/bi\";\r\nimport { Avatar } from '@mui/material'\r\nimport { IconContext } from \"react-icons\";\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport axios from 'axios';\r\nimport Alert from '@mui/material/Alert';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            appId: \"543752153590340\",\r\n            clientId: \"826925109796-mi95l41fi57bdlolpvnfdg5bpt9oc81h.apps.googleusercontent.com\",\r\n            statusFailed: false,\r\n            statusSucces: false,\r\n        }\r\n    }\r\n\r\n    message = \"Login success\";\r\n\r\n    // Login with google\r\n    onLoginSuccess = (res) => {\r\n        this.OutAlert();\r\n        axios.post(`http://localhost:5000/sign-in-with-google`, res.profileObj)\r\n            .then(res => {\r\n                console.log(\"thành công\");\r\n                console.log(res.data);\r\n                console.log(res.data.email);\r\n                switch (res.data.status) {\r\n                    case 1:\r\n                        this.message = res.data.message;\r\n                        this.setState({\r\n                            statusSucces: true,\r\n                        })\r\n                        localStorage.setItem('token', res.data.token);\r\n                        const data = {\r\n                            email: res.data.email,\r\n                            firstName: res.data.data.firstName ? res.data.data.firstName : \"\",\r\n                            lastName: res.data.data.lastName ? res.data.data.lastName : \"\",\r\n                            old: res.data.data.old ? res.data.data.old : \"\",\r\n                            gender: res.data.data.gender ? res.data.data.gender : \"0\",\r\n                            storeName: res.data.data.storeName ? res.data.data.storeName : \"\",\r\n                            tel: res.data.data.phoneNumber ? res.data.data.phoneNumber : \"\",\r\n                            salary: res.data.data.salary ? res.data.data.salary : \"\",\r\n                            province: res.data.data.province ? res.data.data.province : \"0\",\r\n                            district: res.data.data.district ? res.data.data.district : \"0\",\r\n                            address: res.data.data.address ? res.data.data.address : \"\",\r\n                        }\r\n                        this.props.updateProfile(data);\r\n                        this.props.changeLoginStatus();\r\n                        break;\r\n                    case -1:\r\n                        this.message = res.data.message;\r\n                        this.setState({\r\n                            statusFailed: true,\r\n                        })\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.message = \"Error, server don't active\";\r\n                this.setState({\r\n                    statusFailed: true,\r\n                })\r\n            })\r\n    }\r\n\r\n    onFailureSuccess = (res) => {\r\n        this.setState({\r\n            statusFailed: true,\r\n            statusSucces: false,\r\n        })\r\n    }\r\n\r\n    // Out Alert\r\n    OutAlert = () => {\r\n        this.setState({\r\n            statusFailed: false,\r\n            statusSucces: false,\r\n        })\r\n    }\r\n\r\n    // Check để thay đổi trạng thái đã login hay chưa\r\n    isLoginCheck = (e) => {\r\n        this.OutAlert();\r\n        if (this.blurEmail() && this.blurPassword()) {\r\n            axios.post(`http://localhost:5000/sign-in-with-gmail-password`, {\r\n                email: document.querySelector('#email').value,\r\n                password: document.getElementById('password').value,\r\n            })\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    console.log(res.data.email);\r\n                    switch (res.data.status) {\r\n                        case 1:\r\n                            this.message = res.data.message;\r\n                            this.setState({\r\n                                statusSucces: true,\r\n                            })\r\n                            localStorage.setItem('token', res.data.token);\r\n                            const data = {\r\n                                email: res.data.email? res.data.email : res.data.data._id,\r\n                                firstName: res.data.data.firstName ? res.data.data.firstName : \"cc\",\r\n                                lastName: res.data.data.lastName ? res.data.data.lastName : \"abc\",\r\n                                old: res.data.data.old ? res.data.data.old : \"\",\r\n                                gender: res.data.data.gender ? res.data.data.gender : \"0\",\r\n                                storeName: res.data.data.storeName ? res.data.data.storeName : \"\",\r\n                                tel: res.data.data.phoneNumber ? res.data.data.phoneNumber : \"\",\r\n                                salary: res.data.data.salary ? res.data.data.salary : \"\",\r\n                                province: res.data.data.province ? res.data.data.province : \"0\",\r\n                                district: res.data.data.district ? res.data.data.district : \"0\",\r\n                                address: res.data.data.address ? res.data.data.address : \"\",\r\n                            }\r\n                            this.props.updateProfile(data);\r\n                            this.props.changeLoginStatus();\r\n                            break;\r\n                        case -1:\r\n                            this.message = res.data.message;\r\n                            this.setState({\r\n                                statusFailed: true,\r\n                            })\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.message = \"Enter again\";\r\n                    this.setState({\r\n                        statusFailed: true,\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    // Handle user : blur , change in input\r\n    blurEmail = () => {\r\n        var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        const event = document.querySelector('#email');\r\n        let elementValue = event.value;\r\n        const formGroup = event.parentElement.parentElement;\r\n        // check validate\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    blurPassword = () => {\r\n        const e = document.getElementById('password');\r\n        let elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\r\n            return false;\r\n        } else if (e.value.length < 6) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    changeInput = (e) => {\r\n        const formGroup = e.target.parentElement.parentElement;\r\n        formGroup.classList.remove('invalid');\r\n        formGroup.querySelector('.form-message').innerText = \"\";\r\n    }\r\n\r\n\r\n    render() {\r\n        const enterPress = this.isLoginCheck;\r\n        document.onkeydown = function (e) {\r\n            switch (e.which) {\r\n                case 13:\r\n                    enterPress(e);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"form-login\">\r\n                    <div className=\"auth-form\">\r\n                        <Avatar className=\"auth-form__avatar\">\r\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\r\n                                <BiUser></BiUser>\r\n                            </IconContext.Provider>\r\n                        </Avatar>\r\n                        <div className=\"auth-form__container\">\r\n                            <div className=\"auth-form__header\">\r\n                                <div className=\"auth-form__heading\">Login</div>\r\n                                <NavLink to=\"/register\" className=\"auth-form__switch-btn\">Register <FiChevronRight className=\"auth-form__arrow-return\"></FiChevronRight></NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"auth-form__body\">\r\n                            <form action=\"/login-submit\" method=\"POST\" id=\"login-form\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"VD: abc@gmail.com\" type=\"text\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={(e) => this.blurPassword(e)} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"auth-form__support\">\r\n                                    <span className=\"auth-form__support-forget\">\r\n                                        <NavLink onclick=\"\" to=\"/forgot\" className=\"auth-form__switch-btn\">Forgot password</NavLink>\r\n                                    </span>\r\n                                    <span className=\"auth-form__help-separate\" />\r\n                                    <span className=\"auth-form__support-need-support\">Need help?</span>\r\n                                </div>\r\n                                <div className=\"auth-form__support\">\r\n                                    <GoogleLogin\r\n                                        className=\"auth-form__support-google\"\r\n                                        clientId={this.state.clientId}\r\n                                        buttonText=\"Login with Google\"\r\n                                        onSuccess={this.onLoginSuccess}\r\n                                        onFailure={this.onFailureSuccess}\r\n                                        cookiePolicy={'single_host_origin'}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"auth-form__btn\">\r\n                                    <div to=\"/home\" id=\"navlink\" onClick={(e) => this.isLoginCheck(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign In</div>\r\n                                </div>\r\n                                <div className=\"auth-form__btn\">\r\n                                    <NavLink to=\"/employee\" id=\"navlink\" className=\"auth-form__btn-log-in auth-form__switch-btn auth-form-employee\">\r\n                                        Employee\r\n                                        <FiChevronRight className=\"auth-form__arrow-return\"></FiChevronRight>\r\n                                    </NavLink>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.statusSucces ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isLogin: state.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            });\r\n        },\r\n        updateProfile: (data) => {\r\n            dispatch({\r\n                type: \"UPDATA_DATA_USER\",\r\n                email: data.email,\r\n                firstName: data.firstName,\r\n                lastName: data.lastName,\r\n                old: data.old,\r\n                gender: data.gender,\r\n                storeName: data.storeName,\r\n                tel: data.tel,\r\n                salary: data.salary,\r\n                province: data.province,\r\n                district: data.district,\r\n                address: data.address,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Router\\DashboardURL.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Partials\\SideNavBar.js",["282","283"],"import React, { Component } from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport { \r\n    AiOutlineDashboard,\r\n    AiFillDashboard,\r\n    AiOutlineContainer,\r\n    AiFillContainer\r\n} from \"react-icons/ai\";\r\nimport { BsInfoCircleFill} from \"react-icons/bs\";\r\nimport { \r\n    IoPeopleOutline,\r\n    IoPeopleSharp,\r\n    IoReceiptOutline,\r\n    IoReceiptSharp\r\n} from \"react-icons/io5\";\r\nimport { RiProfileFill, RiProfileLine } from \"react-icons/ri\";\r\nimport { FaSignOutAlt } from \"react-icons/fa\";\r\n\r\nimport Avatar from '../../img/avatar_default.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport '../../CSS/SideNavBar.css'\r\n\r\n\r\nclass SideNavBar extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"navbar-container\">\r\n                <div class=\"navibar sidebar\">\r\n                    <div class=\"nav-heading\">\r\n                        <div class=\"navbar-heading-container\">\r\n                            <img src={Avatar} style ={{width: 40, height: 40, borderRadius: '100%'}}></img>\r\n                            <span class=\"user-name\">Đào Xuân Trường</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"nav-container\">\r\n                        <NavLink className=\"nav-item\" to=\"/dashboard\">\r\n                            <AiOutlineDashboard class=\"nav-item-icon\"/>\r\n                            <AiFillDashboard class=\"nav-item-icon icon-activate\"/>   \r\n                            <span>Dashboard</span>\r\n                        </NavLink>\r\n                        <NavLink to='/profile' className=\"nav-item\" href='#'>\r\n                            <RiProfileLine class=\"nav-item-icon\"/>\r\n                            <RiProfileFill class=\"nav-item-icon icon-activate\"/>\r\n                            <span>Profile</span>\r\n                        </NavLink>\r\n                        <NavLink to='/employeemanager' className=\"nav-item\" href='#'>\r\n                            <IoPeopleOutline class=\"nav-item-icon\"/>\r\n                            <IoPeopleSharp class=\"nav-item-icon icon-activate\"/>\r\n                            <span>Employee Manager</span>\r\n                        </NavLink>\r\n                        <NavLink to=\"/goodmanager\" className=\"nav-item\" href='#'>\r\n                            <AiOutlineContainer className=\"nav-item-icon\"/>\r\n                            <AiFillContainer className=\"nav-item-icon icon-activate\"/>\r\n                            <span>Goods Manager</span>\r\n                        </NavLink>\r\n                        <NavLink to=\"/receiptmanager\" className=\"nav-item\" href='#'>\r\n                            <IoReceiptOutline class=\"nav-item-icon\"/>\r\n                            <IoReceiptSharp class=\"nav-item-icon icon-activate\"/>\r\n                            <span>Receipt Manager</span>\r\n                        </NavLink>\r\n                    </div>\r\n                    \r\n                    <div class=\"nav-footer\">\r\n                        <NavLink to=\"/login\" onClick={() => this.props.changeLoginStatus()} className=\"nav-item\" style={{flex: 5}}>\r\n                            <FaSignOutAlt class=\"nav-item-icon\"/>\r\n                            <span>Sign out</span>\r\n                        </NavLink>\r\n                        <a href=\"#\" className=\"nav-item\" style={{flex: 4}}>\r\n                            <BsInfoCircleFill class=\"nav-item-icon\"/>\r\n                            <span>About</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isLogin: state.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavBar);","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\DashBoard.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\EmployeeManager.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\ReiceiptManager.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\GoodManager.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileHeader.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileDetail.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ProvinceReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ChangePassword.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ListShift.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ProfileSetting.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\ModalAdd.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\Profile.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusAddShiftReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\DarkMode.js",["284","285"],"import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { styled } from '@mui/system';\r\nimport { useSwitch } from '@mui/core/SwitchUnstyled';\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\nconst SwitchRoot = styled('span')(`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 62px;\r\n  height: 34px;\r\n  padding: 7px;\r\n`);\r\n\r\nconst SwitchInput = styled('input')(`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  opacity: 0;\r\n  z-index: 1;\r\n  margin: 0;\r\n  cursor: pointer;\r\n`);\r\n\r\nconst SwitchThumb = styled('span')(\r\n  ({ theme }) => `\r\n  position: absolute;\r\n  display: block;\r\n  background-color: ${theme.palette.mode === 'dark' ? '#003892' : '#001e3c'};\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  top: 1px;\r\n  left: 7px;\r\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:before {\r\n    display: block;\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 100%;\r\n    background: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n    '#fff',\r\n  )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>') center center no-repeat;\r\n  }\r\n\r\n  &.focusVisible {\r\n    background-color: #79B;\r\n  }\r\n\r\n  &.checked {\r\n    transform: translateX(16px);\r\n    \r\n    &:before {\r\n      background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n    '#fff',\r\n  )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>');\r\n    }\r\n  }\r\n`,\r\n);\r\n\r\nconst SwitchTrack = styled('span')(\r\n  ({ theme }) => `\r\n  background-color: ${theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be'};\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: block;\r\n`,\r\n);\r\n\r\nfunction MUISwitch(props) {\r\n  const { getInputProps } = useSwitch(props);\r\n  const dispatch = useDispatch();\r\n  const darkmode = useSelector(state => state.statusDarkmode)\r\n  const changeDarkmode = () => {\r\n    dispatch({\r\n      type: \"CHANGE_DARKMODE\",\r\n    })\r\n  }\r\n\r\n  return (\r\n    <SwitchRoot  className>\r\n      <SwitchTrack name=\"switchTrack\">\r\n        <SwitchThumb name=\"switchThumb\" className={darkmode ? \"checked\": null} />\r\n      </SwitchTrack>\r\n      <SwitchInput name=\"darkmode\" onClick={() => changeDarkmode()}  {...getInputProps()} aria-label=\"Demo switch\" />\r\n    </SwitchRoot>\r\n  );\r\n}\r\n\r\nexport default function UseSwitchesCustom() {\r\n  return <MUISwitch defaultChecked />;\r\n}\r\n","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\test.js",[],["286","287"],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\InfoUserReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ListShiftReducer.js",["288"],"import { act } from \"react-dom/test-utils\";\r\n\r\nconst listShiftInitialState = [\r\n    {\r\n        description: \"Ca 1\",\r\n        from: \"0:36 PM\",\r\n        id: \"V8GOL1\",\r\n        to: \"3:36 PM\",\r\n        value: 1,\r\n    },\r\n    {\r\n        description: \"Ca 2\",\r\n        from: \"0:36 PM\",\r\n        id: \"V8GOc1\",\r\n        to: \"3:36 PM\",\r\n        value: 1,\r\n    },\r\n    {\r\n        description: \"Ca 3\",\r\n        from: \"0:36 PM\",\r\n        id: \"V8sOL1\",\r\n        to: \"3:36 PM\",\r\n        value: 10,\r\n    },\r\n    {\r\n        description: \"Ca 4\",\r\n        from: \"0:36 PM\",\r\n        id: \"V8cOL1\",\r\n        to: \"3:36 PM\",\r\n        value: 1,\r\n    }\r\n],\r\n\r\n    listShiftReducer = (state = listShiftInitialState, action) => {\r\n        switch (action.type) {\r\n            case \"DELETE_SHIFT\":\r\n                return state.filter((value, key) => (value.id.toString() !== action.idShift));\r\n            case \"ADD_SHIFT\":\r\n                return [...state, action.newShift]\r\n            case \"OBJECT_UPDATE_SHIFT\":\r\n                state.forEach(item => {\r\n                    if(item.id === action.data.id) {\r\n                        item.description = action.data.description;\r\n                        item.value = action.data.value;\r\n                        item.from = action.data.from;\r\n                        item.to = action.data.to;\r\n                    }\r\n                })\r\n                return state\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\nexport default listShiftReducer;","D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusEditShiftReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\objectEditShiftReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\ObjectEditShiftReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Reducer\\Status\\StatusDarkModeReducer.js",[],"D:\\UIT\\Nam3_HKI\\SE100Project\\client\\src\\Components\\Profile\\Test.js",["289"],"import React from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux'\r\n// import { createSelector } from 'reselect'\r\n\r\nfunction Test(props) {\r\n    const statusLogin = useSelector(state => state.addStatus)\r\n    const darkmode = useSelector(state => state.statusDarkmode)\r\n    const Abc = useDispatch();\r\n    \r\n    const handle = () => {\r\n        console.log(darkmode);\r\n        Abc({\r\n            type: \"CHANGE_DARKMODE\",\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div onClick={() => handle()}>{darkmode? \"true\":\"false\"}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Test;",{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","severity":1,"message":"295","line":8,"column":8,"nodeType":"296","messageId":"297","endLine":8,"endColumn":13},{"ruleId":"298","severity":1,"message":"299","line":12,"column":3,"nodeType":"300","messageId":"301","endLine":15,"endColumn":4},{"ruleId":"294","severity":1,"message":"302","line":3,"column":5,"nodeType":"296","messageId":"297","endLine":3,"endColumn":12},{"ruleId":"294","severity":1,"message":"303","line":11,"column":18,"nodeType":"296","messageId":"297","endLine":11,"endColumn":24},{"ruleId":"294","severity":1,"message":"304","line":16,"column":8,"nodeType":"296","messageId":"297","endLine":16,"endColumn":14},{"ruleId":"294","severity":1,"message":"305","line":93,"column":15,"nodeType":"296","messageId":"297","endLine":93,"endColumn":19},{"ruleId":"306","severity":1,"message":"307","line":131,"column":28,"nodeType":"308","messageId":"309","endLine":131,"endColumn":29,"suggestions":"310"},{"ruleId":"306","severity":1,"message":"307","line":131,"column":44,"nodeType":"308","messageId":"309","endLine":131,"endColumn":45,"suggestions":"311"},{"ruleId":"306","severity":1,"message":"307","line":113,"column":28,"nodeType":"308","messageId":"309","endLine":113,"endColumn":29,"suggestions":"312"},{"ruleId":"306","severity":1,"message":"307","line":113,"column":44,"nodeType":"308","messageId":"309","endLine":113,"endColumn":45,"suggestions":"313"},{"ruleId":"294","severity":1,"message":"314","line":15,"column":10,"nodeType":"296","messageId":"297","endLine":15,"endColumn":28},{"ruleId":"306","severity":1,"message":"307","line":119,"column":30,"nodeType":"308","messageId":"309","endLine":119,"endColumn":31,"suggestions":"315"},{"ruleId":"306","severity":1,"message":"307","line":119,"column":46,"nodeType":"308","messageId":"309","endLine":119,"endColumn":47,"suggestions":"316"},{"ruleId":"294","severity":1,"message":"317","line":229,"column":15,"nodeType":"296","messageId":"297","endLine":229,"endColumn":27},{"ruleId":"294","severity":1,"message":"318","line":10,"column":10,"nodeType":"296","messageId":"297","endLine":10,"endColumn":19},{"ruleId":"294","severity":1,"message":"319","line":11,"column":10,"nodeType":"296","messageId":"297","endLine":11,"endColumn":26},{"ruleId":"320","severity":1,"message":"321","line":33,"column":25,"nodeType":"322","endLine":33,"endColumn":98},{"ruleId":"323","severity":1,"message":"324","line":69,"column":25,"nodeType":"322","endLine":69,"endColumn":76},{"ruleId":"290","replacedBy":"325"},{"ruleId":"292","replacedBy":"326"},{"ruleId":"294","severity":1,"message":"327","line":15,"column":13,"nodeType":"296","messageId":"297","endLine":15,"endColumn":24},{"ruleId":"294","severity":1,"message":"305","line":38,"column":15,"nodeType":"296","messageId":"297","endLine":38,"endColumn":19},{"ruleId":"290","replacedBy":"328"},{"ruleId":"292","replacedBy":"329"},{"ruleId":"298","severity":1,"message":"299","line":11,"column":3,"nodeType":"300","messageId":"301","endLine":14,"endColumn":4},{"ruleId":"306","severity":1,"message":"307","line":113,"column":28,"nodeType":"308","messageId":"309","endLine":113,"endColumn":29,"suggestions":"330"},{"ruleId":"306","severity":1,"message":"307","line":113,"column":44,"nodeType":"308","messageId":"309","endLine":113,"endColumn":45,"suggestions":"331"},{"ruleId":"294","severity":1,"message":"302","line":3,"column":5,"nodeType":"296","messageId":"297","endLine":3,"endColumn":12},{"ruleId":"306","severity":1,"message":"307","line":132,"column":30,"nodeType":"308","messageId":"309","endLine":132,"endColumn":31,"suggestions":"332"},{"ruleId":"306","severity":1,"message":"307","line":132,"column":46,"nodeType":"308","messageId":"309","endLine":132,"endColumn":47,"suggestions":"333"},{"ruleId":"306","severity":1,"message":"307","line":151,"column":28,"nodeType":"308","messageId":"309","endLine":151,"endColumn":29,"suggestions":"334"},{"ruleId":"306","severity":1,"message":"307","line":151,"column":44,"nodeType":"308","messageId":"309","endLine":151,"endColumn":45,"suggestions":"335"},{"ruleId":"320","severity":1,"message":"321","line":33,"column":29,"nodeType":"322","endLine":33,"endColumn":102},{"ruleId":"323","severity":1,"message":"324","line":70,"column":25,"nodeType":"322","endLine":70,"endColumn":76},{"ruleId":"294","severity":1,"message":"336","line":2,"column":10,"nodeType":"296","messageId":"297","endLine":2,"endColumn":18},{"ruleId":"294","severity":1,"message":"337","line":6,"column":10,"nodeType":"296","messageId":"297","endLine":6,"endColumn":23},{"ruleId":"290","replacedBy":"338"},{"ruleId":"292","replacedBy":"339"},{"ruleId":"294","severity":1,"message":"340","line":1,"column":10,"nodeType":"296","messageId":"297","endLine":1,"endColumn":13},{"ruleId":"294","severity":1,"message":"341","line":6,"column":11,"nodeType":"296","messageId":"297","endLine":6,"endColumn":22},"no-native-reassign",["342"],"no-negated-in-lhs",["343"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'NavLink' is defined but never used.","'Button' is defined but never used.","'bcrypt' is defined but never used.","'form' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["344","345"],["346","347"],["348","349"],["350","351"],"'touchRippleClasses' is defined but never used.",["352","353"],["354","355"],"'elementValue' is assigned a value but never used.","'ImProfile' is defined but never used.","'BsFillPeopleFill' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["342"],["343"],"'listCountry' is defined but never used.",["342"],["343"],["356","357"],["358","359"],["360","361"],["362","363"],["364","365"],["366","367"],"'useState' is defined but never used.","'LoadingButton' is defined but never used.",["342"],["343"],"'act' is defined but never used.","'statusLogin' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"368","fix":"369","desc":"370"},{"messageId":"371","fix":"372","desc":"373"},{"messageId":"368","fix":"374","desc":"370"},{"messageId":"371","fix":"375","desc":"373"},{"messageId":"368","fix":"376","desc":"370"},{"messageId":"371","fix":"377","desc":"373"},{"messageId":"368","fix":"378","desc":"370"},{"messageId":"371","fix":"379","desc":"373"},{"messageId":"368","fix":"380","desc":"370"},{"messageId":"371","fix":"381","desc":"373"},{"messageId":"368","fix":"382","desc":"370"},{"messageId":"371","fix":"383","desc":"373"},{"messageId":"368","fix":"384","desc":"370"},{"messageId":"371","fix":"385","desc":"373"},{"messageId":"368","fix":"386","desc":"370"},{"messageId":"371","fix":"387","desc":"373"},{"messageId":"368","fix":"388","desc":"370"},{"messageId":"371","fix":"389","desc":"373"},{"messageId":"368","fix":"390","desc":"370"},{"messageId":"371","fix":"391","desc":"373"},{"messageId":"368","fix":"392","desc":"370"},{"messageId":"371","fix":"393","desc":"373"},{"messageId":"368","fix":"394","desc":"370"},{"messageId":"371","fix":"395","desc":"373"},"removeEscape",{"range":"396","text":"397"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"398","text":"399"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"400","text":"397"},{"range":"401","text":"399"},{"range":"402","text":"397"},{"range":"403","text":"399"},{"range":"404","text":"397"},{"range":"405","text":"399"},{"range":"406","text":"397"},{"range":"407","text":"399"},{"range":"408","text":"397"},{"range":"409","text":"399"},{"range":"410","text":"397"},{"range":"411","text":"399"},{"range":"412","text":"397"},{"range":"413","text":"399"},{"range":"414","text":"397"},{"range":"415","text":"399"},{"range":"416","text":"397"},{"range":"417","text":"399"},{"range":"418","text":"397"},{"range":"419","text":"399"},{"range":"420","text":"397"},{"range":"421","text":"399"},[4552,4553],"",[4552,4552],"\\",[4568,4569],[4568,4568],[3631,3632],[3631,3631],[3647,3648],[3647,3647],[3902,3903],[3902,3902],[3918,3919],[3918,3918],[3631,3632],[3631,3631],[3647,3648],[3647,3647],[4558,4559],[4558,4558],[4574,4575],[4574,4574],[6479,6480],[6479,6479],[6495,6496],[6495,6495]]