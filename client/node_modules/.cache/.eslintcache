[{"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\index.js":"1","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\App.js":"2","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Reducer\\Store.js":"3","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Reducer\\LoginStatusReducer.js":"4","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Router\\DirectionURL.js":"5","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Body.js":"6","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Login\\Login.js":"7","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Login\\ForgotPassword.js":"8","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Login\\Register.js":"9","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Router\\DashboardURL.js":"10","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Partials\\SideNavBar.js":"11","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\GoodManager.js":"12","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\DashBoard.js":"13","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\EmployeeManager.js":"14","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\ReiceiptManager.js":"15","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Profile.js":"16","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Controllers\\Token.js":"17","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Profile\\ProfileHeader.js":"18"},{"size":309,"mtime":1633446686404,"results":"19","hashOfConfig":"20"},{"size":984,"mtime":1633449462283,"results":"21","hashOfConfig":"20"},{"size":250,"mtime":1633446686400,"results":"22","hashOfConfig":"20"},{"size":295,"mtime":1633446686400,"results":"23","hashOfConfig":"20"},{"size":1307,"mtime":1633538491952,"results":"24","hashOfConfig":"20"},{"size":1098,"mtime":1633537094297,"results":"25","hashOfConfig":"20"},{"size":12574,"mtime":1633528958742,"results":"26","hashOfConfig":"20"},{"size":13525,"mtime":1633528939580,"results":"27","hashOfConfig":"20"},{"size":15739,"mtime":1633500663173,"results":"28","hashOfConfig":"20"},{"size":1035,"mtime":1633446686401,"results":"29","hashOfConfig":"20"},{"size":3917,"mtime":1633446686398,"results":"30","hashOfConfig":"20"},{"size":237,"mtime":1633446686396,"results":"31","hashOfConfig":"20"},{"size":262,"mtime":1633446686395,"results":"32","hashOfConfig":"20"},{"size":249,"mtime":1633446686395,"results":"33","hashOfConfig":"20"},{"size":246,"mtime":1633446686399,"results":"34","hashOfConfig":"20"},{"size":356,"mtime":1633540761970,"results":"35","hashOfConfig":"20"},{"size":292,"mtime":1633450273864,"results":"36","hashOfConfig":"20"},{"size":1137,"mtime":1633540149267,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1r6ia0c",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\index.js",[],["82","83"],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\App.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Reducer\\Store.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Reducer\\LoginStatusReducer.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Router\\DirectionURL.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Body.js",["84"],"import React, { Component } from 'react';\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport DashboardURL from '../Router/DashboardURL';\r\nimport {connect} from 'react-redux';\r\nimport SideNavBar from './Partials/SideNavBar';\r\n\r\nclass Body extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{display: 'flex'}}>\r\n                <SideNavBar/>\r\n                <div className=\"dashboard\" style={{ width: '100%', display: 'flex', borderLeft: '2px solid #99999975',  \r\n                backgroundColor: 'rgb(221,235,255)'}}>\r\n                    <DashboardURL></DashboardURL>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isLogin: state.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Body);","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Login\\Login.js",["85","86","87"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../CSS/Login.css'\r\nimport { BsFillEnvelopeFill, BsLockFill } from \"react-icons/bs\";\r\nimport { FiChevronRight, FiXSquare } from \"react-icons/fi\";\r\nimport { BiUser } from \"react-icons/bi\";\r\nimport Avatar from '@mui/material/Avatar'\r\nimport { IconContext } from \"react-icons\";\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport axios from 'axios';\r\nimport Alert from '@mui/material/Alert';\r\nimport bcrypt from 'bcryptjs';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            appId: \"543752153590340\",\r\n            clientId: \"826925109796-mi95l41fi57bdlolpvnfdg5bpt9oc81h.apps.googleusercontent.com\",\r\n            statusFailed: false,\r\n            statusSucces: false,\r\n        }\r\n    }\r\n\r\n    message = \"Login success\";\r\n\r\n    // Hash password\r\n    hash = (pass) => {\r\n        var hash = bcrypt.hashSync(pass, 12)\r\n        return hash;\r\n    }\r\n\r\n\r\n    // Login with google\r\n    onLoginSuccess = (res) => {\r\n        this.OutAlert();\r\n        axios.post(`http://localhost:5000/sign-in-with-google`, res.profileObj)\r\n            .then(res => {\r\n                console.log(\"thành công\");\r\n                switch (res.data.status) {\r\n                    case 1:\r\n                        this.message = \"Login success\";\r\n                        this.setState({\r\n                            statusSucces: true,\r\n                        })\r\n                        localStorage.setItem('token', res.data.token);\r\n                        break;\r\n                    case 0:\r\n                        this.message = \"Incorrect password\";\r\n                        this.setState({\r\n                            statusFailed: true,\r\n                        })\r\n                        break;\r\n                    case -2:\r\n                        this.message = \"This account has signin by Email the first\";\r\n                        this.setState({\r\n                            statusFailed: true,\r\n                        })\r\n                        break;\r\n                    default:\r\n                        this.message = \"Enter again\";\r\n                        this.setState({\r\n                            statusFailed: true,\r\n                        })\r\n                        break;\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.message = \"Error, server don't active\";\r\n                this.setState({\r\n                    statusFailed: true,\r\n                })\r\n                console.log(\"lỗi\");\r\n            })\r\n    }\r\n\r\n    onFailureSuccess = (res) => {\r\n        this.setState({\r\n            statusFailed: true,\r\n            statusSucces: false,\r\n        })\r\n    }\r\n\r\n    // Out Alert\r\n    OutAlert = () => {\r\n        this.setState({\r\n            statusFailed: false,\r\n            statusSucces: false,\r\n        })\r\n    }\r\n\r\n    // Check để thay đổi trạng thái đã login hay chưa\r\n    isLoginCheck = (e) => {\r\n        this.OutAlert();\r\n        const form = document.getElementById('login-form');\r\n        if (this.blurEmail() && this.blurPassword()) {\r\n            axios.post(`http://localhost:5000/sign-in-with-gmail-password`, {\r\n                email: document.querySelector('#email').value,\r\n                password: document.getElementById('password').value,\r\n            })\r\n                .then(res => {\r\n                    console.log(res)\r\n                    console.log(\"thành công\");\r\n                    switch (res.data.status) {\r\n                        case 1:\r\n                            this.message = \"Login success\";\r\n                            this.setState({\r\n                                statusSucces: true,\r\n                            })\r\n                            localStorage.setItem('token', res.data.token);\r\n                            this.props.changeLoginStatus();\r\n                            break;\r\n                        case 0:\r\n                            this.message = \"Incorrect password\";\r\n                            this.setState({\r\n                                statusFailed: true,\r\n                            })\r\n                            break;\r\n                        case -1:\r\n                            this.message = \"This account has already existed\";\r\n                            this.setState({\r\n                                statusFailed: true,\r\n                            })\r\n                            break;\r\n                        default:\r\n                            this.message = \"Enter again\";\r\n                            this.setState({\r\n                                statusFailed: true,\r\n                            })\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.message = \"Enter again\";\r\n                    this.setState({\r\n                        statusFailed: true,\r\n                    })\r\n                    console.log(\"lỗi\");\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    // Handle user : blur , change in input\r\n    blurEmail = () => {\r\n        var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        const event = document.querySelector('#email');\r\n        let elementValue = event.value;\r\n        const formGroup = event.parentElement.parentElement;\r\n        // check validate\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    blurPassword = () => {\r\n        const e = document.getElementById('password');\r\n        let elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\r\n            return false;\r\n        } else if (e.value.length < 6) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    changeInput = (e) => {\r\n        const formGroup = e.target.parentElement.parentElement;\r\n        formGroup.classList.remove('invalid');\r\n        formGroup.querySelector('.form-message').innerText = \"\";\r\n    }\r\n\r\n\r\n    render() {\r\n        const enterPress = this.isLoginCheck;\r\n        document.onkeydown = function (e) {\r\n            switch (e.which) {\r\n                case 13:\r\n                    enterPress(e);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"form-login\">\r\n                    <div className=\"auth-form\">\r\n                        <Avatar className=\"auth-form__avatar\">\r\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\r\n                                <BiUser></BiUser>\r\n                            </IconContext.Provider>\r\n                        </Avatar>\r\n                        <div className=\"auth-form__container\">\r\n                            <div className=\"auth-form__header\">\r\n                                <div className=\"auth-form__heading\">Login</div>\r\n                                <NavLink to=\"/register\" className=\"auth-form__switch-btn\">Register <FiChevronRight className=\"auth-form__arrow-return\"></FiChevronRight></NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"auth-form__body\">\r\n                            <form action=\"/login-submit\" method=\"POST\" id=\"login-form\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"VD: abc@gmail.com\" type=\"text\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={(e) => this.blurPassword(e)} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"auth-form__support\">\r\n                                    <span className=\"auth-form__support-forget\">\r\n                                        <NavLink onclick=\"\" to=\"/forgot\" className=\"auth-form__switch-btn\">Forgot password</NavLink>\r\n                                    </span>\r\n                                    <span className=\"auth-form__help-separate\" />\r\n                                    <span className=\"auth-form__support-need-support\">Need help?</span>\r\n                                </div>\r\n                                <div className=\"auth-form__support\">\r\n                                    <GoogleLogin\r\n                                        className=\"auth-form__support-google\"\r\n                                        clientId={this.state.clientId}\r\n                                        buttonText=\"Login with Google\"\r\n                                        onSuccess={this.onLoginSuccess}\r\n                                        onFailure={this.onFailureSuccess}\r\n                                        cookiePolicy={'single_host_origin'}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"auth-form__btn\">\r\n                                    <div to=\"/home\" id=\"navlink\" onClick={(e) => this.isLoginCheck(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign In</div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.statusSucces ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isLogin: state.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Login\\ForgotPassword.js",["88","89"],"import React, { Component } from 'react';\r\nimport Avatar from '@mui/material/Avatar'\r\nimport { IconContext } from \"react-icons\";\r\nimport { FiSend, FiXSquare } from \"react-icons/fi\";\r\nimport { BsFillEnvelopeFill, BsLockFill, BsBoxArrowInLeft, BsCodeSlash } from \"react-icons/bs\";\r\nimport emailjs from 'emailjs-com';\r\nimport Alert from '@mui/material/Alert';\r\nimport axios from 'axios';\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nvar bcrypt = require('bcryptjs');\r\n\r\n\r\nclass ForgotPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            code: \"\",\r\n            statusSendCode: true,\r\n            statusFailed: false,\r\n            statusSuccess: false,\r\n        }\r\n    }\r\n\r\n    message = \"\"\r\n\r\n    // Send code tới người dùng\r\n    sendCode = (a = this.makeCode(6)) => {\r\n        this.setState({\r\n            code: a,\r\n        })\r\n        emailjs.init(\"user_K1g5N5hUDI0rjsa1uRoI4\");\r\n        emailjs.send(\"gmail_main\", \"template_plasdgf\", {\r\n            To_mail: `${document.querySelector('#email').value}`,\r\n            code: `${a}`,\r\n        })\r\n            .then((response) => {\r\n                console.log('SUCCESS!', response.status, response.text);\r\n            }, (err) => {\r\n                console.log('FAILED...', err);\r\n            });\r\n    }\r\n\r\n    // Tạo code để xác nhận\r\n    makeCode = (length) => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() *\r\n                charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // Hashpassword\r\n    hash = (pass) => {\r\n        var hash = bcrypt.hashSync(pass, 12)\r\n        return hash;\r\n    }\r\n\r\n\r\n    // Out Alert\r\n    OutAlert = () => {\r\n        this.setState({\r\n            statusFailed: false,\r\n            statusSuccess: false,\r\n        })\r\n    }\r\n\r\n    //Check tìm lại mật khẩu\r\n    findPassword = (e) => {\r\n        this.OutAlert();\r\n        if (this.blurEmail() && this.blurCode() && this.blurPassword() && this.blurRePassword()) {\r\n            const form = document.getElementById('findpass-form');\r\n            axios.post(`http://localhost:5000/find-password`, {\r\n                email: document.querySelector('#email').value,\r\n                password: this.hash(document.getElementById('password').value),\r\n            })\r\n                .then(res => {\r\n                    form.reset();\r\n                    console.log(\"thành công\");\r\n                    console.log(res);\r\n                    console.log(res.data.status);\r\n                    switch (res.data.status) {\r\n                        case 1:\r\n                            this.message = \"Find password success\";\r\n                            this.setState({\r\n                                statusSuccess: true,\r\n                            })\r\n                            break;\r\n                        case -4:\r\n                            this.message = \"Email already not exists\";\r\n                            this.setState({\r\n                                statusFailed: true,\r\n                            })\r\n                            break;\r\n                        default:\r\n                            this.message = \"Enter again\";\r\n                            this.setState({\r\n                                statusFailed: true,\r\n                            })\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.message = \"Error system\";\r\n                    this.setState({\r\n                        statusFailed: true,\r\n                    })\r\n                    console.log(\"thất bại\");\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    // Handle user blue change in input\r\n    blurEmail = () => {\r\n        var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        const event = document.querySelector('#email');\r\n        const elementValue = event.value;\r\n        const formGroup = event.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            this.setState({\r\n                statusSendCode: false,\r\n            })\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurPassword = () => {\r\n        const e = document.getElementById('password');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\r\n            return false;\r\n        } else if (e.value.length < 6) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurCode = () => {\r\n        const e = document.getElementById('code');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (this.state.code === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please press Send Code\"\r\n            return false\r\n        } else if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter code here\"\r\n            return false\r\n        } else if (elementValue !== this.state.code) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Code is incorrect\"\r\n            return false\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurRePassword = () => {\r\n        const e = document.getElementById('re-password')\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (document.getElementById('password').value !== elementValue) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Re-password not correct\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true\r\n        }\r\n    }\r\n\r\n    changeInput = (e) => {\r\n        const formGroup = e.target.parentElement.parentElement;\r\n        formGroup.classList.remove('invalid');\r\n        formGroup.querySelector('.form-message').innerText = \"\";\r\n    }\r\n\r\n    render() {\r\n        const enterPress = this.findPassword;\r\n        document.onkeydown = function (e) {\r\n            switch (e.which) {\r\n                case 13:\r\n                    enterPress(e);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"form-findpass\">\r\n                    <div className=\"auth-form\">\r\n                        <Avatar className=\"auth-form__avatar\">\r\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\r\n                                <FiSend></FiSend>\r\n                            </IconContext.Provider>\r\n                        </Avatar>\r\n                        <div className=\"auth-form__container\">\r\n                            <div className=\"auth-form__header\">\r\n                                <div className=\"auth-form__heading\">Find password</div>\r\n                                <NavLink onclick=\"\" to=\"/login\" className=\"auth-form__switch-btn\"><BsBoxArrowInLeft className=\"arrow-return\"></BsBoxArrowInLeft></NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"auth-form__body\">\r\n                            <form action=\"/findpass-submit?_method=PUT\" method=\"POST\" id=\"findpass-form\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"Ex: abc@gmail.com\" type=\"text\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"code\" className=\"form-label\">Code</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsCodeSlash className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurCode()} name=\"code\" rules=\"required|email\" id=\"code\" placeholder=\"Ex: ABC321\" type=\"text\" />\r\n                                        <button type=\"button\" disabled={this.state.statusSendCode} onClick={() => this.sendCode()} class=\"btn btn-primary disabel send-code\">SEND</button>\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\" className=\"form-label\">New password</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurPassword()} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\" className=\"form-label\">Re-password</label>\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurRePassword()} name=\"password\" rules=\"required|min:6\" id=\"re-password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"auth-form__btn\">\r\n                                    <div onClick={(e) => this.findPassword(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Find Password</div>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.statusSuccess ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Login\\Register.js",["90","91","92","93"],"import React, { Component } from 'react';\r\nimport '../../CSS/Login.css'\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport Avatar from '@mui/material/Avatar'\r\nimport { IconContext } from \"react-icons\";\r\nimport { FiChevronLeft, FiUserPlus, FiXSquare } from \"react-icons/fi\";\r\nimport { BsFillEnvelopeFill, BsLockFill, BsCodeSlash } from \"react-icons/bs\";\r\nimport { FaPhoneSquare } from \"react-icons/fa\";\r\nimport axios from 'axios';\r\nimport Alert from '@mui/material/Alert';\r\nimport emailjs from 'emailjs-com';\r\nimport { touchRippleClasses } from '@mui/material';\r\nvar bcrypt = require('bcryptjs');\r\n\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n            code: \"\",\r\n            statusSendCode: true,\r\n            statusFailed: false,\r\n            statusSuccess: false,\r\n        }\r\n    }\r\n\r\n    message = \"\";\r\n\r\n    // Send code tới người dùng\r\n    sendCode = (a = this.makeCode(6)) => {\r\n        this.setState({\r\n            code: a,\r\n        })\r\n        emailjs.init(\"user_K1g5N5hUDI0rjsa1uRoI4\");\r\n        emailjs.send(\"gmail_main\", \"template_plasdgf\", {\r\n            To_mail: `${document.getElementById('email').value}`,\r\n            code: `${a}`,\r\n        })\r\n            .then((response) => {\r\n                console.log('SUCCESS!', response.status, response.text);\r\n            }, (err) => {\r\n                console.log('FAILED...', err);\r\n            });\r\n    }\r\n\r\n    // status SignUp \r\n    SignUp = (e) => {\r\n        this.OutAlert();\r\n        if (this.blurEmail() && this.blurCode() && this.blurPassword() && this.blurRePassword() && this.blurTel()) {\r\n            axios.post(`http://localhost:5000/register-with-email`, {\r\n                email: document.getElementById('email').value,\r\n                password: this.hash(document.getElementById('password').value),\r\n                tel: document.getElementById('tel').value,\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    console.log(\"thành công\");\r\n                    switch (res.data.status) {\r\n                        case 1:\r\n                            this.message = \"Signup success\";\r\n                            this.setState({\r\n                                statusSuccess: true,\r\n                            })\r\n                            localStorage.setItem('token', res.data.token);\r\n                            break;\r\n                        case -4:\r\n                            this.message = \"Email already exists\";\r\n                            this.setState({\r\n                                statusFailed: true,\r\n                            })\r\n                            break;\r\n                        default:\r\n                            this.message = \"Enter again\";\r\n                            this.setState({\r\n                                statusFailed: true,\r\n                            })\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.message=\"Error system\"\r\n                    this.setState({\r\n                        statusFailed: true,\r\n                    })\r\n                    console.log(\"Thất bại\");\r\n                })\r\n\r\n        }\r\n    }\r\n\r\n    // Out Alert\r\n    OutAlert = () => {\r\n        this.setState({\r\n            statusFailed: false,\r\n            statusSuccess: false,\r\n        })\r\n    }\r\n\r\n    // Tạo mã code cho người dùng xác nhận\r\n    makeCode = (length) => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() *\r\n                charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // Hashpassword\r\n    hash = (pass) => {\r\n        var hash = bcrypt.hashSync(pass, 12)\r\n        return hash;\r\n    }\r\n\r\n\r\n    // Handle user : blur, change in input\r\n    blurEmail = () => {\r\n        const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        const e = document.getElementById('email');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Email is not in the correct format\";\r\n            this.setState({\r\n                statusSendCode: true,\r\n            })\r\n            return false\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            this.setState({\r\n                statusSendCode: false,\r\n            })\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurCode = () => {\r\n        const e = document.getElementById('code');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (this.state.code === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please press Send Code\"\r\n            return false\r\n        } else if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter code here\"\r\n            return false\r\n        } else if (elementValue !== this.state.code) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Code is incorrect\"\r\n            return false\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurPassword = () => {\r\n        const e = document.getElementById('password');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\"\r\n            return false;\r\n        } else if (e.value.length < 6) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Enter at least 6 characters\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    blurRePassword = () => {\r\n        const e = document.getElementById('re-password')\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (document.getElementById('password').value !== elementValue) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Re-password not correct\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true\r\n        }\r\n    }\r\n\r\n    blurTel = () => {\r\n        const e = document.getElementById('tel');\r\n        const elementValue = e.value;\r\n        const formGroup = e.parentElement.parentElement;\r\n        const regex = /^\\d+$/;\r\n        if (elementValue === \"\") {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Please enter this field\";\r\n            return false;\r\n        } else if (!regex.test(elementValue)) {\r\n            formGroup.className = 'invalid form-group'\r\n            formGroup.querySelector('.form-message').innerText = \"Phone is not in the correct format\";\r\n            return false;\r\n        } else {\r\n            formGroup.classList.remove('invalid');\r\n            formGroup.querySelector('.form-message').innerText = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    changeInput = (e) => {\r\n        const elementValue = e.target.value;\r\n        const formGroup = e.target.parentElement.parentElement;\r\n        formGroup.classList.remove('invalid');\r\n        formGroup.querySelector('.form-message').innerText = \"\";\r\n    }\r\n\r\n    render() {\r\n        const enterPress = this.SignUp;\r\n        document.onkeydown = function (e) {\r\n            switch (e.which) {\r\n                case 13:\r\n                    enterPress(e);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"form-register\">\r\n                    <div className=\"auth-form\">\r\n                        <Avatar className=\"auth-form__avatar\">\r\n                            <IconContext.Provider value={{ color: \"blue\", size: \"3em\", className: \"global-class-name\" }}>\r\n                                <FiUserPlus></FiUserPlus>\r\n                            </IconContext.Provider>\r\n                        </Avatar>\r\n                        <div className=\"auth-form__container\">\r\n                            <div className=\"auth-form__header\">\r\n                                <div className=\"auth-form__heading\">Register</div>\r\n                                <NavLink to=\"/login\" className=\"auth-form__switch-btn\"> <FiChevronLeft className=\"auth-form__arrow-return\"></FiChevronLeft>Login</NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"auth-form__body\">\r\n                            <form action=\"/register-submit\" method=\"post\" id=\"register-form\">\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsFillEnvelopeFill className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurEmail()} name=\"email\" rules=\"required|email\" id=\"email\" placeholder=\"VD: abc@gmail.com\" type=\"text\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span><BsCodeSlash className=\"input-custom-icon\" /></span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurCode()} name=\"code\" rules=\"required|email\" id=\"code\" placeholder=\"Ex: ABC321\" type=\"text\" />\r\n                                        <button type=\"button\" disabled={this.state.statusSendCode} onClick={() => this.sendCode()} class=\"btn btn-primary disabel send-code\">SEND</button>\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurPassword()} name=\"password\" rules=\"required|min:6\" id=\"password\" placeholder=\"Emter password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <BsLockFill className=\"input-custom-icon\" ></BsLockFill>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onChange={(e) => this.changeInput(e)} onBlur={() => this.blurRePassword()} name=\"re-password\" id=\"re-password\" placeholder=\"Emter re-password\" type=\"password\" />\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-custom\">\r\n                                        <span>\r\n                                            <FaPhoneSquare className=\"input-custom-icon\" ></FaPhoneSquare>\r\n                                        </span>\r\n                                        <input className=\"form-control\" onBlur={(e) => this.blurTel(e)} onChange={(e) => this.changeInput(e)} name=\"tel\" rules=\"required\" id=\"tel\" placeholder=\"Ex: 0303030303\" type=\"tel\" />\r\n\r\n                                    </div>\r\n                                    <span className=\"form-message\" />\r\n                                </div>\r\n                                <div className=\"register-description\">Bằng cách ấn vào nút\r\n                                    <span className=\"register-description__keyword\">“ĐĂNG KÝ”</span>\r\n                                    , tôi đồng ý với\r\n                                    <span className=\"register-description__keyword\">Điều Khoản Sử Dụng</span> và\r\n                                    <div className=\"register-description__keyword\"> Chính Sách Bảo Mật</div>\r\n                                </div>\r\n                                <div className=\"auth-form__btn\">\r\n                                    <div onClick={(e) => this.SignUp(e)} className=\"auth-form__btn-log-in auth-form__switch-btn\">Sign Up</div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n                {this.state.statusSuccess ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"success\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n                {this.state.statusFailed ? <Alert onClick={() => this.OutAlert()} className=\"message-error\" severity=\"error\">{this.message} — check it out! <FiXSquare></FiXSquare></Alert> : null}\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isLogin: state.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Router\\DashboardURL.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Partials\\SideNavBar.js",["94","95","96","97"],"import React, { Component } from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport { \r\n    AiOutlineDashboard,\r\n    AiFillDashboard,\r\n    AiOutlineContainer,\r\n    AiFillContainer\r\n} from \"react-icons/ai\";\r\nimport { ImProfile } from \"react-icons/im\";\r\nimport { BsFillPeopleFill,BsInfoCircleFill} from \"react-icons/bs\";\r\nimport { \r\n    IoPeopleOutline,\r\n    IoPeopleSharp,\r\n    IoReceiptOutline,\r\n    IoReceiptSharp\r\n} from \"react-icons/io5\";\r\nimport { RiProfileFill, RiProfileLine } from \"react-icons/ri\";\r\nimport { FaSignOutAlt } from \"react-icons/fa\";\r\n\r\nimport Kurisu from '../../img/kurisu.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport '../../CSS/DashBoard.css'\r\n\r\n\r\nclass SideNavBar extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"navibar sidebar\">\r\n                    <div class=\"nav-heading\">\r\n                        <img src={Kurisu} style ={{width: 50, height: 50, borderRadius: '100%'}}></img>\r\n                        <span class=\"user-name\" style ={{marginLeft: 10, color: '#fff'}}>Makise Kurisu</span>\r\n                    </div>\r\n                    <div class=\"nav-container\">\r\n                        <NavLink className=\"nav-item\" to=\"/dashboard\">\r\n                            <AiOutlineDashboard class=\"nav-item-icon\"/>\r\n                            <AiFillDashboard class=\"nav-item-icon icon-activate\"/>   \r\n                            <span>Dashboard</span>\r\n                        </NavLink>\r\n                        <NavLink to='/profile' className=\"nav-item\" href='#'>\r\n                            <RiProfileLine class=\"nav-item-icon\"/>\r\n                            <RiProfileFill class=\"nav-item-icon icon-activate\"/>\r\n                            <span>Profile</span>\r\n                        </NavLink>\r\n                        <NavLink to='/employeemanager' className=\"nav-item\" href='#'>\r\n                            <IoPeopleOutline class=\"nav-item-icon\"/>\r\n                            <IoPeopleSharp class=\"nav-item-icon icon-activate\"/>\r\n                            <span>Employee Manager</span>\r\n                        </NavLink>\r\n                        <NavLink to=\"/goodmanager\" className=\"nav-item\" href='#'>\r\n                            <AiOutlineContainer className=\"nav-item-icon\"/>\r\n                            <AiFillContainer className=\"nav-item-icon icon-activate\"/>\r\n                            <span>Goods Manager</span>\r\n                        </NavLink>\r\n                        <NavLink to=\"/receiptmanager\" className=\"nav-item\" href='#'>\r\n                            <IoReceiptOutline class=\"nav-item-icon\"/>\r\n                            <IoReceiptSharp class=\"nav-item-icon icon-activate\"/>\r\n                            <span>Receipt Manager</span>\r\n                        </NavLink>\r\n                    </div>\r\n                    \r\n                    <div class=\"nav-footer\">\r\n                        <NavLink to=\"/login\" onClick={() => this.props.changeLoginStatus()} className=\"nav-item\" style={{flex: 5}}>\r\n                            <FaSignOutAlt class=\"nav-item-icon\"/>\r\n                            <span>Sign out</span>\r\n                        </NavLink>\r\n                        <a href=\"#\" className=\"nav-item\" style={{flex: 4}}>\r\n                            <BsInfoCircleFill class=\"nav-item-icon\"/>\r\n                            <span>About</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isLogin: state.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavBar);","D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\GoodManager.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\DashBoard.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\EmployeeManager.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\ReiceiptManager.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Profile.js",[],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Controllers\\Token.js",[],["98","99"],"D:\\UIT\\Nam3_HKI\\OOP\\SE100Project\\client\\src\\Components\\Profile\\ProfileHeader.js",["100"],"import React, { Component } from 'react';\r\nimport avatarImg from '../../img/kurisu.jpg'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Divider from '@mui/material/Divider'\r\nimport { BiEditAlt, BiReceipt } from \"react-icons/bi\";\r\n\r\nclass ProfileHeader extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"profile-header\" style={{ width: '100%', height: '350px' }}>\r\n                <Avatar\r\n                    className=\"profile-header__avt\"\r\n                    src={avatarImg}\r\n                    sx={{ width: 100, height: 100, border: '5px solid #9999996b', }}\r\n                ></Avatar>\r\n                <h2 className=\"profile-header__name\">\r\n                    Thiện Phước\r\n                </h2>\r\n                <div className=\"profile-header-des\">\r\n                    <p className=\"profile-header__description\">Description about me!</p>\r\n                    <BiEditAlt className=\"profile-header__icon\"></BiEditAlt>\r\n                </div>\r\n                <Divider className=\"profile-header__divider\"></Divider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileHeader;",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":3,"column":5,"nodeType":"107","messageId":"108","endLine":3,"endColumn":12},{"ruleId":"105","severity":1,"message":"109","line":100,"column":15,"nodeType":"107","messageId":"108","endLine":100,"endColumn":19},{"ruleId":"110","severity":1,"message":"111","line":151,"column":28,"nodeType":"112","messageId":"113","endLine":151,"endColumn":29,"suggestions":"114"},{"ruleId":"110","severity":1,"message":"111","line":151,"column":44,"nodeType":"112","messageId":"113","endLine":151,"endColumn":45,"suggestions":"115"},{"ruleId":"110","severity":1,"message":"111","line":120,"column":28,"nodeType":"112","messageId":"113","endLine":120,"endColumn":29,"suggestions":"116"},{"ruleId":"110","severity":1,"message":"111","line":120,"column":44,"nodeType":"112","messageId":"113","endLine":120,"endColumn":45,"suggestions":"117"},{"ruleId":"105","severity":1,"message":"118","line":15,"column":10,"nodeType":"107","messageId":"108","endLine":15,"endColumn":28},{"ruleId":"110","severity":1,"message":"111","line":124,"column":30,"nodeType":"112","messageId":"113","endLine":124,"endColumn":31,"suggestions":"119"},{"ruleId":"110","severity":1,"message":"111","line":124,"column":46,"nodeType":"112","messageId":"113","endLine":124,"endColumn":47,"suggestions":"120"},{"ruleId":"105","severity":1,"message":"121","line":234,"column":15,"nodeType":"107","messageId":"108","endLine":234,"endColumn":27},{"ruleId":"105","severity":1,"message":"122","line":10,"column":10,"nodeType":"107","messageId":"108","endLine":10,"endColumn":19},{"ruleId":"105","severity":1,"message":"123","line":11,"column":10,"nodeType":"107","messageId":"108","endLine":11,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":33,"column":25,"nodeType":"126","endLine":33,"endColumn":98},{"ruleId":"127","severity":1,"message":"128","line":69,"column":25,"nodeType":"126","endLine":69,"endColumn":76},{"ruleId":"101","replacedBy":"129"},{"ruleId":"103","replacedBy":"130"},{"ruleId":"105","severity":1,"message":"131","line":5,"column":21,"nodeType":"107","messageId":"108","endLine":5,"endColumn":30},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'form' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["134","135"],["136","137"],["138","139"],["140","141"],"'touchRippleClasses' is defined but never used.",["142","143"],["144","145"],"'elementValue' is assigned a value but never used.","'ImProfile' is defined but never used.","'BsFillPeopleFill' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["132"],["133"],"'BiReceipt' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"146","fix":"147","desc":"148"},{"messageId":"149","fix":"150","desc":"151"},{"messageId":"146","fix":"152","desc":"148"},{"messageId":"149","fix":"153","desc":"151"},{"messageId":"146","fix":"154","desc":"148"},{"messageId":"149","fix":"155","desc":"151"},{"messageId":"146","fix":"156","desc":"148"},{"messageId":"149","fix":"157","desc":"151"},{"messageId":"146","fix":"158","desc":"148"},{"messageId":"149","fix":"159","desc":"151"},{"messageId":"146","fix":"160","desc":"148"},{"messageId":"149","fix":"161","desc":"151"},"removeEscape",{"range":"162","text":"163"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"164","text":"165"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"166","text":"163"},{"range":"167","text":"165"},{"range":"168","text":"163"},{"range":"169","text":"165"},{"range":"170","text":"163"},{"range":"171","text":"165"},{"range":"172","text":"163"},{"range":"173","text":"165"},{"range":"174","text":"163"},{"range":"175","text":"165"},[5270,5271],"",[5270,5270],"\\",[5286,5287],[5286,5286],[3970,3971],[3970,3970],[3986,3987],[3986,3986],[4139,4140],[4139,4139],[4155,4156],[4155,4155]]