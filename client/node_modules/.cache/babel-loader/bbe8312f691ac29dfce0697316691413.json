{"ast":null,"code":"var _jsxFileName = \"D:\\\\UIT\\\\Nam3_HKI\\\\OOP\\\\SE100Project\\\\client\\\\src\\\\Router\\\\DirectionURL.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Body from '../Components/Body';\nimport Login from '../Components/Login';\nimport Register from '../Components/Register';\nimport { connect } from 'react-redux';\nimport ForgotPassword from '../Components/ForgotPassword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DirectionURL extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.notLogin = () => {\n      return /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/forgot\",\n          children: /*#__PURE__*/_jsxDEV(ForgotPassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.Login = () => {\n      return /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Body, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.props.isLogin ? this.Login() : this.notLogin()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isLogin: state.loginStatus\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    changeLoginStatus: () => {\n      dispatch({\n        type: \"CHANGE_LOGIN_STATUS\"\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DirectionURL);","map":{"version":3,"sources":["D:/UIT/Nam3_HKI/OOP/SE100Project/client/src/Router/DirectionURL.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Body","Login","Register","connect","ForgotPassword","DirectionURL","notLogin","render","props","isLogin","mapStateToProps","state","ownProps","loginStatus","mapDispatchToProps","dispatch","changeLoginStatus","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,KAFJ,EAGIC,MAHJ,QAIO,kBAJP;AAKA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;;AAGA,MAAMC,YAAN,SAA2BV,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAGjCW,QAHiC,GAGtB,MAAM;AACb,0BACI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAEL;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAA,iCACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAA,iCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAUI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAA,iCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAgBH,KApBgC;;AAAA,SAsBjCA,KAtBiC,GAsBzB,MAAM;AACV,0BACI,QAAC,MAAD;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAA,iCACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KA9BgC;AAAA;;AAgCjCM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,gBACK,KAAKC,KAAL,CAAWC,OAAX,GAAqB,KAAKR,KAAL,EAArB,GAAoC,KAAKK,QAAL;AADzC;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAtCgC;;AAyCrC,MAAMI,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHH,IAAAA,OAAO,EAAEE,KAAK,CAACE;AADZ,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWH,QAAX,KAAwB;AAC/C,SAAO;AACHI,IAAAA,iBAAiB,EAAE,MAAM;AACrBD,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAGH;AALE,GAAP;AAOH,CARD;;AAWA,eAAed,OAAO,CAACO,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CT,YAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch\r\n} from 'react-router-dom';\r\nimport Body from '../Components/Body';\r\nimport Login from '../Components/Login';\r\nimport Register from '../Components/Register';\r\nimport { connect } from 'react-redux';\r\nimport ForgotPassword from '../Components/ForgotPassword';\r\n\r\n\r\nclass DirectionURL extends Component {\r\n    \r\n\r\n    notLogin = () => {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/login\" component={Login}>\r\n                    {/* <Login /> */}\r\n                </Route>\r\n                <Route path=\"/forgot\">\r\n                    <ForgotPassword />\r\n                </Route>\r\n                <Route path=\"/register\">\r\n                    <Register />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Login />\r\n                </Route>\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    Login = () => {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/\">\r\n                    <Body />\r\n                </Route>\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.isLogin ? this.Login() : this.notLogin()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isLogin: state.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DirectionURL);"]},"metadata":{},"sourceType":"module"}