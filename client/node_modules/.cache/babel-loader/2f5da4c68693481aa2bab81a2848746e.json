{"ast":null,"code":"var _jsxFileName = \"D:\\\\UIT\\\\Nam3_HKI\\\\OOP\\\\SE100Project\\\\client\\\\src\\\\Components\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.hash = () => {\n      var bcrypt = require('bcryptjs');\n\n      var salt = bcrypt.genSaltSync(10);\n      var pass = \"lngthinphc\";\n      bcrypt.hash(pass, 12).then(hashedpassword => {\n        hash = hashedpassword;\n      }).catch(error => {});\n      return hash;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.hash, \"Hello \\u0111\\xE2y l\\xE0 login\", /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"nav-link\",\n        to: \"/register\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        onClick: () => this.props.changeLoginStatus(),\n        children: \"Nh\\u1EADp \\u0111\\u1EC3 \\u0111\\u1ED5i tr\\u1EA1ng th\\xE1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isLogin: state.loginStatus\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    changeLoginStatus: () => {\n      dispatch({\n        type: \"CHANGE_LOGIN_STATUS\"\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["D:/UIT/Nam3_HKI/OOP/SE100Project/client/src/Components/Login.js"],"names":["React","Component","connect","Link","NavLink","Login","hash","bcrypt","require","salt","genSaltSync","pass","then","hashedpassword","catch","error","render","props","changeLoginStatus","mapStateToProps","state","ownProps","isLogin","loginStatus","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACIC,IADJ,EAEIC,OAFJ,QAGO,kBAHP;;;AAMA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAG1BK,IAH0B,GAGnB,MAAM;AACT,UAAIC,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,UAAIC,IAAI,GAAGF,MAAM,CAACG,WAAP,CAAmB,EAAnB,CAAX;AACA,UAAIC,IAAI,GAAG,YAAX;AACAJ,MAAAA,MAAM,CAACD,IAAP,CAAYK,IAAZ,EAAkB,EAAlB,EACCC,IADD,CACOC,cAAD,IAAoB;AACtBP,QAAAA,IAAI,GAAGO,cAAP;AACH,OAHD,EAICC,KAJD,CAIQC,KAAD,IAAW,CAAE,CAJpB;AAMA,aAAOT,IAAP;AACH,KAdyB;AAAA;;AAgB1BU,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,iBACK,KAAKV,IADV,gDAGI,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,UAAnB;AAA8B,QAAA,EAAE,EAAC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAI,QAAA,OAAO,EAAE,MAAM,KAAKW,KAAL,CAAWC,iBAAX,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAzByB;;AA4B9B,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHC,IAAAA,OAAO,EAAEF,KAAK,CAACG;AADZ,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWJ,QAAX,KAAwB;AAC/C,SAAO;AACHH,IAAAA,iBAAiB,EAAE,MAAM;AACrBO,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAGH;AALE,GAAP;AAOH,CARD;;AAWA,eAAexB,OAAO,CAACiB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CnB,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Link,\r\n    NavLink\r\n} from \"react-router-dom\";\r\n\r\n\r\nclass Login extends Component {\r\n    hash;\r\n\r\n    hash = () => {\r\n        var bcrypt = require('bcryptjs');\r\n        var salt = bcrypt.genSaltSync(10);\r\n        var pass = \"lngthinphc\"\r\n        bcrypt.hash(pass, 12)\r\n        .then((hashedpassword) => {\r\n            hash = hashedpassword;\r\n        })\r\n        .catch((error) => {})\r\n\r\n        return hash;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.hash}\r\n                Hello đây là login\r\n                <NavLink className=\"nav-link\" to=\"/register\">Register</NavLink>\r\n                <h1 onClick={() => this.props.changeLoginStatus()}>Nhập để đổi trạng thái</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isLogin: state.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeLoginStatus: () => {\r\n            dispatch({\r\n                type: \"CHANGE_LOGIN_STATUS\",\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}